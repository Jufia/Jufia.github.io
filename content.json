[{"title":"线性代数-特征值与特征向量","date":"2023-02-17T13:31:22.000Z","path":"2023/02/17/线性代数-特征值与特征向量/","text":"¶摘要 ¶证明\\lambda的n次方是A^n的特征值 因为是阶方阵的特征值, 故有维列向量使得, 于是:","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"线性代数","slug":"Math/线性代数","permalink":"http://example.com/categories/Math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"LaTeX(10)-工大毕业论文模板 hithesis","date":"2023-02-17T13:25:39.000Z","path":"2023/02/17/LaTeX-10-工大毕业论文模板/","text":"¶摘要 下载渠道、使用方法、使用说明、插图图片、交叉引用、bib、公式编号 ¶前言 使用方法 详见Github官方首页：mhttps://github.com/hithesis/hithesis 本科毕业设计使用examples\\hitart\\reports文件夹 examples\\hitart\\reports\\report.tex文件中定义了基本编译选择: 本科\\硕士\\博士\\开题\\中期\\结题, 在documentclass中选择即可. examples\\hitart\\reports\\hithesisart.cls文件中定义了使用的宏包以及大部分设置; examples\\hitart\\reports\\hithesisart.cfg文件中存放了有关theorem的设置, 和封面的设置; examples\\hitart\\reports\\reference.bib文件用于存放所有的参考文献的bib格式; 关于编译: 可以用make, 但我没有能够自动刷新的PDF查看器, 用VScode也很好, 但注意因为要使用bib, 编译顺序要采用xelatex-&gt;bibtex-&gt;xelatex-&gt;xelatex, 例如我的设置: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105// settings.json 文件\"latex-workshop.latex.recipes\": [ { // \"name\": \"pdflatex -&gt; bibtex -&gt; pdflatex*2\", // \"tools\": [ // \"pdflatex\", // \"bibtex\", // \"pdflatex\", // \"pdflatex\" // ] \"name\": \"xelatex -&gt; bibtex -&gt; xelatex -&gt; xelatex\", \"tools\": [ \"xelatex\", \"bibtex\", \"xelatex\", \"xelatex\" ] }, { \"name\": \"xelatex\", \"tools\": [ \"xelatex\" ] }, { \"name\": \"pdflatex\", \"tools\": [ \"pdflatex\" ] }, { \"name\": \"bibtex\", \"tools\": [ \"bibtex\" ] }, { \"name\": \"latexmk\", \"tools\": [ \"latexmk\" ] } ], \"latex-workshop.latex.tools\": [ { \"name\": \"xelatex\", \"command\": \"xelatex\", \"args\": [ \"-synctex=1\", \"-interaction=nonstopmode\", \"-file-line-error\", \"%DOC%\" ] }, { \"name\": \"latexmk\", \"command\": \"latexmk\", \"args\": [ \"-synctex=1\", \"-interaction=nonstopmode\", \"-file-line-error\", \"-pdf\", \"%DOC%\" ] }, { \"name\": \"pdflatex\", \"command\": \"pdflatex\", \"args\": [ \"-synctex=1\", \"-interaction=nonstopmode\", \"-file-line-error\", \"%DOC%\" ] }, { \"name\": \"bibtex\", \"command\": \"bibtex\", \"args\": [ \"%DOCFILE%\" ] } ], \"latex-workshop.latex.clean.enabled\": true, \"latex-workshop.latex.clean.fileTypes\": [ \"*.aux\", \"*.bbl\", \"*.blg\", \"*.idx\", \"*.ind\", \"*.lof\", \"*.lot\", \"*.out\", \"*.toc\", \"*.acn\", \"*.acr\", \"*.alg\", \"*.glg\", \"*.glo\", \"*.gls\", \"*.ist\", \"*.fls\", \"*.log\", \"*.fdb_latexmk\" ], ¶图片 ¶图片排版 单张图片 123456\\begin{figure}[H] \\centering \\includegraphics[width=0.7\\textwidth]{figures/crash1.png} \\caption{Test} \\label{fig.crash1}\\end{figure} 下面是多图并排显示 123456789101112131415\\begin{figure}[h] \\centering \\begin{minipage}[b]{0.45\\textwidth} \\centering \\includegraphics[width=0.8\\textwidth]{figures/crash1.png} \\caption{text1} \\label{fig.crash2.1} \\end{minipage} \\begin{minipage}[b]{0.45\\textwidth} \\centering \\includegraphics[width=0.8\\textwidth]{figures/crash2.png} \\caption{text2} \\label{fig.crash2.2} \\end{minipage}\\end{figure} 下面是多子图 1234567891011\\begin{figure}[H] \\centering \\subfigure[name1]{ \\label{Fig.sub.1} \\includegraphics[width=0.45\\textwidth]{figures/crash1.png}} \\subfigure[name2]{ \\label{Fig.sub.2} \\includegraphics[width=0.45\\textwidth]{figures/crash2.png}} \\caption{Main name} \\label{Fig.main}\\end{figure} ¶图片编号 在文件examples\\hitart\\reports\\hithesisart.cls中添加语句 12345678\\RequirePackage[below]{placeins}%允许上一个section的浮动图形出现在下一个section的开始部分,还提供\\FloatBarrier命令,使所有未处理的浮动图形立即被处理\\RequirePackage{flafter} % 使得所有浮动体不能被放置在其浮动环境之前，以免浮动体在引述它的文本之前出现.\\RequirePackage{multirow} %使用Multirow宏包，使得表格可以合并多个row格\\RequirePackage{subfigure}%支持子图 %centerlast 设置最后一行是否居中\\RequirePackage[subfigure]{ccaption} %支持双语标题\\numberwithin{figure}{section} % 关联图片与章节\\renewcommand{\\thefigure}{\\thesection{}-\\arabic{equation}} % 修改编号格式\\captionsetup[figure]{\\abelsep=space} % 图标题去冒号 ¶公式编号 公式在equation和ailgn环境中均会编号, 但默认不会与章节联想. 打开examples\\hitart\\reports\\hithesisart.cls文件 123456\\RequirePackage{amsmath}% 在amsmath后添加语句\\RequirePackage{amsmath}\\numberwithin{equation}{section} %设置equation与章节关联\\renewcommand{\\theequation}{\\thesection{}-\\arabic{equation}} % 修改公式编号格式 ¶定理\\引理\\证明…编号 默认只会有编号, 不会联想章节 打开examples\\hitart\\reports\\hithesisart.cfg文件 1234% 将下句改写\\newtheorem{theorem}{定理}\\newtheorem{theorem}{定理}[section] ¶表格 打开examples\\hitart\\reports\\hithesisart.cls文件 123456789\\RequirePackage{longtable}\\RequirePackage{booktabs}\\heavyrulewidth=1.5pt\\lightrulewidth=1pt\\cmidrulewidth=0.5pt% &lt;--------------&gt;添加语句\\numberwithin{table}{section} % 关联表号和章节\\renewcommand{\\thetable}{\\thesection{}-\\arabic{equation}} % 修改编号格式\\captionsetup[teble]{\\abelsep=space} % 表标题去冒号 ¶引用 ¶公式 用\\ref指令结果不会有括号, 引用公式时建议采用\\eqref指令 ¶参考文献 将参考文献的bib引用格式粘贴至\\examples\\hitart\\reportplus\\reference.bib文件内 中文文献要在bib语句大括号内添加一行说明: language =\"zh\", 在原文中引用，最后出现在参考文献的标号按照引用先后顺序排列。 例如: 1234567891011121314% reference.bib@article{任立伟2019二自由度飞行姿态模拟器的模糊强化学习控制, language =\"zh\", title={二自由度飞行姿态模拟器的模糊强化学习控制}, author={任立伟 and 班晓军 and 吴奋 and 黄显林}, journal={电机与控制学报}, volume={23}, number={11}, pages={127--134}, year={2019}}% 原文中引用方式参考文献\\cite{任立伟2019二自由度飞行姿态模拟器的模糊强化学习控制}","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(09)-美赛包 easymcm","date":"2023-02-17T13:22:40.000Z","path":"2023/02/17/LaTeX-09-美赛包/","text":"¶摘要 是美赛官方latex模板 参考文献引用、外部网址链接、交叉引用（图片、公式、表格）、三线表、插入图片 ¶参考文献 1234567% 编号\\begin{thebibliography}{99}\\bibitem{1} Eleanor P. Jones, Chris Conyers, ...\\end{thebibliography}% 报刊、书名用 \\emph{} 指令显示斜体Einstein, A., Podolsky, B., \\&amp; Rosen, N. (1935). Can quantum-mechanical description ofphysical reality be considered complete?. \\emph{Physical review}, 47(10), 777. ¶外部网址链接 1\\url{https://www.cnblogs.com/xjtu-blacksmith/p/easymcm.html} ¶交叉引用 ¶引用参考文献 1here is the referance \\cite{1} said... ¶引用表格、图片 ref{ltable} 123456789101112131415161718192021222324252627The primary notations used in this paper are listed in Table \\ref{表格代名} The primary notations used in this paper are listed in Table \\ref{notation}.\\begin{table}[!htbp]\\begin{center}\\caption{Notations}\\begin{tabular}{cl} \\toprule \\multicolumn{1}{m{3cm}}{\\centering Symbol} &amp;\\multicolumn{1}{m{8cm}}{\\centering Definition}\\\\ \\midrule $A$&amp;the first one\\\\ $b$&amp;the second one\\\\ $\\alpha$ &amp;the last one\\\\ \\bottomrule\\end{tabular}\\label{tb:notation} % 表格代名为notion\\end{center}\\end{table}The results are shown in Figure \\ref{fig:result}\\begin{figure}[htbp]\\centering\\includegraphics[width=.8\\textwidth]{water.png}\\caption{The result of Model 2}\\label{fig:result}\\end{figure} ¶引用公式 123456789101112131415161718The detail can be described by equation \\eqref{eq:heat}:\\begin{equation}\\label{eq:heat}\\frac{\\partial u}{\\partial t} - a^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} + \\frac{\\partial^2 u}{\\partial z^2} \\right) = f(x, y, z, t)\\end{equation}The Poisson Distribution here can be written as equation \\eqref{Poisson}:\\begin{equation}\\label{Poisson} P(x) = \\frac{\\lambda^x}{x!} \\times e^{-\\lambda}\\end{equation}# 左对齐环境，无首行缩进```latex \\begin{flushleft} % 左对齐环境，无首行缩进 \\textbf{To:} Heishan Yan\\\\ \\textbf{From:} Team 1234567\\\\ \\textbf{Date:} October 1st, 2019\\\\ \\textbf{Subject:} A better choice than MS Word: \\LaTeX \\end{flushleft} ¶三线表 123456789101112131415\\begin{table}[!htbp]\\begin{center}\\caption{Notations}\\begin{tabular}{cl} \\toprule \\multicolumn{1}{m{3cm}}{\\centering Symbol} &amp;\\multicolumn{1}{m{8cm}}{\\centering Definition}\\\\ \\midrule $A$&amp;the first one\\\\ $b$&amp;the second one\\\\ $\\alpha$ &amp;the last one\\\\ \\bottomrule\\end{tabular}\\label{tb:notation}\\end{center}\\end{table} ¶插入图片 12345\\begin{figure}[htbp]\\centering\\includegraphics[width=.8\\textwidth]{water.png}\\caption{The result of Model 2}\\label{fig:result}\\end{figure}","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(08)-有序列表和无序列表","date":"2023-02-17T13:19:32.000Z","path":"2023/02/17/LaTeX-08-有序列表和无序列表/","text":"¶摘要 itemize无序列表、enumerate有序列表、标号形状、列表缩进 ¶itemize无序列表 {itemize}命令对文本进行简单的排列，不是采用序号，默认是用实心圆点符号进行排列。这个命令需要和\\item配合使用。 itemize 默认采用实心点编号 12345\\begin{itemize} \\item one \\item two \\item ...\\end{itemize} ¶有序列表 {enumerate}产生所需要的编号，默认是采用数字1,2,3……进行排列。使用其他形式的编号需要先加载包，使用命令\\usepackage{enumerate} 1234567891011121314\\begin{enumerate} \\item one \\item two \\item ...\\end{enumerate}% 其他形式\\begin{enumerate}[i)]\\begin{enumerate}[1)]% 自定义编号形式\\begin{description} \\item[Step1] one \\item[Step2] two \\item[Step3] ...\\end{description} ¶Label and cross references format label=&lt;commands&gt; 设置要在当前关卡中使用的标签。 \\alph、\\Alph、\\arabic、\\roman 和 \\Roman 的一组星号版本，不带参数代表枚举中的当前计数器。 它也适用于 \\value（前提是不计算最宽标签或最宽标签） * 使用，见下文）。 12\\begin{enumerate}[label=\\emph{\\alph*})]\\begin{enumerate}[label=\\protect\\fcolorbox{blue}{yellow}{\\protect\\ding{\\value*}}] label*=&lt;commands&gt; 与标签类似，但其值附加到父标签。 例如，以下定义了一个合法列表（1.、1.1.、1.1.1. 等）： 12\\newlist{legal}{enumerate}{10}\\setlist[legal]{label*=\\arabic*.} ref=&lt;commands&gt; 默认情况下，标签集也是交叉引用和 \\the… 的形式（覆盖父层次级别中的设置），但您可以使用此键定义不同的格式。 例如，要删除右括号： 1\\begin{enumerate}[label=\\emph{\\alph*}), ref=\\emph{\\alph*}] ¶Injecting code 在列表开始之前执行代码（更准确地说，在用于定义它们的列表环境的第二个参数中）。 未加星号的形式设置要执行的代码，覆盖任何以前的值，而加星号的形式将代码添加到现有的（在设置 层次结构，见下文，与封闭列表/文本无关）。 例如，它可以包含规则和文本，但这还没有经过广泛的测试。 所有计算已完成，您可以访问和操作列表参数。 12345678910En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[labelindent=\\parindent,leftmargin=*] % 注意此行\\item lanza en astillero,\\item adarna antigua,\\item roc\\’{\\i}n flaco, y\\item galgo corredor.\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 12345678910En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[leftmargin=*] % labelindent=0pt by default, 注意此行\\item lanza en astillero,\\item adarna antigua,\\item roc\\’{\\i}n flaco, y\\item galgo corredor.\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 12345678910En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[leftmargin=\\parindent] % 注意此行\\item lanza en astillero,\\item adarna antigua,\\item roc\\’{\\i}n flaco, y\\item galgo corredor.\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 12345678910En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[labelindent=\\parindent, leftmargin=*, label=\\Roman*., widest=III,align=left] % 注意此行\\item lanza en astillero,\\item adarna antigua,\\item roc\\’{\\i}n flaco, y\\item galgo corredor.\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 12345678910En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[label=\\fbox{\\arabic*}] % 注意此行\\item lanza en astillero,\\item adarna antigua,\\item roc\\’{\\i}n flaco, y\\item galgo corredor.\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 使用嵌套表格 123456789101112131415En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{enumerate}[label=(\\alph*), labelindent=\\parindent,leftmargin=*, start=12]\\item lanza en astillero,\\begin{enumerate}[label=(\\alph{enumi}.\\roman*), leftmargin=*, start=7]\\item adarna antigua,\\end{enumerate}\\item roc\\’{\\i}n flaco, y\\begin{enumerate}[label=(\\alph{enumi}.\\roman*), leftmargin=*, resume]\\item galgo corredor.\\end{enumerate}\\end{enumerate}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados... 1234567891011En un lugar de la Mancha, de cuyo nombre no quiero acordarme,no ha mucho tiempo que viv\\’{\\i}a un hidalgo de los de\\begin{description}[font=\\sffamily\\bfseries, leftmargin=3cm,style=nextline]\\item[Lo primero que ten\\’{\\i}a el Quijote] lanza en astillero,\\item[Lo segundo] adarna antigua,\\item[Lo tercero] roc\\’{\\i}n flaco, y\\item[Y por \\’{u}ltimo, lo cuarto] galgo corredor.\\end{description}Una olla de algo m\\’{a}s vaca que carnero, salpic\\’{o}n las m\\’{a}snoches, duelos y quebrantos los s\\’{a}bados...","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(07)-表格booktabs","date":"2023-02-17T13:13:16.000Z","path":"2023/02/17/LaTeX-07-表格/","text":"¶摘要 表格booktabs、tabular、长表longtables、并排排列表格 \\minipage、三线表、修改表格的线条、合并单元格、元素缩进… ¶表格的总体布局 将单位放置在列标题中，而不是在表格主体中； 在小数点前加一个数字； 因此 0.1 而不仅仅是 .1； 不要使用“同上”符号或任何其他此类约定来重复以前的价值。 在许多情况下，空白也同样适用。 如果不会，然后重复该值。 ¶示例 123456789101112131415\\begin{table}[!htbp]\\begin{center}\\caption{Notations}\\begin{tabular}{cl} \\toprule \\multicolumn{1}{m{3cm}}{\\centering Symbol} &amp;\\multicolumn{1}{m{8cm}}{\\centering Definition}\\\\ \\midrule $A$&amp;the first one\\\\ $b$&amp;the second one\\\\ $\\alpha$ &amp;the last one\\\\ \\bottomrule\\end{tabular}\\label{tb:notation}\\end{center}\\end{table} ¶语法 1234567891011121314\\begin{tabular}[&lt;垂直对齐选项&gt;]{&lt;列格式说明&gt;}A &amp; B &amp; C \\\\D &amp; E &amp; F \\\\\\end{tabular}% 列格式：lcr 加竖线 l|c|r% 列格式说明符：% p{&lt;宽度&gt;}，表示本列具有固定的宽度，表格内容在其中可以自动换行（但不能手动用 \\\\ 进行换行），% 并可以用 \\raggedleft，\\centering 等命令进行对齐。% @{&lt;内容&gt;}，添加任意内容，不占表项计数，同时取消表列间的距离。例如我们需要某一列的数据按小数点对齐，% 就可以用 r@{.}l 这样定义两列，分别输入整数部分和小数部分，实现这个效果。% *{&lt;计数&gt;}{&lt;列格式说明&gt;}，将部分列格式说明重复多次。p{&lt;宽度&gt;}，表示本列具有固定的宽度，表格内容在其中% 可以自动换行（但不能手动用 \\\\ 进行换行），并可以用 \\raggedleft，\\centering 等命令进行对齐。% 垂直对齐选项表示在行内使用时，表格的哪一部分与文字对齐，其参数可以是 t 或者 b，默认条件是居中对齐。% [b]与底部对齐,[c]垂直居中对齐% ¶新命令的使用 ¶\\toprule \\midrule \\bottomrule 在最简单的情况下，表格以 \\toprule 开头，有单行列 \\midrule \\底部规则标题，然后是这里称为 \\midrule 的划分规则； 在数据列之后我们以 \\bottomrule 结束。 大多数图书出版商设置 \\toprule 和 \\bottomrule 比中间的更重（即更厚或更暗）\\midrule. 但是，当表格以非常小的字体出现时，有时不可能做出这种区分，而且很多期刊经常 使用相同重量的所有规则。 新命令生成的规则无法保证与序言中的 {|} 字符生成的垂直连接。 这是一个功能（见上文）。 你不应该在表格中使用垂直规则。 ¶\\doublerulesep 如果你无法阻止自己使用双重规则，那么即使是像 \\toprule\\bottomrule\\midrule 这样奇怪的结构也不会产生错误消息（就像你可以使用双重 \\hline 一样）。 这些规则将由普通的 LATEX 分隔符 \\doublerulesep 分隔。 ¶\\morecmidrules 然而，如果你的变态是想要双 \\cmidrules，你将需要额外的命令 \\morecmidrules 来正确执行此操作，因为通常连续两个 \\cmidrules 是一个理智的结构，需要在同一“规则行”上使用两个规则。 因此在 1234567\\cmidrule{1-2}\\cmidrule{1-2} %第二个命令写入一个规则，只覆盖第一个；\\cmidrule{1-2}\\morecmidrules\\cmidrule{1-2} % 这为您提供了第一列和第二列之间的双重规则，由 \\cmidrulesep 分隔（注意：%由于 \\cmidrule 通常很轻，普通 \\doublerulesep 可能空间太大）。 在给出 %\\morecmidrules 命令之前完成一整行规则。 请注意，如果 \\morecmidrules 不紧跟 %\\cmidrule （即它不是一般的空间生成命令），则 \\morecmidrules 没有任何效果。 ¶\\specialrule 如果你发现某些特别需要精确地指定 0.5 em，例如，在两条规则之间，你可以使用诸如 \\midrule \\addlinespace[.5em] \\midrule 这样的结构。 不过，出于罕见的宽容，我还提供了命令 1\\specialrule{hwdi}{habovespacei}{hbelowspacei} 其中所有三个参数都是强制性的（我懒得在默认情况下编程）。 如果你经常使用这个，你误解了上面给出的指南的目的和内容。 前面的规则不会在下面添加其默认空格，而后面的规则不会在其自身上方添加空格，因此您会得到参数中指定的空格。 ¶\\multicolumn 合并单元格 1\\multicolumn{&lt;项数&gt;}{&lt;列格式说明&gt;}{&lt;内容&gt;} ¶默认设置 这里的规则命令都采用默认值，可以在文档中重置（最好，但不一定，在序言中）。 对于顶部和底部这个规则默认是 \\heavyrulewidth 和 midrules 它是 \\lightrulewidth（下面 详细描述）。 在非常罕见的情况下，您需要做一些特殊的事情，您可以使用具有正式的规则命令的可选参数语法如下： 12345\\toprule[&lt;wd&gt;]\\midrule[&lt;wd&gt;]\\bottomrule[&lt;wd&gt;]where &lt;wd&gt; is a TEXdimension (for example 1pt, .5em, etc.).其中 hwdi 是 TEX 尺寸（例如 1pt、.5em 等）。 此处描述的所有规则命令都在前面的结束 \\ 之后行（除了 \\toprule，它紧跟在 \\tabular{} 命令之后）； 在换句话说，在plain LATEX 允许\\hline 或\\cline 的地方。 通常我们需要一个子规则来仅扩展某些列，因为我们需要一个 \\cmidrule（LATEX 的 \\cline 命令的类似物）。 一般来说，这条规则不应该达到列的全宽，这是特别是当我们需要 在结束后立即开始 \\cmidrule 的情况另一个（如果你不是额外的，LATEX 的 \\clines 在这里相互碰撞）小心 \\extracolsep)。 因此，您通常会希望使用可选的“修剪”命令。 1\\cmidrule[hwdi](htrimi){a–b} 其中 &lt;wd&gt; 是可选的规则宽度命令，在方括号中 [like this]（这里的默认值是 \\cmidrulewidth)，最后一个参数不是可选的，给出要跨越的列号. 于生成命令的代码给出了正在使用的命令示例上例表： 123456789\\begin{tabular}{@{}llr@{}} \\toprule\\multicolumn{2}{c}{Item} \\\\ \\cmidrule(r){1-2}Animal &amp; Description &amp; Price (\\$)\\\\ \\midruleGnat &amp; per gram &amp; 13.65 \\\\&amp; each &amp; 0.01 \\\\Gnu &amp; stuffed &amp; 92.50 \\\\Emu &amp; stuffed &amp; 33.33 \\\\Armadillo &amp; frozen &amp; 8.99 \\\\ \\bottomrule\\end{tabular} 有时我们想在表格的某些行之间放置一个额外的空间； 例如，在最后一行之前，如果这是一个总数。 这只是一个插入的问题: \\addlinespace[&lt;wd&gt;] ¶长表 Booktabs and longtables 如果同时加载了 booktabs 和 longtable 包，则 booktabs 规则命令现在都可以完全按照上述方式在 longtable 中使用。 值得注意的是，在长表中，可以使用可选的左右修剪命令，它通常只适用于 \\cmidrules，与 \\toprule、\\midrule 和 \\bottomrule 一起使用（如果必须，也可以与 \\specialrule 一起使用）。 可以通过使 @{} 成为最后一个列说明符来将所有的规则修剪为 0.5em 。 在 longtables 中，\\hilne和\\hline\\hline二者都产生双重规则，在此处允许产生分页符。但是 booktabs 不能。Longtable 的 \\hline 自动加倍是有问题的，即使根据该包中的文档也是如此。但是加倍的 booktabs 规则几乎没有任何意义。万一在分页符处出现了 booktabs 规则，那么就将不得不手动进行必要的调整。 长表示例 1234567891011121314151617181920212223242526272829303132333435363738% 长表格示例，更多用法请参考 longtable 宏包文档% 以下环境及对应参数可实现表格内的自动换行与表格的自动断页% 您也可以选择自行载入 tabularx 宏包，并通过 X 参数指定对应列自动换行\\begin{longtable}{ p{4em} p{14em} p{14em} }\\caption{Basic Information about Three Main Continents (scratched from Wikipedia)}\\label{tb:longtable}\\\\\\topruleContinent &amp; Description &amp; Information \\\\\\midruleAfrica &amp; Africa Continent is surrounded by the Mediterranean Sea to thenorth, the Isthmus of Suez and the Red Sea to the northeast, the IndianOcean to the southeast and the Atlantic Ocean to the west. &amp;At about 30.3 million km$^2$ including adjacent islands, it covers 6\\%of Earth's total surface area and 20\\% of its land area. With 1.3billion people as of 2018, it accounts for about 16\\% of the world'shuman population. \\\\\\midruleAsia &amp; Asia is Earth's largest and most populous continent whichlocated primarily in the Eastern and Northern Hemispheres.It shares the continental landmass of Eurasia with the continentof Europe and the continental landmass of Afro-Eurasia with bothEurope and Africa. &amp;Asia covers an area of 44,579,000 square kilometres, about 30\\%of Earth's total land area and 8.7\\% of the Earth's total surfacearea. Its 4.5 billion people (as of June 2019) constitute roughly60\\% of the world's population. \\\\\\midruleEurope &amp; Europe is a continent located entirely in the NorthernHemisphere and mostly in the Eastern Hemisphere. It comprises thewesternmost part of Eurasia and is bordered by the Arctic Ocean tothe north, the Atlantic Ocean to the west, the Mediterranean Sea tothe south, and Asia to the east. &amp;Europe covers about 10,180,000 km$^2$, or 2\\% of the Earth's surface(6.8\\% of land area), making it the second smallestcontinent. Europe had a total population of about 741 million (about11\\% of the world population) as of 2018. \\\\\\bottomrule\\end{longtable} ¶并排排列表格 \\minipage 123456789101112131415161718192021222324252627\\begin{table}[H] \\centering \\begin{minipage}{.48\\linewidth} \\centering \\caption{The Judging Matrix} \\label{tab:judging Matrix} \\begin{tabular}{|c|c|c|c|} \\hline &amp;Distance &amp; Tree &amp; Elevation \\\\ \\hline Distance &amp; 1 &amp; $\\frac{1}{2}$ &amp; $\\frac{2}{3}$ \\\\ \\hline Tree &amp; 2 &amp; 1 &amp; 2 \\\\ \\hline Elevation &amp; $\\frac{2}{3}$ &amp; $\\frac{1}{2}$ &amp; 1 \\\\ \\hline \\end{tabular} \\end{minipage} \\begin{minipage}{.48\\linewidth} \\centering \\caption{The Results} \\label{tb: result} \\begin{tabular}{|c|c|} \\hline $\\lambda_i$ &amp; 3.02 \\\\ \\hline $CR_i$ &amp; 0.016 \\\\ \\hline \\end{tabular} \\begin{tabular}{|c|c c c|} \\hline &amp; Distance &amp;Tree&amp; Elevation \\\\ \\hline \\textbf{W} &amp;0.285 &amp;0.498&amp; 0.217 \\\\ \\hline \\end{tabular} \\end{minipage}\\end{table} ¶合并单元格 12345678\\multicolumn{2}{l}\\multicolumn{2}{l}{合并一行两列} \\begin{longtable}{p{2em}p{12em}p{18em} } 式中 &amp; $\\bm{\\varXi } = diag(\\bm{J}, m\\bm{I}_3) \\in \\mathbb{R} ^{6 \\times 6}$ &amp; 航天器质量与转动惯量构成的矩阵; \\\\ &amp; $\\bm{\\varGamma }_c = \\begin{bmatrix} \\bm{\\tau} _c^T, \\bm{u} _c^T \\end{bmatrix} \\in \\mathbb{R} ^6$ &amp; 航天器的控制输出; \\\\ &amp; $\\bm{\\varGamma }_d = \\begin{bmatrix} \\bm{\\tau} _d^T, \\bm{u} _d^T \\end{bmatrix} \\in \\mathbb{R} ^6$ &amp; 航天器所受的外部总干扰; \\\\ &amp; \\multicolumn{2}{l}{$f(\\bm{\\varXi }) = [\\bm{0}_{3 \\times 1},(-\\left(\\frac{m\\mu}{\\left\\lVert \\boldsymbol{R}^I \\right\\rVert ^3} \\right) \\boldsymbol{R}_b)^T]^T \\in \\mathbb{R} ^6$} \\\\ \\end{longtable} ¶Booktabs and and the colortbl package Booktabs 包现在与 colortbl 包兼容。 如果加载了 colortbl 包，\\arrayrulecolor 命令将生成彩色规则。 ¶Technical summary of commands 新规则命令在标准tabular（和 array ）环境中有效，在 \\usepackage{array} 的修改表格和数组中，以及在 \\usepackage{longtable} 之后的标准表和 longtables 中有效。 这些命令遵循 \\hline 的标准放置语法。 连续的规则命令之间可以有空格（包括回车，但不能有两个回车） ¶The code 当前版本在文件顶部定义，看起来像这样: 12341 h∗packagei2 %\\NeedsTeXFormat{LaTeX2e}3 %\\ProvidesPackage{booktabs}4 % [\\filedate\\space version\\fileversion] 首先，我们设置上述新维度： 12345678910111213141516171819205 \\newdimen\\heavyrulewidth6 \\newdimen\\lightrulewidth7 \\newdimen\\cmidrulewidth8 \\newdimen\\belowrulesep9 \\newdimen\\belowbottomsep10 \\newdimen\\aboverulesep11 \\newdimen\\abovetopsep12 \\newdimen\\cmidrulesep13 \\newdimen\\cmidrulekern14 \\newdimen\\defaultaddspace15 \\heavyrulewidth=.08em16 \\lightrulewidth=.05em17 \\cmidrulewidth=.03em18 \\belowrulesep=.65ex19 \\belowbottomsep=0pt20 \\aboverulesep=.4ex21 \\abovetopsep=0pt22 \\cmidrulesep=\\doublerulesep23 \\cmidrulekern=.5em24 \\defaultaddspace=.5em 还有一些最终用户不感兴趣的内部计数器： 1234567825 \\newcount\\@cmidla26 \\newcount\\@cmidlb27 \\newdimen\\@aboverulesep28 \\newdimen\\@belowrulesep29 \\newcount\\@thisruleclass30 \\newcount\\@lastruleclass31 \\@lastruleclass=032 \\newdimen\\@thisrulewidth 下面将根据需要进行描述. ¶\\futurenonspacelet 下面将根据需要进行描述. 在有参数的宏之后查找下一个（非空格）标记时，使用 \\futurenonspacelet 而不是 \\futurelet。（在没有参数的宏之后，无论如何都会忽略空格，因此不需要 \\futurenonspacelet。） 12345633 \\def\\futurenonspacelet#1{\\def\\@BTcs{#1}%34 \\afterassignment\\@BTfnslone\\let\\nexttoken= }35 \\def\\@BTfnslone{\\expandafter\\futurelet\\@BTcs\\@BTfnsltwo}36 \\def\\@BTfnsltwo{\\expandafter\\ifx\\@BTcs\\@sptoken\\let\\next=\\@BTfnslthree37 \\else\\let\\next=\\nexttoken\\fi \\next}38 \\def\\@BTfnslthree{\\afterassignment\\@BTfnslone\\let\\next= }","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(06)-代码块 listings","date":"2023-02-17T13:10:46.000Z","path":"2023/02/17/LaTeX-06-代码块/","text":"¶摘要 代码高亮、行号 ¶说明 “listing”这个名字比较短，的确。 但是其他包已经使用该名称定义环境。 为了与此类包兼容，所有命令清单包的环境和环境使用前缀“lst” 最小格式如下 123456789\\documentclass{article}\\usepackage{listings}\\begin{document}\\lstset{language=Pascal} Insert Pascal examples here. \\end{document} ¶代码片段 代码片段是指在 paragraphs 间的代码片段 环境提供了一个可选参数。 它告诉包执行特殊任务，例如，仅打印第 2-5 行： 12345678910 \\begin{lstlisting}[firstline=2, lastline=5] for i:=maxint to 0 do begin { do nothing } end; Write(’Case insensitive ’); WritE(’Pascal keywords.’);\\end{lstlisting} 默认存在框架，此例中第五行为空行，框架显示空行不打印。但事实上有时候我们或许并不需要框格，或者需要显示空行，就必须告诉 listing宏包不能丢弃他们。关键‘showlines’‘showspeace’ 控制这些空行 123\\lstset{showspaces=true, %显示空格：开 showtabs=true, %显示tab：开 tab=\\rightarrowfill} %tab格式为右箭头 ¶默认设置 关键字：粗体排版，斜体注释； 字符串中的空格用‘.’显示 修改设置： 12345678\\lstset{% general command to set parameter(s) basicstyle=\\small, % print whole listing small keywordstyle=\\color{black}\\bfseries\\underbar, % underlined bold black keywords identifierstyle=, % nothing happens commentstyle=\\color{white}, % white comments stringstyle=\\ttfamily, % typewriter type for strings showstringspaces=false} % no special string spaces 您请求了白色评论，但我可以在左侧看到评论。 有几个可能的原因： (1)您将文档打印在非白色上纸。 (2) 如果您以 .dvi 文件的形式查看本文档，您的查看器似乎有颜色特价的问题。 尝试在白纸上打印页面。 (3) 如果打印输出白皮书显示评论，颜色特价不适合您的打印机或打印机司机。 重新创建文档并再试一次——并确保颜色包是配置良好。 ¶行号 设置： 1234567\\lstset{ numbers=left, numberstyle=\\tiny, stepnumber=2, numbersep=5pt} ¶布局元素 ¶垂直空间 The keys aboveskip and belowskip control the vertical space above and below displayed listings. Both keys get a dimension or skip as value and are initialized to \\medskipamount. ¶框架 The key frame takes the verbose values none, leftline, topline, bottomline, lines (top and bottom), single for single frames, or shadowbox.","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(05)-页面设置 geometry","date":"2023-02-17T13:09:38.000Z","path":"2023/02/17/LaTeX-05-页面设置/","text":"¶摘要 页面大小、页眉、页脚 ¶整体页面设置 设置页面的大小，能够容纳多少行字，一行有多宽，页眉、页脚设置等等…… 需要宏包 1\\usepackage{geometry} ¶页面大小设置 写在导言区 123456789\\geometry{a4paper} %a4纸大小\\geometry{paperheight=22cm, paperwidth=10cm} %设置页面宽10cm，高22cma0paper, a1paper, a2paper, a3paper, a4paper, a5paper, a6paper,b0paper, b1paper, b2paper, b3paper, b4paper, b5paper, b6paper, c0paper, c1paper, c2paper, c3paper, c4paper, c5paper, c6paper, b0j, b1j, b2j, b3j, b4j, b5j, b6j, ansiapaper, ansibpaper, ansicpaper, ansidpaper, ansiepaper, letterpaper, executivepaper, legalpaper ¶版心位置、大小位置 版面示意图 1234567\\geometry{left = 2cm, right = 2cm, top = 2cm, bottom = 2cm} %设置页边距均为2cm\\geometry{hcentering} %版心水平居中\\geometry{vcentering} %版心竖直居中\\geometry{textheight=20cm} %设置版心长为20cm ¶页眉与页脚 对于页眉页脚的设置，我们使用宏包fancyhdr. 所以，我们首先在导言区中写上: 123\\usepackage{fancyhdr}\\pagestyle{fancy}\\fancyhf{} 12- 这里注意一点，如果我们同时使用了geometry和fancyhdr宏包，那么一定要把\\usepackage{fancyhdr}及相应的页眉、- 页脚设置写在\\usepackage{geometry}的前面，否则会出现奇怪的错误。 宏包fancyhdr将页面的页眉、页脚各分为左、中、右三个部分，其对应的指令名为\\lhead{}, \\chead{}, \\rhead{}, \\lfoot{}, \\lhead{}, \\rhead{}. 页眉页脚对应位置 12\\chead{这个是页眉中部} %在页眉中部显示“这个是页眉中部”\\rfoot{\\thepage} %页尾的右侧写上当前页码.\\thepage指令存储的是当前页面的页码数. 注意：如果要在正文中使用\\maketitle，那么那一页的页面格式会自动变回原来的页面格式。需要在\\maketitle后加上一句\\thispagestyle{fancy} 同时，页眉也被默认设置了含有页眉线。页眉线、页脚线的指令名分别为\\headrulewidth和\\footrulewidth. 其粗细可分别用\\renewcommand来设置。 比如说，我想取消页眉线，就可以在导言区中写上 \\renewcommand\\headrulewidth{0pt}","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(04)-图片 graphicx","date":"2023-02-17T13:08:14.000Z","path":"2023/02/17/LaTeX-04-图片/","text":"¶摘要 ¶插入图片 要在文档中插入图片，需要graphicx宏包。此外，为了让图片出现在正确的位置，需要float宏包。因此，在导言区中加上 12\\usepackage{graphicx}\\usepackage{float} 接着，如果我们要插入的图片的名字是pic.png, 那么在我们正文中要插入图片的位置加上如下代码： 123456789101112\\begin{figure}[H]\\centering %居中放置\\includegraphics[width = .5\\textwidth]{pic.png} %将照片等比例放缩50%，{}里放照片在文件夹里的路径\\includegraphics[scale=0.5]{pic.png} %与上条语句等价\\includegraphics[height=xxx, width=xxx]{pic.png} %专门调整长宽%是在其对应的位置（位于\\includegraphics{}前就是图片上方，后就是图片下方）产生“图x：Title of picture”的语句。\\caption{Title of picture} \\end{figure}%关于\\caption{}，我们可以对其字体、文字进行相关设置。这里需要我们使用caption宏包。我们首先在导言区中写上\\usepackage{caption}，然后在导言区中使用\\captionsetup{}进行相关设置。\\usepackage{caption} 这里注意一点，如果要将图片插入到文档中，建议将图片拷贝到.tex文件的同一级文件夹中，否则需要在\\includegraphics{}的参数中填写绝对路径。 实现latx多图并列，多表并列，图文并列 {http://www.sascha-frank.com/latex-minipage.html} ¶插入图片时的一些设置 12%H为当前位置，!htb为忽略美学标准，htbp为浮动图形\\begin{figure}[H] ¶并排图片 123456789101112131415161718192021222324252627282930begin{figure}[H]\\centering\\begin{minipage}{0.48\\textwidth} %调整图片大小\\centering\\includegraphics{pic1.png}\\caption{Title of pic1}\\end{minipage}\\begin{minipage}{0.48\\textwidth}\\centering\\includegraphics{pin2.png}\\caption{Title of pic2}\\end{minipage}\\end{figure}\\begin{figure}[htbp] \\centering \\begin{minipage}[t]{0.48\\textwidth} % [t]：让两张图片底端对齐 \\centering \\includegraphics[width = 7cm]{img/The distribution of the hive.png} \\caption{The distribution of the hive} \\label{fig:The distribution of the hive} % 两张图片各自的标签 \\end{minipage} \\begin{minipage}[t]{0.5\\textwidth} % [t]：让两张图片底端对齐 \\centering \\includegraphics[width = 8cm]{img/The influence of one spot.png} \\caption{The influence of one spot} \\label{fig:The influence of one spot} % 两张图片各自的标签 \\end{minipage}\\end{figure} ¶过宽的图片","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(03)-字体设置","date":"2023-02-17T13:06:05.000Z","path":"2023/02/17/LaTeX-03-字体设置/","text":"¶摘要 字体、页码、页面 公式内字体大小 ¶字体的包 正常字体：\\mathnormal{} --&gt; normal 罗马体：\\mathrm{} --&gt; roman 斜体：\\mathit{} --&gt; italic 黑粗体：\\mathbf{} --&gt; boldface 黑板体（空心体）：\\mathbb{} --&gt; blackboard 书法艺术体：\\mathcal{} --&gt; calligraphy 书写体(圆体)：\\mathscr{} --&gt; script 德文尖角体（哥特体）：\\mathfrak{} --&gt; fraktur (aka gothic) 无衬线体：\\mathsf{} --&gt; sans serif 打字机体：\\mathtt{} --&gt; typewriter type ¶正文 一般用fontspec包来设置字体 12\\usepackage{fontspec} \\setmainfont{Times New Roman} 字体名称打开命令窗格查看： fc-list :lang=zh-cn &gt; C:\\font_zh-cn.txt 打开 C 盘根目录下的 C:\\font_zh-cn.txt 纯文本文档，里面的内容就是你当前系统可用的全部中文字体，形如： windos系统显示字体信息 其中的每一行，都代表着一个可用的字体。其形式如下： &lt;字体文件路径&gt;: &lt;字体标示名1&gt;, &lt;字体表示名2&gt;:Style=&lt;字体类型&gt; 字体大小 1\\tiny \\scriptsize \\footnotesize \\small \\normalsize \\large \\large \\LARGE \\huge \\Huge ¶页码、页眉、页脚设置 12345678% 设置页码格式是罗马数字\\pagenumbering{roman}% 生成目录\\tableofcontents% 插入新页\\newpage% 设置页码格式是阿拉伯数字\\pagenumbering{arabic} 可以用\\pagestyle{style}设置每页的页眉（\\header）和页脚(\\footer)的设置，style的可选项是： \\plain：缺省，页码打印在页脚中间； \\headings：页码，每章标题打印在页眉，页脚留空； \\empty：设置页眉页脚为空。 对特定页可以用：\\ thispagestyle{style}可以设置 独立的页码页眉设置。 ¶atex中采用的单位 pt：一个点point相当于1/72.27inch，也就是大约0.0138inch或0.3515mm ； mm：毫米； cm：厘米； in：英寸； ex：约等于当前字体中字母x（小写）的高度； em：约等于当前字体中字母M（大写）的宽度； mu：当前采用的数学字体为参考的em，则1mu=1/18em。 ¶添加数学公式 插入行内公式$ function $ 插入行间公式[ function ] 在一行中插入多个公式 1234\\begin{displaymath} S_{n+1} = S_{n} + S_{n}, S_{n}=1=2^{n} \\end{displaymath} 对行间公式进行编号 123\\begin{equation} ... \\end{equation} ¶公式字体大小 ¶设置整个公式字体大小 大小 字号 字宽 指令 七号 5.25pt 1.845mm \\tiny 六号 7.875pt 2.768mm \\scriptsize 小五号 9pt 3.163mm \\footnotesize 五号 10.5pt 3.69mm \\small 小四号 12pt 4.2175mm \\normalsize 四号 13.75pt 4.83mm \\large 三号 15.75pt 5.53mm \\Large 二号 21pt 7.38mm \\LARGE 一号 27.5pt 9.48mm \\huge 小初号 36pt 12.65mm \\Huge 初号 42pt 14.76mm 12345678910\\begin{small}\\begin{equation} \\begin{cases} \\begin{array}{l} [\\bm{K}_0, \\bm{K}_1] = \\bm{B}^{-1}\\bm{WV}^{-1} \\\\ \\bm{W} = \\bm{A}_2\\bm{ZF}^2 + \\bm{A}_1\\bm{ZF} + \\bm{A}_0\\bm{Z} \\end{array} \\end{cases}\\end{equation}\\end{small} 参考文献： https://www.cnblogs.com/wt869054461/p/9544779.html ¶调整公式内某个字符大小 \\displaystyle 标准 \\textstyle 行内 \\scriptstyle 第一层上下标 \\scriptscriptstyle 第二层上下标 12345678910111213141516171819202122232425\\begin{array}[H]{rl} e^{\\bm{Y}} = \\exp \\scriptstyle \\begin{bmatrix} [\\bm{u}]_{\\times} &amp; \\bm{t} \\\\ \\bm{0} &amp; 0 \\end{bmatrix} \\displaystyle &amp;= \\displaystyle \\sum \\limits_{n=0}\\limits^{\\infty } \\frac{1}{n!} \\scriptstyle \\left( \\begin{bmatrix} [\\bm{u}]_{\\times} &amp; \\bm{t} \\\\ \\bm{0} &amp; 0 \\end{bmatrix} \\right) ^n \\\\ &amp; = \\bm{I} + \\scriptstyle \\begin{bmatrix} [\\bm{u}]_{\\times} &amp; \\bm{t} \\\\ \\bm{0} &amp; 0 \\end{bmatrix} + \\displaystyle \\frac{1}{2!} \\begin{bmatrix} [\\bm{u}]_{\\times} ^2 &amp; [\\bm{u}]_{\\times} \\bm{t} \\\\ \\bm{0} &amp; 0 \\end{bmatrix} + \\displaystyle{ \\frac{1}{3!}} \\scriptstyle \\begin{bmatrix} [\\bm{u}]_{\\times} ^3 &amp; [\\bm{u}]_{\\times}^2 \\bm{t} \\\\ \\bm{0} &amp; 0 \\end{bmatrix} + \\displaystyle \\cdots \\\\ &amp; = \\begin{bmatrix} \\displaystyle e^{[\\bm{u}]_{\\times}} &amp; \\scriptstyle \\bm{V}\\bm{t} \\\\ \\bm{0} &amp; 1 \\end{bmatrix} \\end{array} 注意：上述指令没有花括号，会将指令后的字符大小一同修改，要记得转化会原有姿态大小 参考文献：https://blog.csdn.net/yq_forever/article/details/107851617 ¶公式内空格 两个quad空格 a \\qquad b 两个m的宽度 quad空格 a \\quad b 一个m的宽度 大空格 a\\ b 1/3m宽度 中等空格 a\\;b 2/7m宽度 小空格 a\\,b 1/6m宽度 没有空格 ab 紧贴 a\\!b 缩进1/6m宽度 参考文献： https://blog.csdn.net/bennyfun79/article/details/15500575 ¶公式中求和符和极限符下角标内容放在正下方 在用输入数学公式时，有时需要将公式的下标放在正下方: 如果是数学符号，那么直接在_前加\\limits命令放在正下方，如sum函数下面的取值范围，一般情况下是放在的正下方。 例如: 1f(x,y)=\\frac{mn}{\\sum\\limits_{(s,t)\\in S_{xy}}{\\frac{1}{g(x,y)}}} 若是普通符号，那么要用\\mathop先转成数学符号再用\\limits，如 1f(x,y)=\\mathop{medium}\\limits_{(s,t)\\in S_{xy}}{g(x,y)}) 对于双美元符之间的公式，Latex默认下标是放在正下方。所以就不需要加\\limits。 https://simochen.github.io/2016/10/24/latex-under-equation/","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(02)-章节段落","date":"2023-02-17T13:02:34.000Z","path":"2023/02/17/LaTeX-02-章节段落/","text":"¶摘要 latex文档章节的定义 ¶添加章节 123\\section{} \\subsection{} \\subsubsection{} selection 创建章、节，可用的段落有： \\part： 部 深度：-1 不能用在letter \\chapter： 章 深度：0 可以用在book和report \\section： 节 深度：1 不能用在letter \\subsection： 小节 深度：2 不能用在letter \\subsubsection： 小小节 深度：3 不能用在letter \\paragraph： 带标题的段落（用{ }） 深度：5 不能用在letter \\subparagraph： 带标题的次级段落（用{ }） 深度：6 不能用在letter 深度5、6一般不会被计入content中 若太长或有格式异常，可以通过设置可选标题（用[]来包含），在编入目录时如果有可选标题会自动选用，参考下例： 1\\section[编入目录的标题]{实际的太长的标题} 章节标题会自动编号 part 罗马数字 Part I, Part II, … chapter、section 阿拉伯数字 Chapter 2，2.1 xxx 附录Appendix 拉丁字母 Appendix A, Appendix B, … ¶添加段落 123\\paragraph{} \\subparagraph{} \\subsubparagraph{} 段间距设定\\setlength{\\parskip}{1cm} 行首缩进\\setlength{\\parindent}{4em}也可以在每一个段落前用\\indent单独设置这一段第一行缩进，也可以用下条语句以倍数设置行间距\\renewcommand{\\baselinestretch}{1.5} 注意：%要写在preamble也就是\\begin{document}命令之前","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"LaTeX(01)-框架结构","date":"2023-02-17T12:59:13.000Z","path":"2023/02/17/LaTeX-01-框架结构/","text":"¶摘要 latex的基本用法 ¶框架结构 ¶document 当 latex 处理源文件时， 首先需要知道的就是作者所要创建的文档类型。 文档类型可由\\documentclass 命令来指定。 1\\documentclass[option]{class} clsss 指定想要的文档类型。表1给出了一些用到的文档类型。通过options 参数可以定制文档类的属性。 不同的选项之间须用逗号隔开。标准文档类的最常用选项如表2所示。 例如： 1\\documentclass[11pt, twosid, a4paper]{article} 这条命令会引导 latex 使用article 格式、 11 磅大小的字体来排版该文档， 并得到在A4 纸上双面打印的效果。 article 排版科学期刊、 演示文档、 短报告、 程序文档、 邀请函…… 支持中文形式：ctexart proc 一个基于 article 的会议文集类, 支持中文形式：\\ctexrep minimal 非常小的文档类。 只设置了页面尺寸和基本字体。 主要用来查错。 report 排版多章节长报告、 短篇书籍、 博士论文…… book 排版书籍。支持中文形式：\\ctexbook slides 排版幻灯片。 该文档类使用大号 sans serif 字体。 也可以选用 FoilTEXa 来得到相同的效果。 表2：文档选项 10pt, 11pt, 12pt 设置文档中所使用的字体的大小。 如果该项没有指定， 默认使用10pt 字体。 a4paper, letterpaper, . . . 定义纸张的尺寸。 缺省设置为letterpaper。 此外， 还可以使用a5paper, b5paper, executivepaper 以及legalpaper。 fleqn 设置行间公式为左对齐， 而不是居中对齐。 leqno 设置行间公式的编号为左对齐， 而不是右对齐。 titlepage, notitlepage 指定是否在文档标题(document title) 后另起一页。 article 文档类缺省设置为不开始新页， report 和book 类则相反。 onecolumn, twocolumn latex 以单栏(one column) 或双栏(two column) 的方式来排版文档。 twoside, oneside 指定文档为双面或单面打印格式。 article 和report 类为单面(single sided) 格式， book 类缺省为双面(double sided) 格式。 注意该选项只是作用于文档样式， 而不会通知打印机以双面格式打印文档。 landscape 将文档的打印输出布局设置为 landscape 模式。 openright, openany 决定新的一章仅在奇数页开始还是在下一页开始。 在文档类型为article 时该选项不起作用， 因为该类中没有定义“章” (chapter)。 report 类默认在下一页开始新一章而book 类的新一章总是在奇数页开始。 ¶usepackage 排版文档时， 你可能会发现某些时候基本的LATEX 并不能解决你的问题。 如果想插入图形(graphics)、 彩色文本(coloured text) 或源代码到你的文档中， 你就需要使用宏包来增强LATEX 的功能。 可使用如下命令调用宏包 -----------------支持中文\\usepackage[UTF8]{ctex}------------------- 1\\usepackage[options]{package} 这里package 是宏包的名称， options 是用来激活宏包特殊功能的一组关键词。很多宏包随LATEX 基本发行版一起发布。 doc 排版LATEX 的说明文档。 exscale 提供了按比例伸缩的数学扩展字体。 fontenc 指明使用哪种LATEX 字体编码(font encoding)。 ifthen 提供如下形式的命令‘if . . . then do . . . otherwise do . . . .’ latexsym 提供LATEX 符号字体。 makeidx 提供排版索引的命令 syntonly 编译文档而不生成 dvi 文件 inputenc 指明使用哪种输入编码， 如 ASCII, ISO Latin-1, ISO Latin-2, 437/850IBM code pages, Apple Macintosh, Next, ANSI-Windows 或用户自定义编码。 amsmath 数学公式 graphicx 插图 xcolor 颜色 array 表格 ctex, xecjk 中文 fontspec 西文 otf 字体 ¶页面样式pagestyle LATEX 支持三种预定义的页眉/页脚(header/footer) 样式， 称为页面样式(pagestyle)。 语法： 1\\pagestyle{style} 其中的 style 参数确定了使用哪一种页面样式 。该表列出了预定义的页面样式。 plain 在页脚正中显示页码。 这是页面样式的缺省设置。 headings 在页眉中显示章节名及页码， 页脚空白。 empty 将页眉页脚都设为空白。 可以通过如下命令来改变当前页面的页面样式 1\\thispagestyle{style} ¶添加注释 用 % ， 若要转义，则用% ¶添加标题、作者、日期等信息，制作目录 在导言区添加 \\title{} 语句添加标题， \\date{月/日/年}与\\dete{today} %显示当前日期 1234567891011\\documentclass{article} \\title{My first Latex document} \\author{Yingshan Li} \\date{8/26/2018} \\begin{document} \\maketitle %放置在\\begin{document}后,制作标题\\tableofcontents %制作目录Hello world! \\end{document}","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"LaTeX","slug":"Language/LaTeX","permalink":"http://example.com/categories/Language/LaTeX/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"Pycharm使用技巧","date":"2023-02-05T03:29:41.000Z","path":"2023/02/05/Pycharm使用技巧/","text":"¶摘要 在使用 Pycharm 时，高效的使用方法能够提高科研效率 ¶查看变量 Run菜单 - Edit Configurations 菜单 勾选 Run with Python Console 运行，之后可以看到变量 https://www.cnblogs.com/emanlee/p/15186235.html ¶分块运行 1234567# pytharm 分块运行# %% 第一部分import ......# %% 第二部分import ...... 然后在View下找到将Scientific Mode选中 通过# %%定位的地方就出现了绿色的小箭头，点击绿色小箭头就可以执行这一行或这一块了 https://blog.csdn.net/weixin_42690752/article/details/103878822","categories":[{"name":"高效工作","slug":"高效工作","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"work","slug":"work","permalink":"http://example.com/tags/work/"},{"name":"学术生产力","slug":"学术生产力","permalink":"http://example.com/tags/%E5%AD%A6%E6%9C%AF%E7%94%9F%E4%BA%A7%E5%8A%9B/"}]},{"title":"学术论文写作","date":"2023-01-15T12:21:52.000Z","path":"2023/01/15/学术论文写作/","text":" 您好, 这里需要密码.","categories":[{"name":"高效工作","slug":"高效工作","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/"},{"name":"学术写作相关","slug":"高效工作/学术写作相关","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/%E5%AD%A6%E6%9C%AF%E5%86%99%E4%BD%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"work","slug":"work","permalink":"http://example.com/tags/work/"},{"name":"学术生产力","slug":"学术生产力","permalink":"http://example.com/tags/%E5%AD%A6%E6%9C%AF%E7%94%9F%E4%BA%A7%E5%8A%9B/"}]},{"title":"结构动力学-0前言","date":"2023-01-14T15:05:32.480Z","path":"2023/01/14/结构动力学-0前言/","text":"¶前言 ¶结构动力学基本内容与意义 结构动力学是一门研究结构在动载荷作用下产生响应的规律的科学, 即研究结构、动载荷(激励)和响应三者关系的科学。 结构动力学区别于结构(静)力学的标志与特色：固有频率(周期)、惯性力、共振响应、阻尼等一系列概念。 载荷按照是否随时间变化而分为动载荷与静载荷。人类为了满足一些生产生活的需要而设计出各种结构，有些结构设计目的就是承载动载荷，例如：海上钻井平台承载海浪的冲击、飞机承载着风载荷等，另外还有例如地震、爆炸等发出的巨大的冲击可能摧毁结构。静力学只具有单一的解答而动力学问题具有随时间变化的性质相对于静力学问题要复杂得很多，并且由于有加速度的存在，分析结构受力时不可忽略惯性力，此时静力学方法已无法满足动力学问题分析。 结构动力学与静力学的区别 结构动力学是一门研究结构在动载荷作用下产生响应的规律的科学,即研究结构、动载荷(激励)和响应三者关系的科学；静力学研究的是结构在静载荷作用下的结构的受力和位移情况，研究的是结构的弹性、刚度、稳定性问题的科学。 结构在动力作用下的响应特征迥异于其在静力作用下的反应特征。结构的固有频率(周期)、惯性力、共振响应、阻尼等一系列概念,构成了结构动力学区别于结构(静)力学的标志与特色。 飞行器结构动力学的目的 以飞行器为对象,研究其结构系统的固有振动特性及动响应特性,用于指导飞行器系统设计,从而保障飞行器结构在任务周期内安全可靠、性能适当。 ¶振动的分类 按运动微分方程的形式： 线性振动：描述系统运动的方程为线性微分方程,相应的系统称为线性系统。线性系统的一个重要特性是线性叠加原理成立。 非线性振动：描述系统运动的方程为非线性微分方程,相应的系统称为非线性系统。对于非线性振动线性叠加原理不成立。 按激励的有无及性质： 固有振动：无激励时系统所有可能运动的集合。—非实际振动,仅反映系统振动的固有特性(固有属性); 自由振动：激励消失后系统所做的振动—现实的振动；相当于系统由非零初始条件(如初始位移、初始速度)所导致的振动 强迫振动：系统在外部激励（干扰力或干扰位移）作用下所做的振动； 随机振动：系统在非确定性外激励下的振动；或者系统参数的不确定性 自激振动：系统受其自身运动诱发出来的激励作用而产生和维持的振动 参数振动：激励以系统本身的参数随时间变化的形式出现的振动 固有频率：是振动系统固有动特性的本质反映，个数与系统的自由度有关，其值仅取决于系统的固有参数(k,m)而与其它条件无关。确定固有频率的方法：直接法、静变形法、能量法（保守系统） 瞬态响应：由于阻尼因素导致的能量损耗, 自由振动响应将随时间衰减而最后消失, 与自由振动响应具有相同的形式，是振动微分方程中的通解部分 稳态响应：由外部激励引起，不断地向系统内部输入能量以维持的运动状态，稳态响应与初始条件无关且不随时间衰减，是振动微分方程中的特解部分。 ¶响应特性 简谐激励：仍是等幅(B )简谐波；响应频率与激励频率相同；强迫振动响应的振幅仅与系统的物理参数、激励力大小和频率有关, 而与初始条件无关。 周期激励：响应x(t)也具有周期性, 且与f(t)的周期相同；当某个pω0接近系统的自然频率 ωn时, 系统的响应中此简谐分量将占主导地位, 特别是当pω0=ωn时, 系统发生共振 非周期激励：响应将不再是“稳态”的, 而是“非稳态”的。","categories":[{"name":"Mechanics","slug":"Mechanics","permalink":"http://example.com/categories/Mechanics/"},{"name":"结构动力学","slug":"Mechanics/结构动力学","permalink":"http://example.com/categories/Mechanics/%E7%BB%93%E6%9E%84%E5%8A%A8%E5%8A%9B%E5%AD%A6/"}],"tags":[{"name":"Physics","slug":"Physics","permalink":"http://example.com/tags/Physics/"}]},{"title":"Hexo 学习笔记","date":"2023-01-14T15:05:32.410Z","path":"2023/01/14/Hexo学习笔记/","text":"用于存放 Hexo 操作速查 ¶基本操作 1234567891011121314node -v #查看node版本 npm -v #查看npm版本 npm install -g cnpm --registry=http://registry.npm.taobao.org #安装淘宝的cnpm 管理器 cnpm -v #查看cnpm版本 cnpm install -g hexo-cli #安装hexo框架 hexo -v #查看hexo版本 mkdir blog #创建blog目录 cd blog #进入blog目录 sudo hexo init #生成博客 初始化博客 http://localhost:4000/ #本地访问地址 hexo n &quot;我的第一篇文章&quot; #创建新的文章 #返回blog目录 #Github创建一个新的仓库 YourGithubName.github.iocnpm install --save hexo-deployer-git #在blog目录下安装git部署插件 ¶建立文件 1234567891011pwd #查看当前文件、文件夹路径ls -l #查看目录（当中的文件）cd folder_name/folder_name/ #进入到子文件夹中cd ../.. #退回到前两级文件夹中hexo init #初始化博客hexo clean #清理hexo g #生成 hexo s #启动本地博客服务hexo new &quot;My New Post&quot; #新建.md文件hexo n &quot;My New Post&quot; #新建.md文件vim PostName.md #编辑.md文档 ¶部署到GitHub仓库(W10) 123$ git config --global user.email &quot;1693647524@qq.com&quot;$ git config --global user.name &quot;usename&quot;hexo d https://usename.github.io/ 访问这个地址可以查看博客 默认在本地 http://localhost:4000/ 有时会显示“fatal: unable to access ‘https://github.com/Name/Name.github.io.git/’: Failed to connect to github.com port 443 after 21094 ms: Timed out”, 这是网络问题，解决办法是把VPN关掉。 ¶Hexo 博客加密 使用 hexo-blog-encrypt 插件: 操作步骤: https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md ¶安装: 1npm install --save hexo-blog-encrypt ¶配置 修改 scaffolds 文件夹中 post.md 文件, 添加语句: password: &quot;&quot;, 默认没有密码. 设置优先级: 文章信息头 &gt; 按标签加密 表头信息: 12345---title: Hello Worlddate: 2016-03-30 21:18:02password: hello--- 对博文禁用 Tag 加密 12345678910---// 只需要将博文头部的 password 设置为 &quot;&quot; 即可取消 Tag 加密.title: Callback Testdate: 2019-12-21 11:54:07tags: - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to diable tag encryption. 在配置文件: 12345678910# Securityencrypt: # hexo-blog-encrypt abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码. tags: - &#123;name: tagName, password: 密码A&#125; - &#123;name: tagName, password: 密码B&#125; theme: xray // 不设置输入密码主题则不会出现输入密码页面 wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试. wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. ¶公式渲染问题 用\\bm指令无法正确渲染公式加粗（下），改用\\boldsymbol指令即可（上） ¶npm [WARN][ERROR] ¶global npm WARN config global `–global`, `–local` are deprecated. Use `–location=global` instead. 修复这个WARN花了我半天时间，最后在overflow-Message &quot;npm WARN config global `–global`, `–local` are deprecated. Use `–location=global` instead&quot;上得到了答案。该问题出自Windows系统的，解决办法是更新 npm。Upgrading npm on Windows doesn’t work with npm itself like on Linux. You have to use npm-windows-upgrade to update the wrapper script npm.cmd at the right location. 参考Upgrade npm on Windows 做法如下： 以管理员身份运行 PowerShell 输入 Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force 然后，为了安装和使用这个升级器工具，请运行以下命令（也可以从高位的PowerShell或cmd.exe）。注意：这个工具至少需要Node v6。对于低于4.0的Node版本，请使用npm-windows-upgrade@3.1.1，对于低于6.0的Node版本，请使用npm-windows-upgrade@4.1.1。 输入：npm install --global --production npm-windows-upgrade 输入：npm-windows-upgrade 输入：npm-windows-upgrade --npm-version latest ¶command not found bash: npm-v: command not found 在 Git Bath 中输入 npm -v 得到该错误，在overflow-bash: npm: command not found?得到的解决方法有: 关闭 Git Bash ,重启 VScode，开启 Git Bash；可以解决一部分问题，但我的问题仍未解决 在 PowerShell 中输入 npm -v, node -v, hexo -v后均和正常显示版本，说明是 Git Bash 的问题，后我又回到 Git Bash 中输入指令就问题就奇妙玄学地解决了… ¶[ERROR][hexo-renderer-pandoc] 这是由 nexT 主题数学公式无法渲染引发的问题。 ¶解决方法1：安装 markdown-it-latex2img 工具 在 issue：Error occur when set math render (设置数学公式渲染器失败) #1483下看到的网友的建议， markdown-it-latex2img 的特点： 可以将LaTeX数学方程放在任何地方 准确、快速，支持呈现多样化的公式 将Latex语法转换为图像标签 支持内联和块状公式 渲染结果支持多端使用，如微信小程序 markdown-it-latex2img 的用法如下： 安装 12npm i hexo-renderer-markdown-it --savenpm i markdown-it-latex2img --save 配置 1234# _config.yml 文件后加上下列语句markdown: plugins: - markdown-it-latex2img 语法：见Markdown-it-latex2img示例 开头的$必须在其右边紧跟一个非空格字符，而结尾的$必须在其左边紧接一个非空格字符，并且不能紧跟一个数字。 缺点是将公式换成了图片，影响阅读；语法繁琐，不够自由；公式中的空格被当作无用符号被省略，影响表达。但除此之外可以解决原有的所有渲染问题。且有时会出错，出现不能markdown不能正常编译的情况。 语法参考： MathJax basic tutorial and quick reference ¶解决方法2：更换 pandoc 引擎 使用这个 renderer 之前请确保你已经安装了Pandoc，然后卸载 Hexo 自带的 renderer，安装 Pandoc renderer: 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-pandoc --save 注意：如果使用该引擎，那么书写 Markdown 时需要遵循 Pandoc 对 Markdown 的规定。有一些比较明显的需要注意的事项：正常的文字后面如果跟的是list, table或者quotation，文字后面需要空一行，如果不空行，这些环境将不能被 Pandoc renderer 正常渲染。 另外，文中的 URL 使用 Pandoc 渲染以后是普通的文本格式，不能点击，可以通过用 &lt;&gt; 包围 URL 的方式把 URL 变成可点击的 URL。 在使用该引擎时，发生无法渲染的错误，与 Pandoc 的 smart 参数有关，具体不是很清楚是什么原因，在博客根目录中打开 node_modules\\hexo-renderer-pandoc\\index.js ，把 args 变量进行修改： 12// var args = [ &#x27;-f&#x27;, &#x27;markdown-smart&#x27;+extensions, &#x27;-t&#x27;, &#x27;html-smart&#x27;, math]var args = [ &#x27;-f&#x27;, &#x27;markdown&#x27;+extensions, &#x27;-t&#x27;, &#x27;html&#x27;, math] 关于如何在 Markdown 中使用 \\LaTeX 公式，参考Markdown 中 LaTeX 数学公式命令 缺点是本人按照网友提示操作之后并没有成功，最后决定暂时采用的一种方法。 参考文献 Hexo 搭建个人博客指南 Hexo 书写 LaTeX 公式时的一些问题及解决方法 ¶解决方法3：插件hexo-filter-mathjax 2022.7.13更，实在是受不了了！！人在教室自习，后面坐着一个数学系同学，我在复习微积分，本来就班门弄斧之嫌，这公式还不能正常渲染，简直是颜面扫地！！！一定要解决渲染公式这个问题！！ 于是开始网上冲浪…看到了一个解决方法：hexo博客next主题添加对数学公式的支持-爱代码爱编程 上Hexo官网-插件-搜索：math，hexo官方提供两个支持数学公式的插件，分别是： hexo-filter-mathjax hexo-math 选择hexo-filter-mathjax，操作说明见：Hexo Filter MathJax \\ hexo-renderer-pandoc 先将主题配置文件中的math.mathjax.enable and math.katax.enable to false（不知道为什么，文档里这么提醒的） 12$ npm install hexo-filter-mathjax$ hexo clean 在Hexo配置文件_config.yml后添加语句： 12345678910mathjax: tags: none # or &#x27;ams&#x27; or &#x27;all&#x27; single_dollars: true # enable single dollar signs as in-line math delimiters cjk_width: 0.9 # relative CJK char width normal_width: 0.6 # relative normal (monospace) width append_css: true # add CSS to pages rendered by MathJax every_page: false # if true, every page will be rendered by MathJax regardless the `mathjax` setting in Front-matter extension_options: &#123;&#125; # you can put your extension options here # see http://docs.mathjax.org/en/latest/options/input/tex.html#tex-extension-options for more detail 现在可以将主题配置文件中的mathjax.enable–true 主题配置文件中的math中说： 12345math: # Default (true) will load mathjax / katex script on demand. # That is it only render those page which has `mathjax: true` in Front-matter. # If you set it to false, it will load mathjax / katex srcipt EVERY PAGE. per_page: false 所以我将per_page设为false，希望它可以自动为我的每一页渲染公式，但是发现并不是我想的这样，设置为true也不行。于是我修改/scaffolds/post.md： 1234567---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories:mathjax: true--- 添加语句mathjax: true以后就不用每次都手动输入了~ 目前的公式渲染问题算是解决了，但我在多个博主的文章中都有看到，例如这位博主LinBaiJiong提醒说不要：安装pandoc插件，pandoc插件的渲染确实较为繁琐，不够自如，总是VScode中能够成功渲染的语句总是无法在Hexo中成功，期待更加优越的解决方法。 ----------更 听取了博主LinBaiJiong的建议，改用渲染器kramed解决了pandoc不能正常渲染标题；列表、表格、引用前要空行的问题。 12npm uninstall hexo-renderer-pandoc --savenpm install hexo-renderer-kramed --save 之后写博客更加高效！ 附：katex手册 ¶LF will be replaced by CRLF in . LF will be replaced by CRLF in js/next-boot.js. The file will have its original line endings in your working directory. overfloow-LF will be replaced by CRLF in git - What is that and is it important? [duplicate] 在命令行中运行： 123$ git config core.autocrlf true或者$ git config --global core.safecrlf false 什么原理不知道 ¶err: Error: Spawn failed 报错信息： 123456789FATAL &#123; err: Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (E:\\class\\language\\Hexo\\Dynamics_of_Structures\\node_modules\\hexo-util\\lib\\spawn.js:51:21) at ChildProcess.emit (node:events:527:28) at ChildProcess.cp.emit (E:\\class\\language\\Hexo\\Dynamics_of_Structures\\node_modules\\cross-spawn\\lib\\enoent.js:34:29) at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12) &#123; code: 128 &#125;&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html …好傻，被自己无语到了…解决方法明明都写出来了,还习惯性上网冲浪, 尝试了一堆办法没一个有用. 如图: 输入 1git config --global --add safe.directory E:/class/language/Hexo/Dynamics_of_Structures/.deploy_git 这时候事情有了一些转机: 出现了新的报错, 幸运的时并不是更加复杂的错误 12fatal: unable to access &#x27;https://github.com/usename/usename.github.io.git/&#x27;: Failed to connect to github.com port 443 after 21075 ms: Timed out 提示 time out 把就代理关掉, 终于又可以写博客啦! 纪念一下 2023/1/3 把去年堆积的问题解决了好耶! ¶fatal: unable to access ‘https://github.com/username/nsername.github.io.git/’: The requested URL returned error: 403 报错提示： 1remote: Permission to username/username.github.io.git denied to &lt;otheruser&gt;. 错误可能是，电脑保存了一个git用户名和密码，所以如果你转移到另一个账户，就会出现错误403。 https://github.com/trilbymedia/grav-plugin-git-sync/issues/39#issuecomment-546016249 解决办法- Windows： 移除原有凭证 Windows-&gt; 凭据管理器 -&gt; 找到有关于 的凭证并删除 这时候再尝试指令: ssh -T git@github.com, 得到 Hi username! You've successfully authenticated, but GitHub does not provide shell access. 表示已经可以正常连接了. 这时候输入 hexo d ,得到另一个报错: 1fatal: unable to access &#x27;https://github.com/usename/usename.github.io.git/&#x27;: OpenSSL SSL_read: Connection was reset, errno 10054 ¶fatal: unable to access ‘https://github.com/usename/usename.github.io.git/’: OpenSSL SSL_read: Connection was reset, errno 10054 一般是这是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错，查阅过很多方法，都是说要解除ssl验证，但是这种方法总觉得不安全，放弃了。 其实是邮箱问题，解决方法: 查看用户名，邮箱 12git config user.namegit config user.email&lt;/code&gt; 修改，用户名，邮箱 12git config --global user.name &quot;xxx&quot;git config --global user.email &quot;xxx&quot; 问题解决, 了如图: 但是出现了一个问题: 12345678warning: ----------------- SECURITY WARNING ----------------warning: | TLS certificate verification has been disabled! |warning: ---------------------------------------------------warning: HTTPS connections may not be secure. See https://aka.ms/gcm/tlsverify for more information.warning: ----------------- SECURITY WARNING ----------------warning: | TLS certificate verification has been disabled! |warning: ---------------------------------------------------warning: HTTPS connections may not be secure. See https://aka.ms/gcm/tlsverify for more information. 回去仓库看了一眼, 发现多了一个 main 分支: 解决方法: 删掉 master 分支, 将 Hexo 的 _config 文件中的 branch 改成 main 12# branch: masterbranch: main 学废了, 转战 docsify 去了 …迷惑, 电脑关机, 第二天把 public 文件删掉之后上传就莫名其妙好了, 还成功生成了一个页面.(怪事) 后来又把分支改回了master, 记得去仓库那把 source 改成 master 参考资料: csdn-fatal: unable to access ‘https://***.git/‘: OpenSSL SSL_read: Connection was reset, errno 10054 阿里云开发者社区-OpenSSL SSL_read: Connection was reset, errno 10054 ¶一级标题无法跳转 把 MathJax 换成了 KaTex，换了渲染器之后 TOC 就出问题了，TOC 条目没有链接包裹，跳转不了对应标题。 通过网上冲浪… 从几个博主那里知道这是 hexo-renderer-markdown-it 的问题。 ¶solution.1: 修改配置 参考链接： hexo-renderer-markdown-it/Options 文章目录的一级标题点击不生效 #515 [Bug]: 用 hexo-renderer-markdown-it，文章目录条目无链接包裹，无法跳转 #941](https://github.com/jerryc127/hexo-theme-butterfly/issues/941) 打开 hexo-renderer-markdown-it/index.js 文件，查看设置： 1234567891011hexo.config.markdown.anchors = Object.assign(&#123; level: 2, collisionSuffix: &#x27;&#x27;, permalink: false, // permalink: true, permalinkClass: &#x27;header-anchor&#x27;, permalinkSide: &#x27;left&#x27;, permalinkSymbol: &#x27;¶&#x27;, case: 0, separator: &#x27;-&#x27;&#125;, hexo.config.markdown.anchors); 没有需要改动的地方，找到 Hexo 配置文件，修改为： 1234markdown: anchors: level: 1 permalink: true 亲测有效。 ¶solution.2: markdown-it-named-headings 参考链接： Cannot render headings with ids? #40 按照各位网友的提示，可以使用插件 markdown-it-named-headings 来解决。 1npm install markdown-it-named-headings --save 添加一行语句在 markdown-it-named-headings/index.js 文件中： 1parser.use(require(&#x27;markdown-it-named-headings&#x27;)) 12345678910111213141516171819202122232425262728293031323334353637383940414243var kebabcase = require(&#x27;lodash.kebabcase&#x27;)var unidecode = require(&#x27;unidecode&#x27;)module.exports = function plugin (md, options) &#123; md.core.ruler.push(&#x27;named_headings&#x27;, namedHeadings.bind(null, md))&#125;function namedHeadings (md, state) &#123; var ids = &#123;&#125; state.tokens.forEach(function (token, i) &#123; if (token.type === &#x27;heading_open&#x27;) &#123; var text = md.renderer.render(state.tokens[i + 1].children, md.options) var id = kebabcase(unidecode(text)) var uniqId = uncollide(ids, id) ids[uniqId] = true setAttr(token, &#x27;id&#x27;, uniqId) &#125; &#125;)&#125;function uncollide (ids, id) &#123; if (!ids[id]) return id var i = 1 while (ids[id + &#x27;-&#x27; + i]) &#123; i++ &#125; return id + &#x27;-&#x27; + i&#125;function setAttr (token, attr, value, options) &#123; var idx = token.attrIndex(attr) if (idx === -1) &#123; token.attrPush([ attr, value ]) &#125; else if (options &amp;&amp; options.append) &#123; token.attrs[idx][1] = token.attrs[idx][1] + &#x27; &#x27; + value &#125; else &#123; token.attrs[idx][1] = value &#125;&#125;parser.use(require(&#x27;markdown-it-named-headings&#x27;)) 网友们反馈有效。","categories":[{"name":"高效工作","slug":"高效工作","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/"},{"name":"Hexo","slug":"高效工作/Hexo","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/Hexo/"}],"tags":[{"name":"work","slug":"work","permalink":"http://example.com/tags/work/"}]},{"title":"罗德里格斯旋转公式推导","date":"2023-01-11T13:24:42.000Z","path":"2023/01/11/罗德里格斯旋转公式推导/","text":"罗德里格斯旋转公式（Rodrigues' rotation formula）推导 转载： 博客园-wtyuan：罗德里格斯旋转公式（Rodrigues’ rotation formula）推导","categories":[{"name":"Mechanics","slug":"Mechanics","permalink":"http://example.com/categories/Mechanics/"},{"name":"姿态","slug":"Mechanics/姿态","permalink":"http://example.com/categories/Mechanics/%E5%A7%BF%E6%80%81/"}],"tags":[{"name":"Physics","slug":"Physics","permalink":"http://example.com/tags/Physics/"}]},{"title":"文献管理","date":"2023-01-04T16:09:07.000Z","path":"2023/01/05/文献管理/","text":"31568d710e28da3e9920134e13d5e8646d9d9a6d4f053e2bb80501ef4445d3b24f077b0799c7e672e49104b0eb5a9fb183469d25b71e5029203c32a4633996f155f39ec3336f8cde50ed4d09b69ba7902f048c0ef7ebec6346f0620bc4e6c3e6d6fbdb4864129f4769f819b299a0b0b5f8c90a5ae242cfbd67832b4f1803d4858a488212e616b2cc54566a97183bd161742245954cdf3086d4c45520273d86a7b7bdec61ded4f75cc6c53713cea4513b698ec444543a451020d00b1e697d2dae0eb9c7bf81fce75293b547aa116066936cc6a1b39a652f32703076563a088c1205f6f95126f794db73d95e700f6c78dfa530997fdd37c57b4557cf9eb4f3b34864f4ec97e00cdb70f5efaf312d47d19c4cf5a893c0bf777928457c0b8c1b621112b1f13564fee3e1a0bf38efcac75002952eb73b151922c8083974aa74aebb30cb1a615261c4f7c0e46df0e8848ea72676511f4e00ae8457ad89568d025ac3b6dd0f028df39d0700a47f9f97f52794c62158ef5834f9096e0411fe9b69367b9b1e761048d27b454105d24ce629ccf826fb19db8135505949b1e26cf8d9c9ce1358e6b5401a7ae5eb22a0ff713540b791827a7d8c9dd7f3ee195dfddbbb2759dd91743738c738205104495913d228c99e24e9ecac90b9fb5107a4c8605bdce46bd40f2ac8c872fa7302babdd07eb39bb0e189f0f94a4d8083bd74910a5d1f6e35bcf16fb0472be9a25f022d8e974b2ed0b1355dcda4093b1ecf62f9983f90ed3d06075327444c309e6003a3bc881caef1f7c9ce6c1f88644081c72834225ac7cfefce1a938457a6c6ea7048bf8ccdd3dcf7a8a8df5002cf3611be4e97814ab516ac97be7bdddf588f74433a9d2213aeb912b1ae83538575b846c7efe7ee51b42b3a1f9d0f6223cb64cb797436023fd4954d4df18291a129c2d5201224073a8b4fc1e93dc3c835c145f8c89c28dc61ee38e4a6231f300df7c5f2f60308135272d6fb5bd7da908e46a0ced8ee407f8d66e6d4305ada04dd7f87e6ec050581ba0115d13ed530a2c7d5672ed0de31790bb4b529898a396990e208c9552092cb8e8ba6e7db04d0176bdf3e5525d5807db3a8113c481d96d048a349d33c01160e5348958e1f64f0c774dd6d9ef1d872a5fceb7526aa86759ec592206dcbae1a3d2af9cb398eff6027be2cb9155aca80e3f48e9f04d739118fa67ef3a8be03d1b847218438e37cdbdd2a47ee042119f7e64323a1c50f7226339eb1c4a1692c8e018b47a8e77104726fd179dd5b1e13bac2f3fca47c2e6affc0556a58d6d93c19ee400a24185d151e2d48b271f06b14cd6f0d239b615a9b6b558eb7c553942aad64b0eb7107867cd1324827d4e233d8f8beccc82fd6e36390e9fb09a79fdf4b3988518ffe733b2ac9d9662da3df0b09d956665c132dd10d2793ca50ae9525cc27d1c5bf25233b3c306a8e0204c00a126c097ab16b4847bf5067f01d46e9b39b1f6296f472122406c34a37c7ee7555d7a5cc781239e0293d2c0bd72025045564a3d4d1c7976ee4947d8d7866b22ff9cfd71a75b8fec99d58a95ebb3171300e032d13fd9387ad1c6653fb1922491a17e1a955da1c40903d0e9dd597d62b542fcd0662e4613ddfd1a43f0d3fa25c48bab2faed9657a917709bdf602ba57554f9ada3f260b70bea4f19d905314b5024967c511c846808dbd484a1ebfba381a33c780901d658b55049dee41edab965820fb85aaebdcbbba728dee039fa3991341b572207f366b1995249f41548c84ceb02797e4df592d45e32657a1428f0ba257193abdbcafd8dc52f348236760b5393d36698c4ea4f1674a97f77b57b6b2ef36b0f4e2604026c5d24fb22a4d9b3a90cd3979c11e72064beaa35ddcbf587dd2bae6c01bc023049b1ecef7032a8c7ce55e13e92d82ce12c58e070a68afc52a0b98238f8e28f985802f9afd74e9e320b5154210563576ea922cd5827d888421d69009cb1b3089b6b8f33a7bd2f53c4f3a101cb7f90fa9baad4c37ab09022bae860138c71bc82d1bceeaa3f3f04201acd27ef95e94993a47f7791e2aee84ddf37499e59f4945c544e2155c3de4326dff9d9ef73ea147511363e8cb011927d7c7e9ca1f8bdde58e12b12785f236b173e98a8155fc5f0d2ed1354f8f912a6240fccbc95b45c039d859326fa45e718a1f50dbc3de93375e8020240976acbe5ed6df55385ed3a001aeb84cf37ccf8d6e095dfc52f7a2080c77afc600ad9bde7fa0a7bffa67ca9faaf78874d2dcffec311efc791b9c3c477dc51603cc0ab2b1b334e8be1331ad03ae86128392c74fd58e17b8b96ce1562fb028beb027fc4201b869f9e6ce8f79f45527aba94321a30aaa7d6bed0914c6e24060baa645f5c739f3bd9c12839f19fcce4a7c186385abc582df743481b46aa6637acf7d44c5165a7aeac74538fa14104e5aaca7224d07d10333e55307009a477415b345136191dc46d258b3ecfd279ef437bf9f10fc73b8307e128c754ed8c51ada8d30f7d14770f9a4ab1fc33fd9959c1cebfcd0880e3385a41519304980c0879e860fd633ba80d9b5b2bb9f2f9c159060da2b2bd40b949f956fed5f288a2d4145b637ced7283f2801b94cd54257b829d65c7b64ee60adc6215c38e8a41721496382c16f75042d449da2bfa8c80ff39c626193bade463ca8e3e8caa8e1007663708627e97a68d7d603457f5d6e947d531364b15b846e378d0437fb59fc0cda825a9de8af0f7b53f5c6ef3314ee870fdf2cf67702eee735feacdb95a301b1f80727c1b3da3f4d93b03bcfa2a8a2ae42b1ad1144a3c75d880fd7fa55ca5015390904b4abec8bae099f475e6fe60b4342235d8ef453a1ead5d6ed8c16af2fc092dcda6416d08ea165c0fe90d36db019afe35fe90bad16c8abd911828a3935e4a8a9cbc6b24b00ea086a79e469da2297bb996838dd33bf9aaca7ebab7ff92dc31e39578e8182956cb8d6778b5144c6c14b511b91253190b1e725663f9a62361d8899619f0c84bd17acde6122607e4a640b0e3b462de266de23781d5dbb69406dedf3f13df409eaeb07c98bc9eb61651ab878dbb998314e0d1ce9d9f0b29b98745eaadb1217a21fff3c935b85f6c98a1d8976d105db3021090e3448882a25327153beaf825fba40227717ed1bf5cf91bc3975f738a43a30d24306b727fb50b60f22b37e0052950869be5d9e0edd712dafd639076d123fb80e981741011e823d111b80aff3e40a8949080f57bba2d7126a3831c77c338b369a2008ade50fca39f213f6640a0978a8074a05a06ba3dea3f78b50d0c10e555d726c6bfad703dc5293cf72c236419b6641f5447e9f0a8ee7d9900831cc2f615eeb132c244dae75ba9ddaf72eb433c2fa1399c0833abfc8bc5a4017b999577a588944813a5a3429e969f9d6309a24ead62c73a06813b5c57e7bee338b06a3793a35ea690b1553353d9ab4680494f7a8e7791b04988fe8ef5027c5b94a8106eb2fd8d55fb8e0d315a2450fd3e4b3cfe133e5fc48c033edeb51888c0769fc7d07086115170e7d76e6208f5086f3f846886e1b5262e6d7ad7019b9d5965d40ebff005529b540d3aeb571c520abfc2190d3c3a9f7f4d102f2dc0e6484db3e6c70f5eef4cc28f36ec65e96a67f46e72abc17308967482d92fb6103ea4f51c68e7b5c7844cb57a100c3a3a274813783f46d87c2369688f2fc5e5180086d202a1edea61a16f1e5f241042701ee6446d35862d439f6c1791ff417900f07c908b76413dd89a29cad407f292859e142349e3bd5aa782ae0fb98e9b09b927a3a17e84bd2187c7ff3fd74df112a2b649c06626ea9e987b2ac31ccbe5e52d3159cf0104af81f8b240822d0bea5d4935c1e31f43259b7f6bc32f79422f6b3247b4eaf46899b4ffa960b14ea225ffa7188cbf7543ac12ba5202a25cea4b48512d4bfff83a380be0a5e782ffcf26f7fa095a0719c96fb388119ece21f6140ab3016a034ca2110320c5ed7fab7abd1124ba427d91a5dd2cc50208e674120a101d4b6b62648701ebf7bd292421a721aa24b3ae8600c61a05fe74f741a1ec95f8da83f09fe80227d891364ffb797a2fd29168f7fef493c82581b99551c2aea5eb71bd8ed9dcdfe7341f77c523de56ed44f96bf44c4999e2ddff7931895da98e1e521100cba05cc8dbb0eaa8d1c28fb1100d8c9c85e45531a094028e6d5c0d9c505024aacd496546fed8edcba1ace5a12a25505e8ab505897f56713ec7b2a463c2e2cc09be5d9a2bec62851b424b02c96cc65211ad229908e8bdd8e82c02b667fc5aec627f5061da820d1e53de539516b0da986c0785abe124bf76bf99bc28c1208a87ed3d4ca307385560665ad5501a5837cb3dbdbda5ff5715b49107a83553320d9716b475d87baa2636e45522b3315ec48586e49bc62b363ccc1641402633960d407d8aa406b8a96c4922add0bc3e457d13d10b2c5ad140e68c086afafcba303da0a54345c844cd4e6981eba1b773b6a56286b794dced881c769dd7295699d9afab230e9bcdbcda041877afd1a885a4b5a2cd27b7d4eb514fb1876be4ad5bc53042aa16724bed7e78ade1565a1bf5d9d28e411430485e86aabfda85e8c1f621c4ad889e0994a3a7bffdb29602e8f766db8518aae5bc8fc63d04cf3979fec3a0bfe18887ed6af5e79a471b711fa8cc01b68d3fe5267b85a28e3b90b7d64df753513e832fcc03b6b167cf70dbd2d786b26804778d57bcba829582b2a9728a25f34f385192ad383687ddff7fab682f9b1bc0cc0da0e4bfe7724c1696ebd1bbf2f74701340d6dbb2223f7de74bcf2f3fbb6aeafc916d96b0155c26d04cf76f6f69cae2d7b356521177e553fc705d04fddfe2dd864c7aa2e782d9ea2f78444297682a46222a431c01d4524f63f251f9c9e9196127d55570e4b1022714a6760157f0f49fd7718f0712a5a480ec58129be2f97bf5f862ba973b25c1996ecc18be9275ab9f33a68a346050210de3841ef3d1a397a757563a7e534f0cf3cfe0eb6fd4dbf9a23b274418f70115d458a61a0e68128fa1d8d829ebce60b437e27930ca988edd7b259e8655e7713fd120f7f3e84648858fd6ba74505126e6c083ccafa885e2c428ed1c0b1ed5121a4210fccd107c26bcc9b92c9d6a1798cea035f9bd8fd4776f8847ef939024a4d287f26ea038547b2102cce46efcdd61b4a49c532849310de5485cd02d41584e2b3caf4ac1682a018e2bea541778f39e4faead1ee447a4b2611e74454287055d5c45088cd410a990ab123750a81d98aa6a2cc40d243547d6a55a72516d645c9f46cc613dece60990b7be44c2951429f7b5269d408caafee1f875af713f7ba9021f799cceace598906b13512a42ef39a94323bf0e70156167fba36a5ef05432de8eacf9f4255cbfe7693a7b2c14663251e0186c9bad28297a986b98259418a379f6743a5a40fecda637afaec70af9b3e9c375b61220d20544e4e40fade15479f18fed889180dfcb047122a042afa5eb51cbbc71aa2322e7667c1092ec5423dfe03df33e7dbb2f34c3e95c9f82a3e92db1056165d6d74eb33385d412b98d14e82dec8ba7cadc51d104bbb7244084a3679fb9477ab35920b161c85ee3304418fea53588d88c097e2895b74a5aa4e711b1a15ae4c298690156946a51a64e1e642e99d0df28a244105ccdbd97de5b806e680863e1c3ea9c7dd3fdb97c95da6bff29add492e6eed1dbcefd559fd0b1d13c3b5191fcc2975538843266b6b8bf460bfcdb865a0677feee9718cf0b6a5ec34a2cb8ce2740d7880afc8d73051e5aed3db725b898c11b06911dd22e8180ec5fe7b4e7899ac0757e3e17c53f747cc283b06336ba0ef6c5c18dfb9a3b618a443cf228c4efa5326b8b2bc79f1ad2157dac6436f570b6dc45bc7cc8a3fa41e8a91e038cc4bf96b75a676b0547d407c105afaf1f3f2e3b2852f282a43a4e4681942f37cf7f3172d230bace372eb207a2d64a1baf497a266c1cda2d1585ef2bc229e54314645ac1aeff3c69d33de2695628c73774bd4625b93353c1779cebb1fa3f31657c6e7b970ea279938c13296e6eac00200e60ce0d810d6dce6d6f2b30ed772b41076f3367d5ee7154c00bb94b55185dc7ab35d2dd7f69b3a99b7e79b4297ce58c5cdb89ca436dc336fcf596a36cd9beec48ae0ae5b9f027249350887c5085bfea5dd49c1e0d7cd5fe919ff03f1b7698ab1e1c11b493d3adef7309628d3365d74f097b303bfad4a6c53bec7e73bb8ead140444f370ebd8f9b70bdec0fe360e91c67bc073439f261fe095f296903994bc79a117a8869bc31289a87ab36f42e613289f37b82c506a1212317a9fd639b1db5e97eb0e85b5db4cdc5ab19e4761aa9acc02679db796df284369d950358aa50a5d171f63c8d0215117b24824f8ff648b92531bb88d79dbce86707b72ffe036161c4f2159041fd13ce4e85cbe07163084b2d672914a4bf21766d4b1a4aeecc7c8e0e64df2ddccf38a657ca157188d25522c00eede04090ce5995fbf130e6006a6bc365398b22574a0b587ec7f6c55580fa95650d8a459743d2b18d80cd3247f3441cbc2ba6bb0d2e175c9c8c2030bdee8f38ba854853bf2ebdf7650193479ce386e0ba58753144b047182508ff20bd6e811fa5aa1ed4a9e6b7b3182461ce69d37771957d69861d60cbf3cdfe4704adce56332cdb7255acfabd9e35fd7524310c5fd598e1413913ca1e68e5d47ae1917570efd9a7132add9ff1e522d9f0b7def0b150c11acf7f4f792073130972920c870fd46cf4d38593f7728cbf6f295dcee4ce551b666ab726f8a2a0ee50a0e83f0d25619637916c0ddf079d042df7963b683b94fef4dc3800a18c524714dc06851289b2cf1a9b213ea7ad0806bb13fdbc9a13665ea8512a9f991a991317eb2d84e964a0c322f76ba4715af2eb7f0761daab59f13919624eb75dadffd32b429a47a8d64fe73582f593946f3a3ff4953db244304626eb23a6f4d80394b3203ed6e2127d13b6c7ac6405b8838af06f3d29398e4e08d5b74fd0a3281e6c7b63537398605b7d8b492c2d76c35066723a5c18f7a174d01266517170ab11e6aca3e757102ab06acd03bb363350934dafda5d8e9c0f79f57f67b6edccd5687a357cbe91265027ab4c71611e071206b03cd5e1f889e653491234d657a7e5e8492e384ba224ed8e80cc691168fed990f042797b71feeafd685c520a79e337bb306e5006355749f3964ad96e9949f5fb6e142cf008d184d5f639cb9c068b747dbdd3b4ceeef4e1b7b5c2ab6ef953c07334eaffc879e12bed22394b58b49d7f5e726e84cf60284f439c22cf70761ebcf2f6d6ebd2eac65448a474d6835c8ff8b7b0651838e924d1b43c8e39cc37e9f0e168a42794122d42fb1672468369424d6267f2882545af0e89a173ebcf16f83caaae06af41db8667c6e51012259783c0e433ed2bea1e9c37877c219771923fc375ba6f3a1a69fb4f3224b4e8a4c70a6726c61fc5f0aa862d7ab151aa2850e4998788c738f5ebfeed27bd05339d86b406443ce4fea4ff6c6955b92036bb61ad2a1d21eaccc7ee8ae12b85537499ed7e31539485a1d5a74251b13747d12e3ed1a91a3294c514a84ec82c608871ad7b4a6ae1195a30b535a715770b27d3e3d9ef7c69feb9b5d16e12a85f2e24148a403f719b504b37948d2cb4eed4a1162612a65204da6d9d741814f93b016fe981b16b8a6c1ad52f3e3a8d44cd102c0ffeec5b4d7f0b89c8d513ab255945409fb793a0d417c01e88f4602c249d00d39a048c29e3efac02680ce007bec88ed5cd2e01a0dc4d37056b5b3da9dd869a4c3df4decab521e92cc9460498fe9a8365d3861aabb89b7af06f3d8945f775de783d66fd0437eba9e867ed8fc2481e4910f407a59d251fba3ca659759d7d7d5c047b6a8702491565e6eace6d248098135d66b1477aa7dc81c1d12462513a9af95d516a3c134c496bb685811a4cd76cb9b581d6f53c83a98f653dd55dcff0e539c6fb128d19edffef87670337a64fb561bd454f10700a1c5bc60a7e68f0ad9685867a3f376872a750ff839123ad8ae5e0bb78b50b77b4087e21a54e8759427402230d77d4425d3e8a5c65d036f6317df8d39f1d8a1a49093f3515b72a5862be0b0e00741911dc5c1bf9ea54b041de5ba4ea3dc5afa5aa958d7fe57da7a8e579037a543f3c3a7f6c6bcdec5626f69ecf8df46dba77849414309108f0e4353842979df9f0227921d0c9845bdf6ad8b6b4e8d7f6189b0670d48bb82fadb4980d8b9051027709319cdeda5262a7de5a8942025a8544757249f7b0d7ae74b9047f4c8b217071bef3c0e545408b1925f864bc69eb0825b9176a48e1068fc66640683f8461f503e4fd67e4a6a0158a29ff7425e71cfde6a5275239721884b9ab7e230e8563666a63031edca96cdd5244fb459e96b1324c93dd1723df8ef0d5993c36bbf677f13c3798ae11fe4a58e86aeb416b0ee0fbca8c0e6131d852fe81757591c35f66e25d8a23698cba6858322e8cb6265a12d4c39ff273ef30e8feff5b652a516f0b166d338e70168e9eaffbc23e371987a34b51d4b9ff522a234d38f6e92d9d76825fbd1e6301f9a8fd32015aace960efbd101471713f0c67e7dc88c471b25bd530689909e24b3c26bd4c1ff37525a15ac3b6c7cbeba42d0f9f8bbb81d752ff2d43e2987d4b9bc0a2b32a4a9e307bee024ea8aa61abc5985debd34e550382ba480c65ee22cf828bd2757f059f87b4a2adec71e7e44ac34ad5fe6b2a931d6b9db60be126717e93ee576fe00e5df872f0a6277f7c16b737ddf139be790e6ebb43aee9b5f817e7c8c9b40ff5de167e8418957258ee8680764193ee3e05479731afa9844fd768911751a3f67b618099a42aa9fb711cc3ff7c3f0be0359986ddfb11fddbfe7ca8e0c8e540b2f62db09b1c52853bd3b5ce1919fbf99a3515cc09f3267b9a531f888ff46e1e912e8861a657ca99a3fa39665953e040f328a599ddf947251175ddecbc579ec28f363ab8f667fcbf91cc10ca7db03febcaeb3db1e71c29a0481205efd55c56a41041d22b7f48570923d5c7cc6758015b8d181dad3f4959db19e8384ffb75ae7bde2f2b5c6cf53a5ab0f060f926d5e809ac1e0ebd599188a9aced1aa249718abe5659de16758d0ad799e6f3b4bb418c087c33dde12079e42acf7147a8908ed19de0ed85eaa212bd0510b1a04feccf6ba4bf940a6701b14d7754d765d40993f2dbe373a4dd390a0cbb26142c105218d841e322d4b100456dfad3f75223ec83211afd7dd8291b988b3b093b0f83606799b3e98e669e45f63a6d82b879725114637d308b23eaef84faa3ea0d48d9e028da25a146d309ac2040a2e5dd9f2f1e0615784ebe9efdb9be7a2bb1d497030efdd5da57c31a0b55abf2ebd9b9660f7cb594a5c41d7f3eabb62b80e53dcd57ede8c864880deff13c78bbfb12f51f93c6dc31a51306a60d604a61741b21b894677e627e1a3520bccf4e3c88fba05d1da0a81bdc67fab4a6c4475c76efc645019c33287194c6fd1bb2edd78c79085391467a27a0405d599b042bdbc6d02b9099937cce7bf9d54c3f8722f5311b76c5b9150e31514aa23101d13ce09bf58e39e0f0e64e9aa9bec2efc7ca793214603f0554e79b68f44ffdb8aa0522ed68eb268341d46588e0e863731f7ab9d3884e2d87abb78ae20a5f2e56bfebecc4469d389f74ddd1efad5fe4ea1b284ed06e4cfb4d469e01a7fab130b3ecd65c154dcad648460dc4d16b6a38e693fc30781a8fe6141b00ea157933da7bfbc2d87940524f552313e8704239b8cf206bde4387d609414e08ae99acc611e04a79196b969b19e3f71c2c80952ea897d973dd82053a322fcd244881f18bfb99eacb49398cfbc6678e67c8b359bd075254b8d1a129c1c0c0f20a56ac38d665d521325a548568690d36d954ecd8efb3d70c3d4d2d91804f7adf14a8de2dfe68c295f4378031fed2031a86ecea6e079df8b77333d189441615678422a323ff91a5ea2ab918df2c342feca51853f633b1e39867d3001b78d2689b31c85a85bcd5b722e4d164535aed6f31c5deb5269c4cdc44b4f37abfdeba231aeb667988b1d8e9dd74e497a53499682a3baf897659c4c5c93c8468b0e66ed6d24489d367cd0aaccfed30d38b4809b1b5cb1b3dd953a490da56a188376a5a52228cae1b3957800b18ba0eb3df6b77c9c8a9f2bf2edae6b708cbfa9edd8ad3c490f3cf83fa4cb134b504383bb6447da0f2ef5a6e94dc1fecb165ac7909ae2bdfacfb755920e13bfcdfbe1ee78962f4bf420fffa47e3dfd0920a43cec6f0adef17ed93d3519b54102b92bf02aefe64a6239838bfa496e5f37e8e22ee10675cc154df8ed6adc5ebb9321418aa5c31651812a446002c514c0f209c55ea5f922fcea80773360a65a8c288125331145e4fba0aed070e3d67c7c5491ab429fd3b62f69996026b5a8365c9b2e078722a3e133bffa8f292aa8086bc6141470091f492f91e7f07d7f1d1b0aa411b75feb5cda2767bef7857bcdc279db7ac212b149fc6ebe9b429ae449c8a7ee0795a31038547f9c504007eabf0f3c0aad38a4e93048ddca36fd48c21ec27f3f5d7f7e2595dc3c06c874402b0d76c27b2e47a743c9d30c7e65e82e174bf5271026e8d28c35e2bbe0b2b406cda16e58f6389244c4362c8bf4458171e1245ab1b36ea1578d87f947556cd44338b6dd9d9ec0f46415763241ef91eaccbbdd8019d7a9e1d0df812d057898ce4c717e1cd875158df992fa8893039f8c61b2ee3e0b5d060ac691fcdb72ecb3e9a61a5f5da5e95968481adb7759ba884556642b831eb4e4f0b738aacbbfb9347038b139c9d88a32df784fa3a06653cb6f7f782db48472d001a3053d264edc589925252eb531d738e859ccc9c6cae4ceb78caee3d69f603bb210e8c3a4c187ff7eee956c8b978a41f70bc05f6a889c817123a0e856c8c3492a55b956619c76242ae8c1d9d6c55e8082c7d7b107a9264de2b0fd0845b8c2108d6f503cf9356e12907b664d785fd7429ad481f089cf8aa5f57d8d925798896985035fc168e5e4b2949fec3541ce3f19901e750873e907e73c8abe7bef7f20d9a4ad205c9d05cad8f52bebb62f4b1e9a888c26d552d8ea7b14df5fd04e2a22df43ab489235cac655dabd88f5798176287000d46faaee5bee837eda29812ace3a5dfed708c6d5f93e713764f000ca046282e22489acff3436476cd86fc42c7ba34531a639c17ef452d560e541e28741c03697fe112d0ac9ad6a8b922bc65d4acccf2e1ec8f3aacad3b13fa3401c20e91dc65d392f9a068236f87f6d10171dba8dec85d855b4c2ffdabef56ea5d325a344c3cc9f1032c3db0b78ced35aec1c0ddfb1d63ac4b2e8cc432300cdcd85d5d5e38548d844006d315d821dd32972f59da3032801d7c3346f32e7639f745c02528d2abac42123c9da5b5d06aae037de9af9562df871193e2c47aa3bdcccb542728dbb4f29b161cd177f368977bc730146b2de09bea8b23f6e747fe09d5d25c7441efcde6e2070502d129d28cf1851f39dbc9f2d446110f86dddbada7f41e9b3be531a13f71e212fb155c643aea24f79c349d02b9aa0538014145e2baf8c425e6517ce8762289c0074cbd6573b2bc5526632f9e9169bbebe8680c7b332f9d3c9465266e9a2ee475f0e5e7b9aaa8487323d1d26fcf86c277fba05f8221b8a3f5aa47c73c680148e0903ee6abd6508097854c99b26263c85132c03f852eb168fefc9f09ca5922b622ceae5cf4a622c961e3f6ef4f8251dceb79c56dfc7624c5a6725d240f8b994726cc7c0ffddf13ce55c8e7e546daad2dc101934dcaa65d28bacaeb3652f516071c86a150062f7aab3de6922334d68966287138a3fe6fb41e2e4c9ac821257f7c2889cb6aeb11619877e6479cdc7ab8873ff3809e3e32e3fc9b16abcb5494959eafa60a1661c1813ec6d74a85203b5b6576aac8a437202cb7774b1ba9b368918be9a4a51c6e7b6d5bee05700bc06ded40f3b4d2f58e684f6f94a023a7d046ba69bf49bbdcf3f3d7fd74713b24bb2700d91f9dcf7fff719538209e6b7cb21076cf7fd893d037034add72256b47695d6a6c612bd1ecf3e365a9c41005b22fd960cf93b92cbcb64c3b9f3d7c819f3607240b9d11fc959782c2e816a3072822062778808bf8587b9c6ca996273f0555dbe8ff6ec2702e0eecf1be2166ce24cc80ae8a04c3c4f0a18d457c5e2606dc9e1ae76cfc3686dfab301d8a4de4234a0d11cff44ebd2b33d704d08356a71eb38ca61fc70815e652269a1a2b1f922572943c2d9c33aa54f796780bbe426ebe74e3c807219e16dd4114b88005e875a5f94f8f28572c0935aeeabfc78960fd677c1650489ea3f6f40f8b7137704f002990a4184f189fd67c13a335099f89cc303330d99da584e304f917d318517e86b008b7755b9edfc880d65c383b728b42d39a7c1430d48008bfb82364a7ff994d0f7aa1ee651fdbb027ead04a33842a7f6d9556d82f70f448d087dbf83df05ec08fee9fa4416e4d0cc9ca01264b14b9119e28f84e0459f28d92f85927449d41d731a407e8446ec8a9c1d59d9bfe79a2d89e820f118badd670c1c44e768de2ebd573b001eb079726300f133af90d2c2a6215d2c149f60aab59861d7d889391124e253f702a09815e952ab91d19bb0338b72478b226528225b8fdc68a36971fb2349ea81aebf53562e8e7da5bde6103d4a8145b163b1efc047430af609681676ae74e22491d08d02fb090be1705068ec42464fe27aa7f799afc4bda2da896f9cfc67e692ab1b0e55d34eea02f71aa832b58e686dadb56b6b732a96d486cf48e49ae9abe14c96c05c7583bf5228c0eee5cf1472c3778be638f8b4c5d8b78b470247e0ecec0d698567363899582a94a89a61f1ff2cfa4656bfe1fb18cf8d851143a9f32db807a1fcae7a2f663bd07013cfb7f9d5733332247e01a18d86d08b6f84d682d7027cbc207d2bf02b7577c2facaefc509ffb3a6b7d48284962610f5ea3ff6a926a87457acb2a3e2e603c8b32d0ab254dcc45e09cbd806ebab223c8b3f0ef883f2edbd03318417cd484c7537ac2089cf73239a731f69b39a20fbe47b9b6a59b1aee64a6862d716c63ca0af6e19d51914ce92528c54957220d9d335373bcd177995c0ffe7c30f8db7d853ee6d1c67c3bec6291580a8d5acfb7297d69a524af8e3aef5bfdb97cc4e5685bafa7246dc8dfb98fc8185910f7602f426125babd7a9cbc61cfb6af0fc910ff04e42980263ee46874e69013ae8095d913a4f6c0af9117c28beabf8c59c1adcef2f927e606b800ac23e29e0185e725a253d92fc420ee706fe4125fe3929cfb43ed9f1a08da2b496f7c81907c60cac23b586ba4ba9dc8099da48b86678de3a973a16d14eb45f734342789522759ee4f790974f8ad1fd514f1f0614a09be4fb1ac8aff1922e4edb03f1e2e167866966e45a2a6ed2a5ea8d12d13b773ee3b964cf3b5fed4dbf660781595ba3a8c9ea1eaea37a658ccc3ac1e25bb1f02fe40aa6ee1e6e3badf5aa66eea7a9cd61f3e7b5151292de7805054ffcfb896fa4649de4f249149e45341dbb5aaa997f4098a1c4aa37c8592ba5479589acba47396663417f9f8906f04a3884957865e7770cd6704372a60d669bc3126a03aeb3d4dbbb27de420fb69b47d72c4cdcfabadb3abff564a9f7d6ba214d95e87447b8b77948a2e597112af1a57037666bb287e86ebd7a3f76f56d216f0a31cd2e0bd59a2b3f5ac5b13b9fd4138a2218c316df814ba018c5fada7d0070b818908bda8683c976fa76ed66b36552ceb9bf9850b65bfdd87b012e24c6281c6ff926cf99b738d4b96c38f6b81f85cc1a942fbeb147ff52d5ae32bd4ddb511af61f7036ae667cbcada9e5ae43fd1339067ee6045f074bb263a5f028eb04112693640d64b4cc70dcf06c79ec12134adbded94781bc500565c286080a03a87e82c74d4631041fdea0de1715c999984639f129be456821c092f4b38ccf9204ed5390d5fa7af623613912e3ec0382468bffa40c1f59548ee9010d3a131bd88818a1802e3d20a5e75e2e50c06a3a7e35803801c98aa1cbc2a4ba889a833143bc93c6da473d6c884697285d21a41a67d62f44cfa1c1d6c0dd4e745db6c7d5d730cc080e2832678d0fba7506c705d5ac086afe43b2618865cea9af26be5998640f3405ae3f9af0c59c6ae781f05e20c29d75d728dbbcabe915880d7c935bf9bd040f973ff668142588798817bec5433e596746b287aa8e4a15bb0bdd5abb8f7ac43140f1f62ba7a3d08428e1c169deb688cf6db8226c282aae7552f4db14abdd91d0ed59630d13786f8c6494170241fa06d2551e3d92159a330a13e15a544ed60c4300abd895413038e2739e4b798aae4b7badc6a6f9810423064ffaf6bf7c3550e0ef2b9bf0ef4eb8c6656d1697eded311dfa5bc343792e5344766f359195238564057c85fd2c37a74ed425d6f824c9db5e70431733e7cf481b178c9cd5c758e94c18354e95ac09de0707d657f8c2d6a7848d0a15034df50995ba11a43592b8ee50db5d830b4d880c791cb900318dfc5afdde7e531cb2ca87a7c4394cf165a4a1b5610b621c84194a0ebed4924a4f8c184c8212db13fdcf4b793f6535d9101fa0423d4ec65e7fdab6ed1d742849866fa07091e3fa20146a0e2837da3523661f1705029dbefc8fd6e70f777838db3e7dff13d14ddea0b25ef092c5220db6a3817288e2602ce1f03731073868b0710dbb094ab7ba4eabdee95e6edd94e99f636a304c49efd3eb24df31cff68ec844010f7923a13ab1b4cc526f0f775d735f37b701d17b67410070ce1005236bdfc23094df2133c742f3e3e5763094e7f8c9873e6a8112c2dce7cd5c1f701cdbe396fbd3e163ff6422f2da23ce24a8d71c07b47423190b576ad0a192a5f5789d5a97ea39394bf0f0ac5f5f9ebfa7ccbcac028f555637eaf9c7362334587d68ff395a273d7a1d6bfd75f345b40f8d88194b6a52b317531dda8acede29f0d0eb38f878c4c6f27eddc023d54d7a9ac986da0b7df72caf724c28afc16f7c3072b42fec93efcc73fd69986fe5e4aa2485e94d6f1b6bbc9aecbd1b1a6f72581c65bb7ad5a48dbbdb9b883ba6438ff2de067290bb58746c6d33ad47afbb9298b369a9e41ff3478a9265b52a792c24d4695821eda78930302687c8a273f2ace54a01407178f2757fa0ed6bd3b71c9af933f884d77d90f0ff8e95beffc206ecf2a688ca1a3c07949ba1644bb23f646101eb8975591ec65a4da5d56757617ac15b2b86e0eec282af5f81038a2e3ff132ee1ad9e09bf5646e1f5fd1ebf73d097ce5bba52ad7b3de095e41d1ebc5797183e340f250aae05712cc8d0548333698838643a8e95eb9be2288f05ba4a52a5b6c987e46d67aad702c47466e75f2ad4e19ebadb57f89c5d955c6b963f062817f37ae6bd4f69e1fe8d43303848b54a69e0858813719deb7b48c400c3b7e41960638cf61109c565fe0f3407128222c33cc9dec1cf67a35ed734e887a68f126aa2d3042d070dd98e159c174cb8a0e3d4f172052fdd144009591f1f770f24840c8185f09937058f208af9dcbb134fd20bfe2e215799449bc94d4ca0129ce268a208e44815ca1ff35715c628a76b5dfcd2e1270d4aa8e4e33e3994c6633ca231a50d70267c15ee71441c5330b30d20dce87f7c59618a986773ecd7ccfb99e527d96213536db0f6c05c26b97dcc3b94085ba99d2df054953a1351919efcc21d53c2a6fa118256a2bdc8b894c221d90d9639d9c9ae40e1423e29214bdf8c22ee546ed121b0793c776a34a1e7e4496ac77c9661aec823571a5bff331b21285a83e420101ff85c85ee276f7a12a07770303efd8d05eb6b1e1aa64bd5ef0e64258d922784f4779907bcfaaba0b6d0dd82c252b03e7e56805673923f9238c5a3b7ef2e51e9f011a053ac46abb3d8c9e5ea2aff2b6a58570f580704f17caa540947fb2732ea053594fb26360123e0e582472b8dca5dedbb34e1e61b75fd67db9ded2099092acc5a7716840a4a747edabeaf120937da54e62b721d7a51222510dfe8572d05db888168550104b8bd1f9b8fa967f28934010dc7f7d7ae70705ed2a674a1903b068a6d464ac288ece0103f35e7726795d1ba07c10a4c922b4fc5254728bcc5d003892cd876479e5d76bb622853c572796c4dc5e1b3b17b823c33f0f5195881a3616c3390341c0e500126c650497460a9f37b57a1158d174ff0d0330ddb6532c68a18e1b54b0b15971e963f50377562848b1c51f54e893553f43f32f336219825d70c5057a7d26a04b74588e02457be9d8ce63f3e31bfada1b307b0425d2b24ca49a0bd39957d43da2b9988ac5f7da97e750aab1353d8ad0e4808442ac250a59f8b1857fb2cbf5db008c9658678359b7223e72477ab3012cc5fcf08b81481b7f9328003bb7a38f1b4e7c7125ec2f2859921e54980f4153be41270cba14283265d2c5bc9e9e9a9041be4b23d09ad5df7e03e17fca3670f1c010ee15fe1b40110eb5bb05243a34a1edab26037aeed947a911e869492d6304e8a1f33770a998ce26de8ebfd3c23ae8de906a2fc703cfd1ae5e9c2165708be0cf491f1326d6106d3ee988d7e172799fad8b1e8889ab4271c5a139485abb910247de29b21f2bfeb0e1869d0df7ecfd43273cda950f50d5389f91aea225f353885f0627ce4c6f9fcf1705f47a366ac84c74308ad58ecd51617d3d9b13ffab9398c6fbab823261a65c90c0f91845eec425a92a66261e6d9e361dd73ac2883a3120fa03ac4357063143a43112934b503025f1cdbda8d26b1315039226a3a7a8f0137dd41066df5aa92b8336a9bf8fe2711fe5c2ed0c051bf50cc849cc36f93e6c88464cb65e903fbf92630185959bb55181d7e220b96596e641f09f55a0e5dcc2c225177d6681cf8b1870fe82e4a5a82dbf2458ec5ea8ec596ebfea02f3d7eb0dee5c43fee8682e1c6dde41d5c6f2f6c6c0c11658fb2306a0bfced088bbd9c4fac4c98ae2ac61a67afdafc224055afa263b5f59a8d31211ac2511d0fdb74791a56c4093af86817a7becc975bdf31155f803d605c3e28d07069b4347924fe9f70692e7606e1e64365ee40ab2ae4edf66bcbba1692d3f9056666af4b147f22be5b8a98b6f42485359d05c80d0c2df747907fc68c9f6b00ad9bff0aa70887a7595ca55678d7b31e4a0a29cbf3a72357b15bedee113cb4230291e1435e77aff19f6c50432bb1c395158bc9d58c21e266f25776d50a7f477a5d3625a2a6f0a784523c0f33b59e855a46bb74c1164ce0b4a70f3cebfdbc3f58a830e23ee96b9e661837f314c938546c9d416139b3ba6918cd43f9a495240da8053f1c796ec166aab3a31cf40b103e673222ac398a51f5256860a37092bbe24c2d4956e8bc14a5f6e2511505a5006fca8d8a0ced14696f88fd2f9348922a626998f19da46e5e092729ad8994b5de37cb7023603835506f6d808df9049dcdac178afad39f526103c4618507e7cb63eaf286860167ed28629e86dfb87a6ff2028010570ae43bed645d8771ea86d398aefde2405dba8b29ec02401b66d298dc2a366a7852c733eff4282457543b223934c502808087840b7282475f5dae5437972ae3c567849ec3c17b75f045e3702e85fbf7373f3989334f0dce96d1dbec65bf86263c54339768fab70414424fb1d22b82727a2b3fefb9f9fa63307dace910c0161772994584524d6f457eaddd856f6c6165e9a2ae5d4c9734432d37124268e0c28a3568f19b21399a2e6459e640669c68ec1acdc5dfe89cdf3d88aa6c99b220e8ab963263ffc641eb5225a48a24d07cfaf65bb61d5ca2bd4a3ef0c95c7d9fe3988d5a0f4990a096105bee414304e49c96bfdb56e736daa4af6f7ab3795a2b6844da8a56ffc251906d6ff2183799c8e020ee6dc1b97863c6f113a23fc4185b1fa7362f062c13b15b05ac987a270deb55abf8cdb7a816af63ff611546f8ccd81bdf0bff4e1ba1eebe143fedef21a574ace40349f333cbe25d7506a8d8fccea5decba82a188f4349f298fa3deccf151cb915a27fa0678445770698ff70ddf182faaff25cbbdcca2680292057f479806dfc650ad44c5a0987cd0f98d6be684f380069b4bd0873b6663bec88a426a5e1667640faadfe868ea4826e53b03f8db691f134388a9d368ea7c1c39427e9f20bec65a7306a6441eaf5f7c45363fee1e14c4d3c0b534a641fb3982a29e8978f6e7dc700941183daec26f219a6b89156e7a2179ab5298c03193fbdce6a3c345901c8deb7549dd82cb3bd3efcb9bd0e91604577db4559579dad18365888d676ddc9857e61df3cba1f615fb48a0d069fd132aabc3d18e96348435f9cb1df5609e5bb3781406650b565925990f5a6daa70e256ebc1e3e3b8ecc83fbb269bf8eb0023cb14d7543870f379c7720a7152fbe60987e9f4fb70cd0c824e3566b99cee4b1a6956f23c183e810b7ad7bf5e9779fe1bc8fc9d1446abeeede9ff6d18b4e3b6def66b880a27ffdc41f8039a4d3da7417cce48620edf84e187b381155c252872c79024d4c52bff4fd32e4b29d2663515335d8700b0b761ffcd7d2649496f2cade2eeef272a3ac4eecb915a696474f30a1802d185945539b55ab352044cde5516427e02b19abaaa109622cda42f2fb16c153ea6f81663a8a76434f1b3d75563bb2445454d735484b8f2530b8fa782dc9dda0fb48f70fe86d49c2e2c03ef5c98ae1a26409e1b2751f77a2ff1835611a274d57f03cd0c7918bb48894b7cdb829c1a48a99af20bf69f0e6d127b5e56c07609248815b910850fd3bfaad68f835be9dd9c0bad3d05643ae5fd1c3fdf86349aa85ab2f903d5778fc05252a1a267fb661213a6d5fa466c4504ad19b91b85a667644459549f20911130c0d8cc68a36704943f716cafb3c5141a84edd9c676577075b2428319cb88991be6f131be4534a6cc449ff3c9a8f91d04e4d559031682faaaf032e9506b0a1201471f191d137fa39d78b3ce212302b0bf2a3c29aba9df4c8f3ee23b05db1ebf4a8a1123c8a450ec94d1058bcdc8a4087ba0f32b975ebc91d410bc33c29e8bf4300c077fc2abdbbd71d9300ac325daef572a7334dffbe328c7c5b81682ab381ce0af4b069d10be3f10debbaa2efaf0dab2243aac1da1b71e0c622108e22fdf0f80623dd23b3b39d46a707df6d5b6fbe01565c5b00997c1126908169639df57fc7570727d411b085b62af54227f3d709b2678b68e342b9e247811a6126859040014b41cab9b20337a6c3832b0839ab7dddba56aee2767bf3db1e20ddbb7111f28ce4872f22a54b6402cd808d13db50a2857fa81d0b16b9f8a722348e66f464151c11d6a0f5254c127a45c1f64ad215dcc42af9d12fbfe1a6ef4d164afd6423a6463333acf588ae3bb15e62f329bf1b7f01cffcaaa4c1f26be9915d4e61476c4b9a8351d7ef343a267c37413f9b52a04d79f9cc1d3dbc755f3baca5ba07cf7ea1e0a0570e2c1bdbb44b51b15ffc62f566f5f2f8141c558583a4ccd1ba825235e74429c29dc288456c02212375605ce0c5fc64e282032f4b0d4aa5bfc58da0f295aa9f9f65ef557fc1371d1d68b9b942f255376f7bd1f078d03b3a883cc55cdc1be73eaffc4ec004f36dd55837a591430e7a4a06ccddba595a2737c1f7df7d660910a4f0cee72a2256e496f82296db36ee52ee66681b30482d73bd2ac05dd508794174dbce0797b8b8bd5121ee0a7ca291d8f6d5a032696b3cee140d90722e1e8f8651af601da0538f23baef7682cafb761682e75198637fe2891655a5770e01c12b29bbaea3d6b374ec68da9c1cd03f50950ea778e9b4d662df0009892c7f13bde6b8711c84a8cbba0580638bd4313147b37805452892856fb0bb68f226747999bab35e4649a5afa1797536d4ed04750b09edef01b6200060a35ec947d2f2e1bf2d5f3599de3f37a1836b25ce95814e29e46035c002322f85603840e4f306060c19f39a15109a283af460989db316597d9ed113f3e9be72c456795e795ef2a260e8fd4d21c04d902abb4bb02fefaf118e5b195fa1b8c6c050cbc52a6cbde9dff420ac6f3a15e16915c730a7498681338924d8afc0c340cbff1375204759f7aaf24854dfd63b6ebe1335224d24a605a39cb017cbcbabfdbe010f9bf26d0dc5b00dc513c15edbce636558e35784c3b1404e89ef72cd2559d23a384a01068cb608f4d44425112b0744ba16c08580108d1d4ca175233eaed5f79a07d2446b8062680caac58237095ba5976b3394a3e9a9cabc6d8d03a662acc13b572fa35b5f9c8a4b32532d4512a2e51d3e31159b2d619b3aa43579ee4207c7d41115fb85822067d08b193dbb46b9cdd809a99403a3ce814d80ad2caafec32132a51d8a29c3e81969e7376562f3ebeb7ae50c5217ffa3c1f64ea77b25f67eee7baa13b70ff2e11a6d1756f8918e5acc259607aaa192eb6038644ae18620b2533f4001bd64c5e5fd7ce30270d233482c556cb142e946fb8f07c169fc3ab70cc30dc3040ee339301f51f7715d87aaa132d365d3125f3ef8a54fe4d83339a63b4c821a23ef28e8e15c062bf9a0ae1a74aa102c96c8ef1cd6744d2c489c75c5355c7bc042420d7e94e42f4d29b13ea49c2c7e05451b4d4728f36c2e7e59fa07ed9a684415579e80aa2b79548a8c532829ce7ae4780d22c071723ab8d3bee8eb30cd6a3467eae9ef0d7eea897425fa7da3c1987002e09da8f142c9adb89ccd3880acd1dcd66364c2cb1740f71400a4cf768e012e89a0f08ad30a5f9114c9b2d5330544aa8bbc0bc9504fe5d487eb0c21da698e4f0c5c29bb9539bf5187731bf9e2a2a37ffc7b16dbf7e58c9e13ac42884a6933dcd2487149de551133c0ae8cf6e9f7193d848d65024d8546242d8dbf313c5031cdfbd3b003c4860ebf0074b459716111e8ca75bb49f49ebff75ede6bc921a08414dcc5e38b3d0ba4e8ba9fdb089e70bcae24794799273796086559b3d2c5dccd486572ba10c3df8839be62d9c44732e67305d68799dc4376c92aa7101fe508766b44be620e493231b1c91f8257b244401ef075ae4a84949820d7c8530a6b2837ccc484e63d926c4b9e0a2c6ceae424383abe2430326ecdda4f960d86ebe72c5155b277ef8b477af3ae48b37a92c3b3baf7565da8db8738cbba0697b4076bba61abe164a94c07bdaa7f318a4f8da741efcbf39d0b7ba8f74b745212ea4ea01a669bfd903dc2f5a4d3c5ca047c894a8714fe2e1f9ea70039b93e21e84c43518cef55b3c8634b3fcd5d559bfcb502e4a6cbbc4fa545fb4e6cf17ab0ac6855e7a88818756a876eef75a9ded9d195af81000523fc102c47013a4742a8d0d4d36c72649dcc90ddfd5226d31b3d2811e68b3e606798334abf06995788a32e5ed481deec3bbe8d1430b5283e776ccacedea44c13963cd3850b3dd743b450a31de44ca97bde0efd4656c641f2bdb03bce6b6f602b3c0b59cd8be328a2831646c15d1e6c9a55804112f5628823c31f3ad844e2d71ae79518fca3146b2cfa27b431449377acdc5c1e091413ac7873c991e5d2faba53a20b4c77e5e304b04279b14bc47978e6331a93261c99b85e1172e2d77e069a3b1f5e1b0d137286bf141fe6df625fd97e0f3f8b2be4c8146e62b6f51fc877676ca00518ec3dd081e6cfabe99bb8b6856faab60bf2077d56d1691c6d5ac84c2f482bf6f8a8e1bfe1f3f5bde9a0d6dc92cbace017a455aebc3ebb66f30d11467e761ba40c7bcaabd60a1d6168faec67d45e0dded389d7e57e600d604e8314901495d601bd04c714ba353b60908cd056ba56e6780c6bf7c2e3406fd5b8a5bf20d2753c672c568e3c0168a390f091c3ee811add165e647c0dc4642726e0b96a14d0b2223a5b0501117894df1a672b56297e0ee7499b10d23016df353f7aa86afdc54c92f61ddc706a26b0743a4f93a4e96158916f3879da075a896e2e6c1e8be7bce16d5b3d8f941afb828f56ce1ac6c4a122297299f786b648a341e4f49c2986f8ca6be6e134adb060afce89b0b103f2195883ad7e6f8df39234e2c415b296a47c2645b06422d4280dd6436208be9c5cbf7730f177486f8420846efe35f21effbe43c3a5445f6e1e478f3fdafcdd149ced17683b76fa45fd267ac22868a955594a417fd6ba0e38e44ca67ee49c0667e9ebbbb1809504126c4d07699977a3a65013f9e557cd4913e8c7c5910402a3712224637c62306e31b7cada0744b2fc60291d9208ad1c7fe133f4854906c48def8a98a4718f3f7feac2908dc152f4f1dcf6a9e35a62ff0835726733de68e6add4e034606c5a21797b96257c96eda0b12ea9af07a113a095a0ebb4fbbb34b44c94ee2fcf59203102a307bd74e142e2554bd1e4d3a2424f027ddcc4bd8bc4f9dec09ff5aae4e5984e43886b1524ead88e168b7e943179f1ab62f2cca023e6b2882d847217995896609a1f0e35e8b8d27e24e8eebf2051cf83d91697ddab2a85763dd24ab80cf4c5b97a426512624b6087a71d9bccf6a0a7d806ca3158ab817dcac0328fbdce3aa09f9af492dbc738694cf5d86720975582b47a21424f0b70d3dacabb98d7153cc3592ddd8b8a5cf1c58e4ef8ffba17d5449984cb5fe6f42bf3467e1f55fde79d6816576e9b4032dd1b39bd0fc0c221ea353cfe1328e01d43a664c0701ee5998995c630c71d3bf404d55cf9740f9797970c066bad0d51cdd28ce9f0182b6d47d471ba83be072304ba2ca4ca0c18c4e4c19d066b1c060cc22d8e46f47310f4d0dba691428c9f288d1cc9df805dcdc984f3a1e7e9e0f8176cbe6a9156b897c3dcd230e4e3500e5e96be0b9ae56c7da12366ece3596576bad4baabdbe6677f904043ca3e9a704eac9cbcb5059db2c63d934833bbb91a3a64d463a24e59d89101e39857ee76ef0679b7fe2b5fd6c2964f40a94054720b4cdc74d7baccff4d5e1c8e50495b0a91b92d17921aaa9c3a2ffb3f21c30dcb2407482e4794204cecca6f21b97b85885487c509c9b6dae2d037e9f18fa36607fd3ca2b641f9b51a7d0b58d832918aed263ab0f9f5c70568a266bf194f03002592c0514379a297821a7cf2ac636afa816ddcec95e1221bacecabd242f00b91f7cd435c87d1b6e13ef320231732713abe207291a931c27e3fa6e7843a5db041578b601c1933fbe6ad4fa0162fed1c5d2ccee2672048408176f5d2d0a0ea413bd73044829ce491c517fb1068894d46cc89c4929854ef039b923f9c2f91a9bd44e54ce01735abb4a77180163339002102ae42567bc1baf461110793d7e8d491c73da8c18b5dc528ec263a14a7466f88a831eb41f4b9ee4cc95ac3ebcb559928c7d3ac41c67432cebaeb0a79991d4d936181b359fbb53d44ead5096246fc1a4f1de6a5843df96d902a886f948a44695ae9c766fe55e8799fb5fc6e98f865303fcb641e8ecc113952e66ae91915d4eb3fc913d8056700dcad522502ef19c7cbfb42f1abee48959d897c7c4d5307d75367f21b5e7c71f952cf817aefbb7e7660b4e1fa4a2e68c4cd0c39ed821c656482f2a65fe24ca57c79d3144852af62f864025c0aad46610da883f44b90a2c9317c17e8fa29be1b9892b202d19df4b1a49a1f91f32a35ae980fd4c44527e20f92bcc53e9a4b989832da2f8200cf4ba489cd584d113b3f592f9ca765fc0d6371d4afd60c44fbec829b85ceb1df39e1f53013997470f51e567f91c4774ac18eac39776b68a0c4121a5d641f5a93162475cbe99bd50b63c24da614de64b9bc2d08754539c327a42da416053d27c07e0740a6d7a0ef6b5f6e81a88e9a2b264b0189ab3a6906ab10966c3cf58a66ff35e808c7aed542a297373835c33565a1f5710ee4cd322e13286fb0e1707722572287a6f339ae8bd9e17d528ba7f0e7c3387fc2e76b37360736c4ff6d87cb6fb42a0c303bc11d8b82f37fbb3e560f569f067186c7da226f5ef8979eaa97ceb0035f5006ce4328d9625b39b5977e47bd17a3dd2fe01fcbf346c3356fd4088d2c2e277f9283fd65fc547bce8c4ae5145f6f4cc95ab5423ebdfe5958b306e81fcc6ddcf55c5dac26ac8bdb5098c290de0dbeb35b796424e9f4708dfb475fb881c13428a4845e6c4705727d5480fdadbb51634cbeb6ccb0abd6ac7e6d996dbf23510bff6328dec97ee85ee0a6d253b0aa44167541812e60e1e177c053fd81bcd74e3064923c9ce6aa9bc26cce37aefe07b714cd73dbf2f8d2d7bf93588431d90098b69159801a86495ae65a0728843c6586814777e334a092085a542f92f21e1c0298512bf172707d83a8c4432d0448faa5f0fed942072fb6ae31ff24a4f1094eb707ce46322ce1edb44a0df36630d2faa456589185fdd7e9108df48cdd3f7f46404e3c3b2a5255697d95d61f04b86ec6bd2af0807b70c24f6435b43e9c25a5456eec5f3272942da117f560d9f3f99b82895b4ae6dc376e25995314962c50c038cf73dd29c39a645c41a89f3ab4141b1fde55e35e232ed0626fd60390ec4b5d9045d5fe68f7bb0d570ef6e62575c802a58ab652fb36537f3a91ad503e447a85bd3050918ae18b870da2f72cfaaec4fb8e4918e930060eefced64e95b75e02ead100ab021a83ae219c894b79910f8375f2c5eb46c6cd7c8b2cd4b763fc59ed156025e42d4a821e280057c371f8c49a3899351785ba3935c0ae2c9031f41aa61a369daa4a57d3a7882d0a3470962025792090fbddd2d581f18e6aaf0960bae30d62efcf3d1a45d4f76a2b3791a5904e5123d71d1130e53303cfcf087e4c5fdf943f954f7dcaffcb7e7492ab7c7ae8d5a523bdb480a4da1267b920336df50a603d8430cb22c46fa82bfaeb650a867568065e2d79ba70a9006d40eeea89b54e7f928d118f5b855ab024826b28ef7342fb1393e805869aa7d3c4ca5bb71bc004e4f2f3f8d04617c4f30b915e4cd82447726b14d9733f0f2ee95cc0490f74ad30e2034c4b0d2ef0b4a91568b73d2b87b6b954e01a88b1fdd209485200b7cd36bea05035943a5469b9a07cbd8ffef7c2e14897e24d0f09f1a609342fe5b5b0f5d7035dc7cfd1f761bcacadde78fe5af4686a9feaebb463d97328fd740eb40c905a0eb990ed5ecd3c80f61cb86895ef8336ece93cf050fcf9e23e0205a05db3b52d5688f1df2744f126b85facd7bbc032e3977da6f4b0d56979efd842a716dcf6ca8fbd9b6c91ef433ae3c6eebe06fcd602c25078b739bfecd43f197ff07360523b6235a1b9786eb0a44ae059d9ff6908c618acffef1f54eb86981014b13d8e4a83a7e49bda2d32fce822c097dcd4742a45d4957c54789f8cb8966da8e21996822e459ec9c29b206515ba8e1a3573fdfd87f942be21dd5055926c5aaead6ffc784ca9516fe22cbb8da7bfce662f7cb42bccc4d7e8f7e63c419e6a1a6e7e46e2edb1e396eb7a460e99a3212b7e8e9407ada87175c2d29331cc288dd6b43fc083445c4794ff1e6dc0d39f411a20b562f66ce8b4d97da7b9ebed26e196c0a8a0dcec678841c62778a4a1501082e501d6b748ba34e8a97c6d967b12fa98ae59942a48dea9c2346a151497a997f287af88f3ac0a35a91ab5443234798acccbabf34555761e88df00a4b8a33dfd68775d551fa042920dc2b33cba085501e7b073c56245389048dbfa24c3e1e8b075cdfb5d6f52ac0de4dc480e2b886008c4e1775543cd626ea0388cd58369c390980932c7fb5e564c221564787ec0ae60e04f675993c5441378bde74bd9cae2aedc67dff8d00f3df1b8a3d96399375ed70e0f3df0a4fd123ed544fd657b9447bee685e61c887404917181e384d3095c97c0c5a75c21a5f0b97b8445d0b8ddd3d744d8967b49dd3861da7d306b71874caa374332fe06ba79cc22657480fd976ee49bfd5cef51bfa86a48bb0b03211540d60fd2c8c5076b7446234cfe5fd0314e3b635d2e1b4e2ade2c2042b03389064f824cbf84158b3030e17ed260f316bf677558add5be64b3a74e508e0eb236290b3381870a96036fa59e8a3318d41a1baecda89e747695ba231d7beec0415628a015bdc45e03474a4db2aea7800af2cea656cbc8122a36e2d2cb57aaa98bda1aaf12b40d54c3b32593b8db61048959ee7641718444c9f2a96e7831f76dcf849ad5c62773fb8becdf9fb5c86c0903afd9bd1b6dbec21ad0e0ea7b5d5458904178af9c1d18d9a76796f834839dece1cbf78f0f1b9c315f239f48f09b5c9ba2abc60d61320091e48f0d0457e951fa655ced1e74f2c0b221954a6f385fb814f652a6f7fd06366b63ab29d3dcb7f5c06ef0854bbdead0d95742f3ef9f7bbb5812e046c222d3a8bd384fcc352f50099062624e673c135222ba54fcb8e4fe57ab8dd96ddd7800249a11c349b9e9b4c7938dc2911c28441e9ee7baf4ef25db7884643e780969c5076e821c4789e683f35a4dff45739b52385b14ef0d841a1852ac1a7cb6c3fe97a0aeb1c8acf86bd7b42e3673473c6782078843354fa83f5138d13f2569cc87eb4ca3eeee657e93d10cf012fc4e3ac099f50c4cb32ed145aa9f21214f13fdda50b5971d3b33eca60212689f9778b551ddeb7a7ce24c4116ba00fc490e8eea5a2ed93196133d83b2baca458002992d22e8938d45f00222e8c5a7a7a63ba71d01053dfba91ffb44f607c815d725167245e46d9a00983fc2a74247f15dda1975330fd2013ee42e71c2424f9d0891b7f6b2c12df9820582f89b2081f2b22ec0331e573d4901fafc1f8e3da349c448c9d8af8633f54c7faaa0a1dc455e4b560acdb724e3c232c9c1872196cf93f786786b0fe18636bf96652e4d69e8e0f13f0aba996743602cae34522da0f645d2ccb8fc7660af29a31264fc7d9f03446af421112af5ba0f84663f6e8cb6513750c268d12caa9a1efe80a20494ef006d4c50788269f25f9009050397e2da95061127a6b20692892f9afac3ed528db9632056c5f709c571316fec6e82de2156a8120a1d8d3cbd19fec2fe4bd7c8dfa99ecea3eedc9efbb75406e7817e498797b2bbe2e965fe7b00cddb464179019aa54aecf4b0df4ccf9e40e52aff3ab406d7a1f2efd32e795d355d6b111d7a81d04903e9be8edf2c2d43f456fc89c4d9e389db1149e6266693ae41d8d029bf5859d54ff557e8dc0a94450fb78a47c24dfb512c60d3a141420b08dbfd37c59ec557673293b927befa0d52434f29ffecef3a8c3d1ac6746f8ce317fd7e8b39c1fe89a0c8e88e63bf357a665f9af177071b12dfa9c7b218ea4e1c91e76e769d7e80834061a71ee6a79837dc40072678752371c78d13207dc6ebb68348969de66901527b5d7986416497a5f7beaf22f7218cb407ee35677cd3440503bf78dd9a96027d8a25629b568e92749340bf374751204533576e8869e809d1cd04bf6a4aa89861a31c48fb04a48cb1215fcce906c00d96cec20ca2cd0be6ae7876cfab29a5732e808bd0319925ee4464d43c922ec3c5dd572d702456c4f488fc54330874a1db97b600c0b94e4b1a6ac4511c9cfc14fa4526a70029fcc108bb619a621b3ce02617f72d12cb6effe98218c2ed485f5d0416f82d63aa94c63dbeae0b529a8db205f31d2f03a2a8e30077a8389c9f25468959f6eac0e061375506f3f4a64f89e406af23a4e9bf81027d41f8fb0425ceec13d6373bcc55516d5761ef3b75a78ad7abe9357d37191f6b7cd28d85be6d100af64febf66bfb1990b7e652211469e5ac76c606fca1a590ff0bbe35011e996df0607ffc758eaa16e27762077c1bd98f41fd998c2d39b687242e79bcdde861008be8c7e1090842727fafed569dab9b78d2bb4aa0fd92cf65bad2c53c3aead01bf2203579b6b4b06a626cb5f5e3ed61e6a6b3980a79c29a8deaabc0b99d314974734bc01cc0f5e916a738aae18b7998415d6ea5c0e61eeb63bd15f40429a832e9b6aef34a27b9f827e49e99330cef3ac63dd2d728f5cbd93a844e2fba76fa58e68d54ba5b461d72720c51a413aee4d8087591482038440a8f5bb0968044a6f8e32ceb4278126f1a325333d9fb134ad5b91cb36507d00a3897844eeab4ac9536259f7312527837c0b373d9486110cab05903c6c2989454acd43cdddd5d06309687d0f71a865dd33cf0a58a4dcb9fc7970a1095e2ce8104769d2cd33b28351ff88a4bb0e4d3d37079c76ce260a4d87080b665d1ae303dbadb6ed82b8087fa07a87a7aaf93b69053395310cf30da0b144c00b480bbbcf35b25593687e04ed56894ba1a01a8faef93e441177d31532a1e16e43a9cb60746224b8fa22861ac3b736c32687872b551df9488c21c4b7d8128004fdd6a4a3fc96243799dbdc6c8d2ebb72f1c8c77107f88180e6fc90bdff81657c7c03475d306b2c53a1ff9490a407fbd2ee67638c13eb8d6dd24e5faacdca373af5af962b5ec1746f8d7ab31f0c1723eda92389b6ad5843d4b292b63a1b9b939279bd5af4c01822cfb49a05a556f7a94c5a340ea9c1386bee8da1c8c3444e7daefbe2aef6e9a7360c606531cb3558c3ee95413281955ce8bc759f815bd28e9ecc9356726eee2fb34a872f5701ad0b1110588920ff2553bca22909c15fcda42896a1af1774a7f0a542b7a5218d7f401d3c74518fbbec3420bebff89c38250f7893f39cc0de797aff6a3a2d073a0710c9e8341135cd4e2428cde0570f4b92980e3302eab8093331b906776da884c420e07a663527b8eb0ae2fb9abfedde466efa0e740e948dcb6590531131dacf7134fa625efc50f8953de034fec995b6e3bc621d287b31d4e073da5cee1cd0ed2cebde2a69552d9c995aeda62fdd072e108a52e752084f0fcaeae274390079669b79fc690f4059522dc0cf2a89bdc973a1ac956c94ea80eecea3000cdb95fd9016b015327ef4379e5688596890597494b9b101d82e3ac4b3f17af5c3ceb3404bac9abf2f014148125c624e6328c1a44f9eca87771ddfcff5406f1ffa2a8e56991c1ccfe1227b934b111efe1a6a920df81b37f4f73cc6b1e585ef81b5ad42f38dc8cba08ec6be0305a90f553359c19112e2f154f0b376bffb46dd991869f53910b3e3a7cfc963b0f553b5aa7990bdf5bc287a4770fdff9a64647dfcf9d27f17560e4d85ed76c4e849bb590a2e8206b6385501294ab9bef044a96832c47aa889a3e6cd76e6fa33925bd18d698498bcfeee28260679ceb9c1bd9a7468b177a1401771d4ffcbbd6d60432a8695e845ac4d8f66645e39f164b4d3c1b94918a61ff3cb721680319f96c6a24f48436f7fbe2de9ae2abeac6fc08ded71009bef17a9c464328e40da33c0e067cebf7b5fcb9cd8457c70cafab15744262939550f3bcc8b881ffa4c0b026c8187900530c378e574902779dc23f099964cae42eab19021ce82ff66701b93c64a6bfe124ff0b94a9b8ecccc12205ccfe2830b34fa9009961dd54845582a0f3b6d59640d06dbdf93b1353dad50ac2a258dd678ab4edbe5b6e09ce0e07c1d49cb32e693327729458a9f3f3f9c8fcc4b373036f578ffaa2a103bf3febdd64c7fd162769efd890c1f993ec1f328253f86d28b415e5c8ddff0f7a428002addd80c0e0cbafe24995bfd2af8f1bef3ca18286d736aff72ef32f2ecfd2e22f2e1eadf2ed5cde69f150d2dcb16807adec405e2f3f1af61d96ec137b157770e377758ca8f4a6ca9332fce5de7a366e42801a3b057b055cc7ab8fd02940eadc8ae4d61eacabe41555f2f1848a9a34f44ba3c2d2009a0538ba84db68a0e1d7a6ded1ce90acb663b40259b390920a5b7cf1f40f3a998abb8df5203ec5737b76fa41a4b74c68005901d2486a4c7d3c938dd1c601ee33e5d1d4a63ab1b977126029099e1ede9e9a5083a8d34738a7592536575034e2e7775933dc913a08328cc195d3241c4c94c20d022c703e7b92a21fb3914bee8e47801ce73844b6eec80e03d9ef8ca4aad7adf63c1a2b051fa79b4c150e0f69121ec92f52818323ea08ab64860925ab5956d9bb3c6265666ab1d1669b9bbf4bd0be3a7947c91e0e8ecef833a73252215fdc3bc776eace064526e3c3c5b23cdc054503cf7b6e401a2e8c5c038c30fe32f9db07b66f9e39b332e0c305f56374b1a04f737b55982e1009002b8fcee52dd40f8944ebee074d1359e0b9147130501049ad1de9bbe1ed2ac57d1fc2a63c729a656af9d6a644dfed842179c8f7f9d3a0b1e15c6d2e4d745755e37e2a03b75f10aed28a0ad134b63d38b42cc92158580fa55cb1a5fd060810494ea549e4025852a8c731676cae3a3dd10e518622119c56f138f27a08e23ca451553b9bb53fbec5b301bf16102a4490cad5f5458d2c375c4b7e0592ce22c06c816c3a476924391c645ece3f90ca49f4084507d6c401ad8993e474b87ecb3df12b175d07854cfb7b0fcd9b2e735e95c59d9d4cb912c05f05b395f4c906a3b14908b4fa6f743359d790ce7590cb42e964f8ebf2e9c4934eb60e350aef2a4d815fbbf9c477dcd01e3147e4b78da1d5df2fafad6bbb483bb42fba4137369b48bd5ba8be454be6d6079c168f2373112b2abd460078fd7ac712f96fe652e4c8e01643c36e283ea8a4311b158fca7f12236184071c554e09daa77ca8708c42ac132c20695d9631490a040e8ad57c2fe45ae416c46fcfdcd7b422395c6d42a4b68aeb8107b250a652e68a4cbc065f680a4e1a221244c68bdc8d6c4bfdb1f10f4a82ce90c2fad5fdc55e5a8b69775c5f23c0ebf13c5ad96882bdf9322d7e623c5aee38f98a30e70478fcfa64b1d5e043d59d1323d8bba69ae8e262f832172de93fd96bf6ef8e7bf1529810e0737334ca470777c6fa35b994d5ca907b97749b813fd21ae4eed0028887660834cfbe2a4256a5a57a3512c9ad15f033cac76ecd922286f1ae7b003859073320b9278ebb986050443ffc20e9b50d907becbe3a88ae50f85125e7b5082538b9cd0a9b131dc51de08468b1bacc69cca0e3b81f5f353246ed5d1ba7dd8b7b3323338aba93b246f89e0f88dc26f62e1f342832f33c8ca05d4b74d42877e9b73e993231ed48bb25b2a7dc3d3bba1e1b96364cf426add224fb6746c6a2c99cea54fea473ae598463473f60cc6469d9c27e05c83ac91700d817d46b68132de55192f7273cc31154c2f862718a45d783e2e5c679c0aed7a3a9ba1bbcba528f05410919d7bc072b0745219059cd94b7e46eb5eee50107896118b081af7d9a1750b05c4d06a5fd3e793d89c9359446dcb0f9737caf7424bd7ccddd87e4e3ef575fdb699bf1c19e458a7dc69d12468c6d01764203a3ba264c9ac0d303697aa717b95910075e2d07725cbc678729242f999d5b4a3a58328adff0e777824adb9a06bb2588d98d5a272c7159a672835aa05ad5157e23291e7515cdcaa64e13debfe74da82a539c9fba1f3dffb4a7ad5f22d768cd517541365faf0680365497f9513b3837832038c0dcde62bf2d884158d8b8c472641ed220e4211031cc0c80be5b4c4afb4df6c1ae55c2c62ad6636041c02a41b421d73b6c5c9e6dbd1c6fa57fac6ada831f6f378ad3742663f159bf5c72a94e65e9d877a3d6df1823c31deea8f62d87a2e3a74c913e48498d178edd9cff6fdc50783cb4bf27a6f12724604433e172b0be349b2a6e73b9702f8dfb2ae7d5754642f78d84e711cf1814721d89dd17f311b05311146234e439e468ad84f6656bb390c2b3ef24202d6e2703dde3912b9eb8e8334c8a58a33b25d4241fd24ddf4060ba3a9df0a7ee3993df76acb04bb7c543d197de0378bb8a4dbe066fb30dcd9b54746c7fe4dfaa6d180e7e2e89158521b50b6c804cae9976fcac104f9120a0adfdfdacc34b070344c0f9860759b653549679a47d177bf9988fa6717b2392084bcbec51f2a3128b6a1ce853c16f34f02a6328e7316e6828bd7f07f3717366725780e4091865c77ad773bf3f4116bb25a3c4eaf5ff8c96ac87d09309f3a342a7e710f6e06f297994eaffe634803401e813d9b05dd6f3cd8c2115431841c426957dde0ab77090ae5cd7034ec1710a73017993d6e95010109892debf1fb6e583811c8cee453a23aa39be065b5bc01499a5f6c582bb200bfbbd620a3cea42cd903d6ecf3069c869d1a7bed5ed43604b51d95f7027d50ae4a0737d237439b1732073fdede52b6c3f88209b679d7309c39670a7c046aced692a09406a9dfb0ccf982b33936c1fa75441d05250122a83c1cc69657632685a3ad537915cc1503afc4d7207139c97b66f466142fb017629b62ef1616d98b950671d46d8c15732f76691cc1d5a4809434bb92189462fde38ba18bd4c3a6eb7044c7093b08601ac52b59264c860d7b238334b8d30cfd00e720c9fba51669f5a5192ccc0abd682847e7dc88eb99e13db679c0e12256341bbfb066dd2b56d983e636ef030acc9c83370989b4ec5f1d08d4018f742ccf4a28804847194261f33b823aefadb0e8e43bb07a9cf3977b1ad31b61ae6882019b11b606a1891fb6ee54ff8bb4f8938251a2beb845c4c2924bdf390dc05e3d4d668e23c05aee80c6c28f6ce98b84ccea6afabca115b0c1933e952815464699c17dbdf3d161f190d0b7044920b5cb81a7a211c0d505c91c1db3c9bfd25843a1b6c374a9af7d59dea9c72514ff61a345423233c44ca0c9e4fd5059e5883157c19ffc502a0f02f97b9f48208e416ffd576c5f3a5900e122374d2fe6a24a825587d5d8619bbe0e0ba8d10ae638ca679614fbda8a78c693989dd3bb54b13b652c5f8501c5e5c858c02e57999d8f19dc7587f8c2a851dcd98c6709af936b8c3eb7bbd0f61800a23f86964d609481c38ae577b1e041c9147ba174b7044f3c0fc497ca91a45a5ecaf3fc2b3748aaf5424c52e66d7d480efc5c5e45418ee35166086716a678422d7cad7c7582c4e3254a9704fff96ad86ca151fe7e7a3422a87189387c480aa89658360cdf8b7eeb3a8e08c278b1bdd9aaf403acc3daf88d33fd9da9bd15c6280dc1bb4b7582e863ad6f435e12c898c4d609177cda29012663d60a8cbbb42052ee9b513bd0c85be5c47ada0502c913521f076b6ae73b21899dabfac6d13c27a34762d900c65235c728fecf8345c5674b10b4e1e5a434a3dc281ca39a0007e690ce617ba013f6a7cde307b207952d53cb8884b565ad2aa4ee6516fdbe3669bd651875fda73b82eeac3fd43f55a52e867c7bde9d6b66601c1068f392e0a33077daf1e1b1175d960992607ee0ec5d3306000a320bb3979fae3374efc20fc9dd0db17fa48a34eeb5709ac1754482dbe12b83e69f9e4489316680c9933ac6ed69410c31bf80b793ae8645f45b83bf64dfd9b127fc0bcd77ff6f8acfa0637411f74568563717e493d0894807061fd56ae60e8455fe1d55eae23546023f90d702477c00cc3f551e4c6c3f6762d5097d8203cc0fc2e261887a34e350ab219eca71562faa09afa8a9e129d655671b367683311c6af61e7d38aba5dad82fc7406a842fc45a739e48f7a97033501df4bfa4edf535d91f7bca4a8d8e6867c25e020c27216a1a8fc1e03dce7afbd4eeb45dbd20328053e8239e113ebccf6ae306f5a4c5c952db91010831c1b63f0d8124c87ce75a982343d4a3c81ec8c35e8b28893bdb3fa88a64adba5fa59ae28916c7a45d68279f16baa2ace60c8f8ee86ed6f24b79dfe1ef8005bf6bf1faa1a896679305df30041c6ba66b9763fb461491fafa84fa013e4071c25c7963054ca5dcafa8c6c0b25996da0c2d93c6e9583e54875a0d8e08d780f54113dac49ce4c3ccec8667f43baa9a5ce2dbe967b7222f68ee31fd949a4b6cfab2c4c1914e6a13c11cae9d691341a2dcd7a3edcc4a0d9dde85e8bd735f6bb26dd4cf1f55a1da8690070548fec78381419190204dbc2b86f2cc563f32ba06e21579d0fd92ff6cb095020dcb15715c79a6ff6fec8e65a5bcadb3275ca062cfcdb444a7e1841867b59409ef1778cb6cabcfd1214c49c712a7482aab938b68a1d48715f0e97da94e0b88e780bb87f4176f673712ccf0fe39f702bb202b09b24d5b6df182348e37943bb5cdf82e369a3f16997bf6db2c5dc3889d40594a47215bba1c12a394efee92dadf41ee700ffd0d254620e89af63f50a7872a3a0a65f82a93b7ac65fcb2883281c84938a36a9e0a4a55528121b088b53cd368e00c8b670fdc8813df04dafb91ef8d917d79d928bc1fd765e31e76635fc90acd05a3c152b03d354a67406397b2f26b542434bd9a547c4cc9bbd436a40f1a531eb9726cc0344db177f76710db0ce59e69575220bed89b94bc64be63aecab4d60f061a49ecbe0c0d782192f48d377f42137e00ed7327f0bfe8a23666c1e5733092768c8aa9be29fd94e08cbd3c7ed4b7f0114d58333dc6ddd9ebf2c5b8c024781d4b9baf1d7be398620c415c2b40682f3673fcbbe2bb6f707258dbf848d31c69fd29bc0640dd5ba954c5c8a631d09c3291f75324011eb719e324dd7d6f9fd658de76b77c5134c86e34d99356fec675ff38ff886f6a6859b050e18ff49737bf60deeddd87a08c28f930c7f69e20a27ce3115c2add764abd61cffe433def00714fe9f04cb9c608fd4942ef091580ac85f33ae584204d23da91f33ccd1bb2140bd983e61ec07978fb5bec0178766337b3344bf7d5f84dc6c75b5e49576159db36d06fce2ab930afc17cd294dd7605dde60763b12534127f9d02351b40f3a344f31a50b1f7bebfb959914c131768ec77e63d8c162c6764308d6ebb50019b1ccbd478622f469bf0a496b3613445e369da8ad02812f7cfad689b268ce321fb66f8a8fabc6dba345c9751bbdef8a96b348f9ca4499f61be1d2193aec291194cc5d6d46baada90b8b4e09d5fd7980cd47a84755e9d9a4d9bf0f0781249c2fa27c2ee3f182384f490928e7250aa96a184f54382c8802f70aea0443927178b453eb3b154df963f1821d592b8b5710ebe9d8f9850302700567b123fdbc86302d604319a18492d80c26da3a3e4af59e02e947237bf0884d5ed30bd57f406efe447469d7d1d7a8e787540eadf34047f4cacac961f55caf355eab46b107356d7a7ea55f815ff6befe0f217fbec210f3afd4e86e55fd92be9baedcc8678cc953041372c880e8d68d009d61641476ab48ee7c1511d39b6bdb5c86caa5b763676892aa793d3dfb1017a649f874b0c47d84d591af609e62d7eb3043a1eb8a4048d5dea118d3e85374d99c26e52b1f8c4963e48c4fa62379b46b56de5704a2cb38dd384e32a1b5366a62e192811591bcda4072d92dc104c54cdecb4e859e1404b818f08e0724cbc818d0f46669c3d841458ded76df896f191ae8ce7f4b05ad69d1b9f95d0ce98730d024f201e2a576ae76da01382d7001256671875bb3d7c21466dbb1c58d156c2534c9c28d826002614010a3b752c75a07e94e9fa1871e55ef297f368604c5eea6163ae5410bf85e5926c7af5b7b519ba951e0a4583def562436d891309524d146ad1fbd542f7642074f0c97f68699e111e02ca1ee6774a20676f8c2ca87809956a937954996ece7c154404b30c2ce1158de9bdc681c4a034c2f22337f061ad122965ea6b44fe2f4b784980cd600e949f9e4fa05eb05cc1a392f42abd013163a1882bcb1ad04f93c9bec3142b4063e499ea99e7efd1975f21da2bf77c362edea8cc42f1ce8f3f1a92ee5b4b4ed448b31c61e0e51115bb516c9439606fc7d08dea838b6b798a0d40112d57982bec79e78f0f9ca9836193d8ec9d36a09cca300565c34ba6b7181f00bba1513d787bd3a793b3042277398c80c5f2aa7b56f7b1e56636fe96b14891e8b8f64dc62041b4e1db1dbad82e448e56db98026a6263353d569c0d2757601892cf425117077cafc675725921c3c3410a104d85ae88ecb5976b68c369d9e97e8e5e137a393ffdaf51a5014266d3e807a9a8c6e6c3ff092b4b3da4bfae29c6b87e7d4be2287e6c99fbf2ca257566d3ffbc7deae956fc36e28fea5f5f966592da50d8b00ed10efbb0468d44a3515f6dfe8e418d9e8dbf1e698ecd857f52cfa3e6d2941c47fb6aa59f801530a5f9834013f508caa5990c23c68e455b3fb8acf59192b125b91791a7fb0749e8758e9fa9f5f869f647f9b5e4c347f2af2cf96970351d4dae993c10405a81aacd954e95d68e5a2e18b0a24a5bd99394ce79021994c6429492b3e953ceef6aa6763f6c95aadf8ac7a5c449e9994fa4c775785f635f45379cab0ae7d7b68b5173ac8fc72f48b8c6759dd0f51b484c6a24ca55e892a74738a90165d9cbc08227a9822ae361964186ec8b050f7ecff313ea4a75d2bc7777f22d3c621a5b29853e585c3d7c1ec2b21a5ef5c0dd06f5b04800531e6390ee5c7e486b413fa85877ce1b690a8bbd7c2bd66ffb59e25881a8e7518cec3243a26434c59fddb339269b0eba03285218e2ca711e8c41f712c76924ff6e78b0875546b3c467f30e71b69c91dfdf257f1b736bba1c83029446de1b11640b969345064f56f1523a18bee5ccbfe90b6e7c4fbe8bffc05dff66bb38fe56f76fd8e1577ea81725f0228c176e877a11e1f57078432fca49b12b077adf56f9ab9e2951415fc828a3cc888b8ac3a02da74351be249ab26f84637ff0b545d3ac9611f34106e9a24b7be5ea7a496eb2543955ce77aa0165e1cbc4ac860fede7504952fd724fd217b423487b8c5644399cd9cccecf641cbd552e9f570d817023b9f63a469d70424ba6d5f695446acb82e20a739b8ba529f6d20e66d44def81b1f965f824925ab2dc2da6ea2741e9632d0c0e995e0556f69bc338e72569a07bc9b515ab48d0f086187511f937cd584a522f0f9bad2e0115b67979a12051fcfaf8645b27a059042e9d781b2b5bf9d470a68bccaaf368c5c71e5e986b1acc5e44029203eaf8183bd7fe8a4e73409e800c8659bdff2a36fbdb7f0a3a0d418414ec7196c8e18953ed6a854cb62789129e1a1e31afdd8d2cebdc7ebf386056bf53f83918b87c44143f92899110284506b31599f572a9d45cf3da0d81eab104551b4c4eadb36925ce70ceff315e2b4ee8043312ddfce4501f707af959dc8c617f94cb4c98b5ac724a20789e9926fb5ab2fa412a498f8d9840225230730d559b20e30aad4f4c0d0ffa3f8cb535a175ae2e232486aee31e969a08e154ce4f42af869f62fd12c0aa5fe61a28860f6ba00074a6741de3ea7c514dade638cd05ac0e3faadb00002968023a71f333bf8f5f512cb1024fcfa4ed73048fc6520a7df8b0f211cd4c445eb4fc85638a1923fe8a17b8eef2bc42dbb7a0458a2a7da17348d5eb6e9dd828d6913f066c5318c3d01839db3713826e8c94fb722704a8fb7d418b0267e0542aefe7c7715d968dc3968232f2cb99cb6fcfa264e6566017785e2443cbb0339acfcfc3066dd8646868d79c0f41ab6e7e16295b76723d64b15daffc0656d12d69bd6aea5fdc1ee427ac6ac32a7696890a06db405dd0a96b0dec0ec993c7d3277e5e17f8f3c0c287ab65fcb220226fb52300c41e439326fb57d788e8c321f2ac1896cb2abc0cdf74d2a028183f2f0a35e5e3d4fd6f6b4211cf7d32661f8b31dcafe5ee86c96688c5387e835e0658197f6a437adc4eeb76ae7d22e1eee14220309b581bf213617f00b774ff176f09add9d4cf8b56253760aee7f4f6030859a65b3f96bcc3e87899f69fcb3681c4f9ee7e11e09aaea40102788b239a5b88a521371d2b42f92ebe458792959690167112fb9a8b804054c16f070c9e9433e2e4be3e7bc05468a7888ec26da356eb012e5e5e7f33541c080bc9604fc97ab663ef8d2d80eb477fdce200bb38902556c312c3c8a0e18567f799c476c180b4524469d2f2f8ebdbf59b2e14359e378176058793a621245aa18dddb96db090397e3657e16130c241b6d270b9545606e284043f0a08a21d5e99098d3327c31075da38ed243e2c49604dc9843b35b84c1bf8309f25e28241bd0f82c698f206da19b481d898d2514e2abf32c648337e485161d0232b0cf0212ce6d5791343a192d7013d58380441610118bd354e614676beef269509a6adc5392d967e83a249d6e2e5a4b6d60938a1f190e64dd453cc4b287c89ccc02738651ae3fcd4b366cd54ab066528825c0c1c34792153cf5f5e3d165d13444591e65fb39df900315c1f7fdc329b2c300248d98a37ba40dde6437a8079914a3d372def7e92d6a7d46fd11182369c67a4b065c57a0f93b91d42d065f54d937463d4d77aa0847446e230129d047f958500c7bfe3c319c3fd962da08d043cda581087ba483f982e777f9cd2ae944d20acb1fd35e89de756b644dcc64d01cab8a7aca35b4c2898f5780f5751b413fa706f848b5242944c4f466796d99e44adf85081bdf79e31a65fc868d84bce206213411ef96d29289fd10c57859097c2abd6e4242072ad49473fe1daa7be90b0e59cb28d0bde199c6c1c4a72bc2f01df3e531ea35a6959999dc9da064bdd21e87ceb0989a052ddeee873566f17c32ac4c95fce000fa7c576f073132ec97b50f3fe6068c7feb7b8fcd9767b91005b49c13ffd728bb8667bc0659dec0f07fa8b784e5a0917e5f35c7a1de00a0d565e2d8b4f379b24b7ea902286a121f58e9462064d2764f19ff63b04ae72172acf8907043335f67e8ee0214ad2b33003d71958b194e05235d0b017ca8d4abcae198e553fa7192c0faa6a5d71c032cdf55a9534d7e35f2887a3115e48285fa5104b1e5c2b2ef41f71d708e7c676777b0edd0174fe8859c214429d04620db47e28dcdde04ab0073f169b6eb852762f00a8a0d86cf6eb42468a1ed0acb09b6e454d3c8b1dba12dfdb5376e58fd205d93f726f9a0dd0e175e333c4fdcbb27943198e83f336e5778a79777cb920100aeef844a649350749cb3d7d6d8ad9833dd5eff3fd662a905c0d37aa3cf2c5459c33c465b0497779b7596ee6dfdba6b1d18375880024f06347d540a7ccfc5e9392cd68f5fafb9d92d6268270a53f2cd69918246d06c0f8061a5a173812503e03339fb5c41528abf378633f9cf6cb651f6a7056d4e2e025394ba63a7fa9924886366a552dd4656f38ae806820246d92f3a5e5b72c3199cde0792daa86a6460738aaf48767889104652ca4e4785da519cd482476db88b7a89ee03d57cc484d91e39c97289946a5103446cec44102bedcda945001fa151b97d29ced55de58731e35ceeeddae57705372d01f6e99c3f30682a5f58a70874e1c1d4de27ac3bf09f6e8cda23aabc10ec94aef5a926f8b15cb0591efc290a720f3ad025ab89d7f7fa07cc032374ac98d3c7013dcf63d427889ec143fa93c90ea92e7243c579b95ddcaa153e838befe9e9b0a26f674312f54da3b37862bb7f76a9268a5a0dd0bbd6ab77d2ba55e2095a5ed551649278ebf5b2863d1e2e83379c90d73978611a006174c627fc45bf1504d81af59e88aa7cdb9b1d1fe492762ed59a0ec5e9d817fe9e2526bb89c2ca430e2d259dbfb6fdcef7a64bb2d4b041f8af42ca5de88e10b8903b72b5b3d08799838d756bc2d721310fb6ad143b87a0494152e8b906d8e70251b991041d568cea5009b88a25a6c0f10fe94ec8c3cde04628f30a5478a0abd44763863b9473fb2789ebc9dd9f10dfbb4a2781c079236016eb2eddb7af4fe93264f9d1bd16733e51960737d323054edabe5a5012c304a48688de1093d829f3420d49a14a715dcb71f917d138b83fb4625c1b663ab54887a41959fac9695adcdbaca3db3af974c1fc36fa4049f8c4478187a20d10faa5511b64ff4591c6ccc945c29d8a49a5b2a2c94abd836ab08c984b55ffcd022380ae9ae525eae51c7a2b7719b56aacdcd1aa0405c8fa343f7e38cbf46c0a9c7e29f8d5dacbb90ba62faceddddc93824bd6b1aeed5f07a3d8026a3510c2836ec126829a53e9bf994fa933cc1d5c333c8e262feeaaab6def8b1514f2a90181cf431f9e212cda44847012c4aea388eaa02bd744263ffd10a1906f9e04773b3ad414e63ebff9912fbd0be1e61300860c8d622906fe35d973d0814b3890754cd50a34ca8775a038b737091bbf441cb987da247f3d72f4b7f2b89061442dd1ae8a1a0eed8d04c357e4450b376e475c3d0e07e13050eaaad808535d379633ce5073c8196c35b097099f461a1219e8f5a3a99392d097c930c5dbeb69f00d907d474d44bfc463f2fe6f9c13422f9d00074a58b32382ccb711589d267200e330db0c74e09cac3e148310b49995a6ae04c979d5a59fdeba6c804f32327d78a2897c53aa477571590c8951a5d2a146b0450faa0a9757268494eb5db753d8071ccbbc94e80b3ab19b231be138e534b122d650cccdc795bd439a8a264b479b354cb826d20b6a88f15ef4f91f4bb9838f38c6645ab9220775b36675f44c6e35d5cd9a93bf654905a2e7d75a2fa61b35d66f5ac67cafcf8a7a2c6ad1f05183d27fa5f6a57854d36f6eda2acd7731eeccdee359d0fe45abaaa7b6ea4edb3e9fe597913f6247ef33799d5268734b0a937ce280bb62d41dc1ccc0a81a4efeb4861950fb72b749e177a6dd50b1101303a60b8a9367e2ee1ad39c4020459f1c04ee870d9c6e8fd7fc73e4f4bf20dd6f5b11fa143ee7fbe9016b7743d15f9450bd4ab711f4eb76c1785d18ddef1db26ff3603022fded278a6e224682894236c2a97a754f52b22969c51a668828f8d15edb2d698a14a2a12cf807dae16d3f8fbd87202fbf5c98fb972d516b2be2209a26292aecbd52b0dda5543330f1e0ba4ab913e2a7767da38b46192cca4a2e4a52728d760609ab89f3552e11bf894e7be3708acd360e0773a3cddadbbbf0a08097b50a5abe562160bd0b9a19a2f406538b72478ae1b1ca289e6a3882b2b1d617cdf2ae0d9cb72680333e0ce1e7d028732ec830ec3ef462908efbb68e9d21c775744984ef7d36e9e992475eba62db805f10b568458032c86470538b882bf4ffe907001ce6383d122d74d161c00f18900d5f1627cfb629217b5aaa5e24a659f7b2d8484ef1b39354d025dc77698ef6cc02dde2b493a5cb9a769b3e94705aab88fcce2596f011c8c73271ba2eedcbc4aa04f5b32422b7d4a0affdc9c539f67afe0f065178a55fdd2498d078f28bdfc577838a4a4ae936e2f17c6871c60dd35cb5ffdf0a24c33a55cc4576018bfdb3459334b8859f0b9e985e793b6d16ec1b6e3164a935b4c2f15dcf44943a0530d160352ebe363d244b887df5218898913dcaf9729fbf511f4821c3224d2ff76a0c275a0535d2b73d290c7a02dc6c1b40696bee7ae5ee73bc95c85f89509a980ce0e13d24177b507942858d4447b9034e44f51660a3a7b8fdc54ff3437170829bae1c502ea87566ac0ee0f318755997b76db24a85a5a70260f0e0248dee21f23523ac40821ccdae8ab97a15100f787a3627cec68277b70f442106484dc82b2d52d09c6941a1a7a5f130e6951b5f9d6f3799adbb646efa70064cfd3b58fc60febfab5cab72fcf1f7897984f0bf6fc69cc0064dce343cbe4d8a36239eb8a841ca10af74ccf73669462373fff67bda20df2550c801ca86691928a47c30c9822bacdd8af2cdac81f64a174b5d7c049ceb87d968284189071d824214760f861d11677292a48c0de03419e3ad5dab76133995d7bae83b189e99ac389bc50ca39e79f6a1d59328f52c52fd1551df2f6ae968d2bfa7cda2f5921c98dde6ab974702922544b88c78f8971a4a89070779c90e4481afaa98296e5b60efa459040e1a5d1e9d91b0e44c7de98962139d18003fcc368f2b5e82c65f77f3be18eac202f982e7c86444f1c821f3a404dd2b15a2e7b7231867c88ceb4bb2b936b1c3bdbd8966bb9e124ccc7c7a5c81676577eb43036d9ea4c133170edb834181f0ccec859d756bd4fd85d61f7480cd9e662c440a19174184248bb59fe726420355fabb5d3dac952f10aada75bea6f83b90df04bedd9ce4e140ec6f86d496402313d050c35ed7ad83b87d75468efc5d7d1a984fc59b9586e51e96024290dc04a8f85a1f5ace44e39203572c3ce5127df308c23294049a08cf8232a2bf4fa146797d37355506a951428ebd631b9b15793f80068c2e9d6d9d23704bbf24cd7084edf50474f6524eb9909c1716751091c52a8800da6fc841307291530ab026bb82bcfc83b8c33949e49e79268372c9fe571d11e172a48a344c43d200527a731005d08b5ce742977cf0ae20fb66486b47f9090c2f9750fc4167b12df775db9951d7de0dc31bf68656a5b9403fa2833ea56a67c839699d0bc2ada102badf38bd84ede51a7a14c2c766ea5b8fa681936a92078ed9641e020857c1cc97491bb955c899214f85024dc16b2518f50943c211a7687b9966b938a0d4e679aa17b4d80b1c29b93959b59c4177f6e715229b86b8b0ce7330f2e771488e78fe404af29c31cf0c3ae5d672648d3cede34379b4b39c57b495cddb3dd119c6fcb3e8e688966ae759785f33239f2c844c19c7ada9996179a4355b16c53c3095bbc5081da74845a5051c5276da358018a96ff1596af36c782ee484de83c008689ccd97c7175fe73fcb97358500fe960e22e05efd56f9cabaef06a436dbe49d45605adbdb5c2feaf30f75f1f27246870a121b48a6586caaf4723b5e74e9a8a6cb8b9d7515ac25acf3001b0b6ac367f281912f7e6c3b8efa33a40c5a8a6724775386a1f0ab53cb07324efdffc2eeb110b8667eb29730a88e61fa714892c5498239e7c86e991bd962e3a86023db54ca6278fa6dcc28328833a3ce740a8e20ea1a2c15cd55a00344d75f8a13317f2f2d47da32bcf3dbfc4398646c3dabba14ff9faacd7fe64fa49b27b6755911334f41ff93d91817c57af559d1fb6ce0272f181e7a86d0b92f06fef4c42d9c1fcfd8091d05e3412b77dba713fe76443a7dce0c1cee6579622030a36b238635e4e661f684b91337773f8e4c24fb5320e9c0d36de3b560c709e4624800e592a097027253a8f4c37c20fabd8e9393495bbfa809edb0ba696e967a7fe47efcd332910b40fa64fbaa50a9c6d0d5bdc6f157d5211efe1b530646629cea06df440740aa5c22226818b9102e55f9eb4d00b10c63188fa7459158057c22d540f80d99e3190f8e11bd39dbcaad05f36959c25fe9c60713a7790464b76bef961297b318edc68e46467016773b514854575d227c09063504c190fa031a22cf9c9d52bdae51a5699e52ea4fc91d5fcdf749b9c365ca55440f79aa35ea054e68482aedfaf08bbb7ddbec19719a0fd16011bc40ede3a3ce29f965b9adb30f4e67f82509dad74711585940cd4c7b8243438842198be81216de6ca9b9800df885cff25dc2f29a539ad1eeebd350727cda51534784eebcdf8d9c109b76ff2c8dae4ba4a71ab0a9a2769be0918d19158cf7ac92c1a3ce257fdfa3be444be58e41f310351b96447430393c2607c7561555608028d3d301bc3e2aecc097a89c55a5c6435aec970dece6d0fbb4d00474a6193d909caecaf017ae742a39a019c056d953bab80a3a0fcf8b7a8cef67b93f03b670fc2d6567583cf7f9a8e1a48a7973a4163483357057d5683ba747d4458b3aeb41bfe5b03bed11c97a6780f8c72df35231869fed593335902741731c967b6f89307fbb2ac59a2301f7b84a9ad7a8227aa48c698f97e4bcefd7f399aa330d1394c4c1687113593a54d5c34a359ec54cc05079aff49dcde112db5f1d303b04d495f7cdb410e6110c72b9430ab8a993d6c14beb7a23d396066022d3cf9aa1b4e4bd5c1d831c36c6b7c41a43cc1652c290417a50e8e4c83f7f9961717f329233049fdd5104027106100c52b1299079a838b0ce42340742c31a71a23924cd6f5806a23c71cf6f09b0d0e9cc99f59fc35db6100813aa8d909ff9ce3b1d3416086838dc4e3872523529c0119b459bcc69baa4dcb78e62cde7bb195716930eb3a7cad57db8223f52a0c84aab22202869e5b174777722cfc5f7b9b6348c7387def69869157405db6b6157b307dd0718f9bcba3e76bd536ce8c2488cd4b0eed4ba573d09f5d9128c742cec4a4cb60925788f40fd12aa91474de5385eb3a3c1a35ceea0ac8ad6ae8189228feeb2f573b9f5c9aafd0bb7faf31bc3d50deae7e424388ed299c35f7fb0600ad047a129939b1d50b23bf6912f1fd0f514b66a2e90a270f4ff960c5fc21d79b9c149e5b05b93762b729b02d2953320fb807014bcf949465d23454dd67231eecb06f4b2d0465252ca0f2129df7f8cd78109447e1564672415948d0b718cf433a0316d75eea2575b8d9cda0b055e39023625d43e13b5303b1a2087aefe5cbc9019a6a5334966c02fe0776dcac86b8138c8bed1ddcedf82b4da4e74ab90deee3dab7a0628950faa5f222d7ead56dfc9b8d001caca3946d335cd8a2933d25164f2aa29a7191bb216c557525dd397a283e3fa4230c703a234d9864e32051b6689a6d439a5a35a205b7e015257487dc0697656784530de5f93f71159cef5c7c5c1df7aa91ed34dc52d36122a289d8f57def13e5e8347cca17df579d3f6b3222346b6627a922a66deca60c8bc146c17bb240e8c243761e09a910400381d6791758b776ba8aee93975cbf55a92f5f8c865d1b8690bb05cb134bf345876774e02af5e5c474f05618455f7fd770542ea7fe44e8e5e6eba28de38f93ac98a8b63c1370c11c990bfe86bc4a1fefce086248eb9841dffbfe370ada3829617f00907d661f3ca7175358bb88afd775402ee4517a3779fa91cc16da363a4864e9ca7dffb0f9525bee6f4ecd671c05af74394a1d63d5b80920f64c3818206c5844ef4694f6a8119946a64aa3a3e127e077eed4ef1dc7a51c243f3f17939c26cb944c1bc972e482b914954c191ffb6be842d86e828e1ee547e4ddedc2e8a9d172e8c92c79b6fd449b93c55971521024461c93533216e7ed01b69ab649dbfa54d2afe2111ab7fa56e3a706ebdd378b11fd204e997bff597048e8491d6d1d19ac380a1244e3e0ba049d1eeefb1c1dd574633f6e7dcf86d6153e50cec5da852f9ba744c5105246c6d331aade59b7e2367c35b04e928d03de62f6d751ce663fb17703324aa248820ad6743ebe3a76e10fd2567a91b6bcfa9c40594119651e9d56c023bc6971ab466e88fed6cf3227ce93cb929f6ccbad00e05edb186f42673e0e2bd632de2ec593e679d35df7504a1114f0bb3c8419e7b73441ca1588813eb91b57e7285bed72829aa8c2ff83783f7038ecd3d100bd8657da7c89fd0663f60357a72e5876a824a17d9154fae2fc9674299c7f6d0d21072551a206886630e3aab84a069663a13b32fb9eb00d129a0f6a73efed91c1fd6d27f4daf1666c74a8b3a620b9d0652f4ba4bc0025eb31b7c555634b2a3f2374cbdc089ffd6e8b70f636cf29b11cd39d44adab7fbf9e8cb7c97266e0e9bc55b3ee27cbc20127194cb4d3d1139a623323b65a0da2285d6d811c4446f3f479641af3f5ddf79add76eaeed9663bb7d81312e3d8c03d4d069c58fc320c61da625cbb8b10c5e49a7b41cba8c54013bc807b7450a855ed226a630d30ae8928becd2fc64ce5202544c59373517b7af5a9b90977baf5a2ffbf2d2551f8f95424b9872fa2b1bea0ef3353fcd495fe57f23936e5c7b41c11cc37de6dc800bcae9a7f573bfb4e1391fc6c957763195250104393c3429d150bf23cfa53776745dd1169989703059b20d07bc1d66fdcfd8c475682331d2d261c85e3d0ff48e73b61f90b10d1528d6148ae2bb3e8dfa2a6a7688659421ca3b5fca0b6317859c3fd0d5b0d04421efc464fbcbe8c3ef6d61b55aec57a5fd5266ffa0347ac328ceb7702a3005a592a668f3cfab053c12ba4f918dc785f0418fe0eafe7cd1378c2ef3e21e3a0eb499b5725c495cf541f37b76adcebe78cb9cd6eebe9377e812a61e24fff37fb28de66c442bc31cd10913c53c19a23843ad1addfbf2b2301c0f8178f45215fee0f48c6339366d95e4b65a58b05f4b46361d6245f3b08ab682161638d08b750422093b31056afbca351d854a8ea97d35a759766db40162c39ea133f1aee31f6126958b2fc650b46b8ab7756999447f6598b6628268fd56bc2e93ab8681e8bb9ee218672db0a2ba49798713849b694a5fb5fd5088a9a82bf486e7eec8eac5402158de0d43c9096f1b4db40d8a1df8df0b853f19f32748b2ab8361e10800e60d13001887bc5002a6eb45f9199718fb55d1e5ad88672ea0c4c3c23a6d84590e59bed474f08246ef113f5201e237e20520087973916046b9fc623e823bbbbeaa17f966eb68d494891173cabe925958fe52268999c5b21a8f934326cc9ba3a4560183f86bff3e057fc9a42141a2a25a7a2b2275158f0e9ad2ad8fa1b3f687826483785b33c69ce1e90eda81f650119561be7a5b577a68671802342edd1671b636ca3bc38aa96c33ef2721f12954f02f74229665dca57a17d4ec7509a9f83713ad45bed98185cdaaecf8335da074359dfcb9f17c9b13a05b67872974ea4c6cf7cae1213f942bf8eec88dbf0fbee008f428064d24fa0763488a365ca425bcd7e3100212f63e4b9966dedeabc7b2923d76316ccfab38c606fc9242c55c139d145f0dc28c9b7eb71f3ffbbd8fe57f32c7c577958ec1d3500734fa4595a35fd4f731aa85c825ac10d6980958be378081777e517fc191a9034ad9d4fdcad85a71ae53382f743e580ba3493f7af01951edac4974d06a4e826c9ca1278c401829ba7582b34688dae5ec3f0be2c42e0fa5077132eae6c540e347e4927e0d48d78596877659d4567188711fad236a3785e3066dfb45a045fe8fd21e42c850c010cc52ccb37a2f647b4cb254027ec6f575268e7386df21a28603a768cb88cdb105d47f1d81cc3719efbb520281c68168164aeec301cfd4658b155d043ba6516c3db6473a3d0bd097b2c56f92f24d6c6f912e4548fa88916a9b2568d64fb49a7bb97afab33c922c0f61c867c9d86214b953dd531f39cc92bad11276786cf01746d3212a5d6a961ce8cf678ec978a20c87774a2e01206723ef490a469503a10de8131f6acbac58a99a99400ccccdbb8af8246733c493355b761121b1351f23cd275121657590b1b18c483bd70476925be250bad5ea73d61dec9867a3354c3529a4ae4f1c3e16e51f8a056f1a772706a4faeddd500e32f3800aecba5da5d9452ebdb1915f4749a955d7e775b379a4f026b8d6a4cc2c3b0c52caaa1469016e3177de95aba975de6b5cdf1563bbe69487a789776b89995f0e5067c48015f4de0609391ceaf40827544ff12bc7ae6e876840ddf9c1237f2a404e951b2fd3ee8a2cefe47a13efff3d087390db9762f13661a6f5960606b781e8f31e99a76a2e2645e2788fd6ca8251fcdd0c506f8b45995f6540dce0f1fdd8bc48eae08f0f98192949e695494c0f4f4c6f12572a788fb5370cf4bca891a312e3ee2a89d855f51ad5c95a93d8a3f4f74769038f28ebddc871b728acec072034c687f8269f316fe5d958de0a075bc97f8882fe4adc2852543d9b8a058817473d430094809cb3464c04e8e66658b986736d64357c58a78dd028bdb78b82f70d306a03b0440d64ee61bcf698bd46eb57f4f6a97f63f0cb77ea500e02ff3f51708daf1cea03dad5d21e811e99b70125fb08de67a8256d4977cc1023b6dc1b023f3bf2cc95f5949942e881f54d8e93e46b886dd0802440e91feb7970adbc45a6f0e08d0b77e510e560079eef6f6621f422608cb30c11b2f776527bf36debdf19d904022703a4afb3d99d1681347ea2eae04400cb5dcbcb5a3dee07c8b06aa10bff63cc0af814edc95ac1613a217976d55cb812b28ba79f89d1b5842019de7fb10d3f39d6f7352daded73c1640deac9c8c4f527cea3556dcb257be9a107063b0e3520dba59cdc7465f88c393bc74d1a61a85afc21c75c9e7df4800a61cdce0c4b73ff1be03caa5b8a1ab84b233e5f6e96f5e1d2177b3f96403423d428ad4df3d13b251052c52c8ceefd14fe52d74f97d6a67ca7c87bad7c2f3232a7c7d0ccd316a5c6a23db33c0a498f8a09c4b795df3633e51820a27b95f3f605d041eed605f373496b542932b377190069d8aaf67d8f633a25e8dba06e5920b1dcf25dda21fa11eb92ca3e7c7cb8beb15f6bfd13af0a4ea5292e1967fe8dac99ce18d43050de0b451a0b307d43d856da0045ee726b423bdfd8e3ace28124ab24ecb9fa275dc7604632e184c72c248269c7703d2832ef71c1de20a377d24a8a1322f0f7775aca69f4eca536df0995b9bde7d5b60d53684722862bfa168e8690db9bbd7c5b82077eca0f39bb25ee1648a307daddd07c19a0c2717872d01ed6347f7c6d1a3ca99cba52ffb005142a717469c7801264427c117345c3ecfea332e750a07a23d9b1e2508e4e9adaf66044f05fe92884beed404217f924d6126a6e0244d0d3144e20481f622b29a338091c0facb2c6727c386150dfa28c6db1e14e2e63f55bba53a568a665738b9a7a2bc5a772fdb72da14ff91e47f2000ddbfb2fad15ebd6102924bfb4fe942acef3d7eb4f4acedd26508f3ba278076c8acfb28f519c07a0f7222b88fbedf343226e3536a8f48b79c4386fdc0ed048157b5923775bb93258e9dfe0006d62789bf2c21b4326f6930eafa92ad1bb39c9e2acbea710fcf8abed944d7a7619ca00af32fb812e42c28dce72d8d952eeb693398e17defe4c4511080dbb78ead0aee9ce35ef4711c4e55046213d6ac40bffab4ed48a82e71a056ae04876af0f2d51ce746fd26c9f0dd177db67371ad2435b2410cfa5076e74a5343bcfcfbfc4d32aa5e8381643eb363783304db1fe21a03a90905727706502c2c20990a941ef8fcf922758489f04e9586310a60d667b4659d6c504a611c0a1d0df1995191c943bb63b91817596a629d27939f28979abd5ba211337bdeec4a1bd818637fb1af65bb54a2ce5c27b20f082c335454f207a07c96fb6521f7b71563e896a94c5ad385b2a114900ed26dce156e5a8554be82f91ec9d3bbdc7ef06ec61da5184090c7c9f3c4222bf17204aff5a2e1fee7b706d43bf5f60c5e5662e53438181a7ce461d74ae444f92aabacf9301e04f8c44aa5aa0bd0f4ec684bf2e48ae04e2756412ba8728a65ca486bef2b4a48ec0cd020c8a43619b9bf6b026fd226c0aaa1e218e553d0239c7f98617a9844bc78fafe6311560503aed001a3bd3d383b45b710d2117d727a185dbbe87e19d5a7ee54e25132f9ce2241159cc67829732bc639594c2999f5e6467e534053483885729f699eb17a7376db27f9c9ff8d9d6d93918909264836df5f34f560cd18baa24646d69908612ae381aea4764b50f0c2a96cef3b426f4ff620af52b7f70e1a839176e064f66bca9afbf7187f326f8b680502194888cda741f62db7d56bad2244a6816f83b562f31ea755ead82dd4cbf76dc1e98d4ae468921d95e7b940e93ba992b93d7967798c6f08a6fadc57190109e46626acbd13437a68f622693689e5630bcc81fc2244f3ab005d37f7eceb4c1a4c831bbc0f28c18a215188b783d43a9d17e3d22085d6a4db4958e1c07bd369bccc6bb4553dadf3746bd4a4df4bfbcec7f84674d57e8e0d6c932c8fc14df91957d08270e5279afb708e1dd67c0afea9fdb4c52b92453d146e15ded24aadf69650bed819efaf26db0f162520a973391f82e1a81f855d05d8ceda209c7f28df2620d3c4bb0b8f52d473d0a0610a4c6d0e1bcd136e698570f67179c262a1a8fafc724ff8e0d8038ce8ced6880681aff563d654f03f799f08a2351c3123f32845f32d261c29cd66b4d3670873f16c0c381d014a645eba2fa83a12cb889091c302fe8e5d3d1a634a36064f06ec8aa512f8a238aab9ba2f2f461cfd56bbb0500cc8eec1078c3198b19c0edae2739e8d06027844a56e92ddc75e7c64f2dbf4d96eff8690c858ce1c22368d7c3ba401e8edddb7b0f2d435f17288465b2a5256f65e16fe680156d9f024b557ac56ded331274a7bd9e042ea664b053543849f516545e74a66603131c7b527b1fad5ab8cfb9bed9d3613ff3eaaf7f0df6b61d3e7373787ec2bf4f0dce8ecda6ae280cc334229d0f0a7bd79589bc9fbf209c6ae3b7f5122c88176853e3e36598ced2c1b4d23f7283c612e9962d236a7b6e02ba0e1662f6d8b993a9a8acef2b0e91867e908658598ac5cddd5d6f291622075b6a2f8d18735443de97c4846bcc19b0b474f07ff3876e538d7eeb0552924abc59907a25bd314995c10ea21198250d7f8d8a3a1edffb0b006ab03d1f97bcc7684394dfd9a055f2facfc158a5b58ac00c2a6c2754ee923e4469fb85128300d4dd2b5f347f133bdb8be0244431f7e35d99ef40db7bee4d8a0396f0e55b45b99003d412ec67ea3b2a0c203911627d85f5ff5d4f0141a6ec765efda5f7e55a54ca6c3ac3df6079423e462fbbafbfe84e1321525e248b1a0f14599a19f36a7c89f56f20ea9fb6249b616ea68cb2ef20ccb332736f71a8f5e9b2a22211c58fc9250d8dfc33025a60905703276ad1dd13404b56367fe607e9db11fa28b4c0bdbd8c104602bc47b6facc29d359242d0f38e72f11885a81d88cd4be42b1a762cad00c4b9c786a6ec81685d3fa416d87d58d70dc2047b87e816dbf7bbd5fe26513b36507d718ebcdf6f0f6b8100b25c34116542598aa6d7bbed1cc69207c9aae166e800d26e426cf9c4b38e8ff3904a49f959efed0ee8313c41c8098bc7713e6d28d074969e540caa5690581c972a065345e27dba1b81a030ca13f56dc6bc01997602945425efb0ae4ec85acf7bf7c609ded8d97adc5d45ffbfd8953f483053ab6996a21849ce8244599340b29acf851c4d99fb5600dc308ca1f4f125d0f5b2f2d26679d392f5e5b32eea251084fff32e39d0b1837eea90017122f6f934e00624a8e1452150cee83e3bae197272e067b6a0198444ffa034e2c4f78b6be795649e7fef89d3907324f61581fdbb2df3479c0de3dcd0efc7167af6656bd062e9957dfdddc1bef08c0e304dd11061a41da5d81b75fab6d9c4382cbca60bfbe601f5afe54a6857059ad934e8f873f3a79dfc59067e4fb9a33e116d46f40220a1129a1d92f86e1f9c6f686e17f3e5f75950f612594cfcba76f916d77a5f6d7259733655b11d1c0e07fc38b66426cba7a3074c9ee6714cbb1659db7270b89a0d18acae1bbcb13a77229e5daecd2626f89eb4fdbefdd1e0191bf942356a465acd3cf1bb0bb40b39caa8bb09d2efcefee91e14f5078de556f96881b13304fdfa5121bc17ab7a50cfa8b38398da542ba18020cbbdab1054860d364ca0c84b51f981d3df45d27629f3cc387a8209136eec3322f945899cebdfae9043352bac2d6820f32beb70e00d5d56f48c6000cfa3a9ea93940f5164b656fcdbaaec3bdd11e2b539f4ca5d06bac84df2f20b33d9839768a2d7f3e65c580a252298d6978d1ab5b2a270d1ff037f67d728ac57ce4f532ece2c74f8eb075f4889d6fd5c7d135d2d2704b249916dc720c4fd9748425e43c654ce20f2baa8ba967269ae52a413252b90956b55ac8881dc4e3a10748893f9b11daa749dbe5f513508eb80e439f00ce9f9c50a31620ae34080fe331d3cad417ca34808a1fe7273d5654beea1ec1d5a9a02f10b36e8ac884fe67c1a0eadb6cca9ef227475b0e34a4aaf99b2742b11cc4907c779f55c02d4bced65b8771ac0a93dc675a54d6aaefd126b6d7a7c17d578f9327ad320bb7619e59925c8ee58f9171dddc254203f744440e103802742fbd084d41b76d98cdfa4e393d7209872813caf991ce4310f85c9df2e1812c3c75b26e2e5a43ef8589f5cf1ccac9fd18c8acea739bf31515d071146142cd45a010325a8cd943ac3183d561f58771c4f36ecf0f59dc7fee60e9280cdf1016c7ad3fb266092304af3a345caa4ec1ae862965963a892599d29ff697c848c7383bdb7ed2e2cd4942be5db681481ee5197b110dab3a2e507dfc64a639cb7a6c27024646c3e30377dd20ca188d2d633349b328375a8f0e2bcd3285efd573eb19ed91fbbc778ee9638b16fdcefac84e62edb2cfae33d3d4f4f86c1e9dd95ffcd4eca68ba5bb40cca69943603e2c71f5b30584aeb10cd702e799079f889f686dfc809ff0dbb24d71ddc3280b7a8cbd27db00150daefb5fab1b97db72b17cbc53e28b8fd8cd4e7d6a808e7675d28a730a7754c115f58c553155164622fc2666e8f9cdf2505aba3486682e49c2a1f60ebde40f202919ab3090ab4943f344bafc066893222e2a3ed5fec7ed2d411a06274702a2df1a0b253eb20f75fe6c6eb2635f2d989c747ab38781d74c8e2cdaf0927cb93b97de458d3b1dca4ad0d12e5622e0d5b4a837fbe571a43e0ebecba6a48e7d678b12d51a2b613c1effe0939a3349c7b0b69449c2c06f83ad42a93e16bb92a9fd6c0fb6dd5f4013203842ff7841224f3c4d4453f8f6251d380d6d17a0a96af4dd966cdc005fdb7172743b6dc281a5ece991fb317868468dd2961d6dbf7b94d119bd9b79f3544db3d773a08630e4e275102c01b5685adf99a685556649e9c4a5c15919ce19d932689ce68f15b9006e07f6033fbb4adddf986f4bb6a2932771673e6b04457d57b9d0068d3a53ae6c2c3102d1e71be9b26d44bad27aa5753a5813fbe1ec1c17a15b1efa2edeac13890ebf5649925ae0cdf71893f378923ea91b39ba569c5d1e23d843b7e6c4f0be0e3d49eeaf0c950cae8d8a36bf674a375c1b1999a00b19c94481f92ff8fa60b3d97e5f8130e6da9897e7947e5a8f2c48cc573e80da8711cd61725488cb177b6c4a3ac700625b71112d506197fcdea0b94f32423fb5ebb6d79423e84d23097d5541e28bfd8397b407c633866ef234869b02bd50c638f3a4eae6344308c541dde588e280d3d9a2305a44682b0dfcc9c6fb18096cd0bcad5f0467d4a373c0e4a45dcc4f7f54262722cd4855b3251502c0b22918af52e0596d22389b2395cf285a284b91a89a1275e51e8a77f00252052315dc3901abbf6f3917de3808dcc1b2530421cdc7f5c793b13929b9b6adb0d8e833ab9e44d0657a4cc364fcef0020e6667401de3e35222f5740dce891eff066e2a44868f15082bd50dc18145702729a570e32997f1f0aaced5dcd14b34fae9f28faa23a4dea6bf6530691b44f92f425e396555b5d0dc2207c7f63e1a2ccf7774b3f399a035648d6b13116c32b4687c04fcede4f81e4f75764331b15a34fa5b01b3e15b7018dde0e5694ea8bdc06936da8344fd4b57d5b51ab0f358c937a85b56ed236ebeb0cef675e18890f352f2c41fec7ed48880a61177f4be712c1561278b76f084a0a2d9e400f73d3e0cea904b92af76e7fef9914a07d66d2238c81ecff54b1664f04e62d0e10c324ade35117fcb59e01988dfb6b10e82d90501cf6b35fdc9406e8b99f88be77dea1ed16b114df0fa325f1cbb7bef1e20af5072f43994cf32a3c819e04ce54019c15c7f9f5957f0d5d4252ba420c1c52be49bd73fd7f94e32b2b338cb7cfa89c306d538c07d8010cefbad100be9dd2105f32acf4f0c62c85e74407bb2e290ede247cb8fcd4dcd22288886429db7fefe76e486aaf4e4729d239560ca8528a3d3b58002a30859a4eac89720fafc7f9a66173137daa736b61b32f67a3689f908046e2314ce235430d5beab119af28b12833a73b48fea0571fd3040553cb9719cc4bbc6c56cc0fb6a1a456c59d3c056fd260a5d12778afa18d83e42cb057e69a79edeb2e1ae831939a185dd72395cae33b9e70be128db9eb38c7950ee3183151291ccacd7f3eb55897ee9d3a400f1d8677879e3bfebf4d229804fff25eee54d1cebe6850e837b67202fbbc21514359612b23cfd793cb969f9618e2babdac45ce620ac4ead18980557e1f04c0be6cb79e23fbb6b5963d5e35bb7bbea9632484ae6ffadba814e6b9409c65b9148e88cf8063f9f6f4fd640dc9bc4eb58f1793bfcd57b460f06ad738aa9415f1eba0252c14cd74a42d1410151556a864998ff9fe40415b514520240a22ec8b6b9d0b80a57b96e8b95328a9a167dec448605945d835da137ff034c027c00b120d85c98a1bf013bca5ea7bd748da30563cfe0d669b5b364540e441d4c01f410a9cd5beef045de2d52170d740e5b6483f5feceabd2c0c35d862986ded4ed8384f8954e11a20ef91def32fb3a838828556d3911aa45502bf6ad2756c62e7cbf6847af25b53fb29e2794020b2a18b735a4e047705e147294a59489aa9f09f0847a430167e4d105ef0cf7dcc03dfcad13600926c96aef57e4e4dd397a2f2a1526bd331b2b772dfdbaeb2eb830f64ac905699d4929db4b2be722ed8911a4643176be368e8fef873a1df48e134a19e576ce2ef9fff3906690ab197b84e6d191bf0d78998a814bb4fa597913ba3b30aaba541a0a15655f93b3ced9ba068733abc7fb9535c1555df2a5e3862df10e820a5d31f0fa7cf48aa92e45a621abee112806a259f6395dfaa04e970fcef958190e69ce62198d663eb75236f11bf70deef65fe5b09661f787df059a3ccf6d5910ef7963492600714ad5dc64ca9df4de29f06a29067583b86bc58a976da4ab57200cfc56a210bff1261fff5dee02b5354825232cd5e140e6a6badc8589e403bf8689f60286c5d0325cd1471e22291f307d6127a21c400924d6de2bd3b42c54ea5d2d06e70e148ebd7fa1259c9b2080c58ea3db2970988b318f0008df5ab74eb82175db74fe90b2382d0fd7353fca03cd52fe728c97b1f48ae0f656a11126de9edfea9fcf5a4f8754c2e43cc1ed1bfad175ab5f9f02a141f0df94ca2aa834200a3731c0c7b8c149dff686734b74b8e8525a767b7c465722c8d3c15e5da4ea0e51d19ac07c430bb5c1de581245db044853215e237218d5573d5915811e6e6184c87173ce786ff64c3ca8dbfd39a1708e4e7357a4937b861be3b9e85a38b990be06e5affd23818d69ec0bb52e28d44e3b4d30959a6606581ec6b40f02e02210d69b8a5a443032351417ccc8e18802739a47fdd25e271043e961064035a6d17970d18f391c458ebe079fba8a05ab34cafe886aa183dbe139d5e5c7685e71e85b9e6e5f250cc1cffb3e869383f3e2f2fefa21ece0325ea92f53910f96272c564c50953bdaba98369b03f8d76d535733f393224867725406d2194e1233f37f363ba02ba0a6375da30f794b58841ca5d6e227c6bea2fd9ff494a419b85cddc69602ea528d1ca0ceadcaeb0e72ffcc7ac160f6385ca167218b9ff63bb75ccd6d79c51304fba972b984745702f0a69d0820263a35c52e6db68d3fd99fced284544e7a01f87a5d7ff3d1d7bd4cfa6bb75d556ca613cb0c55c0d620d43e40d5d7bf3df3d567d5d8f9cf174fab9be94f64dc6bcba481740cbaae3191f20396f1ccac7b3d0364e34523a9a2b863cde95de0454526fceb3c2fa40fcde853e4c6bc4c1bb6a8764301d4388ae4d7a686dbd9a660b753bb7be48b7f00a018165177f36ab88e558fbd17cd3bd0f4f36debe3c7f3bc9bed71a69abe800eb18739b188bfe3ae1988340902adfd1e63c5e020b4339aa2847de596210b29731caeea648321c4fb948989474b833f634b499f86d131aac03fdebd2bc4e0cdfa97ace5a1ffc83128c599e7ce332f2ac53fe70b5139a205c1f74e4f90dda470a21e0dba198f3644380c18bae541cac6208940b435559dfe154d0c0172b00e10cffc7e942f05cafb3905798a440efb41cf86851ea6d4c19848b761204fe5c761cbb62fe8da345e9a73ea7d9097f87ef16aba306d88b5c487b81cbe02e4e0f8f6be07fb0c31c1849b88016bc4095f90ff695b36ee8b802258ae9873e0fa4c3416310b0f60a4ab41e539d448225abc83aecd61b5d07eb43992a0c5d966c3c1b671ca7abf3ae8a856977571f05436ca1eedce7a994aaf43b7d6bdb4aaae2f4a8fbbe2e58a7612797f0e7f659c41c719a4376ba4c9eb8256bf2c9ed373b082993ee992eb1bea97b15df898b38c0dc5871da3b80213b7f073d55a80543326bfbf65f71d634cc7f48dc3f11525002f3e565a1597c4ef7546c7a2959b90780a86f17912f008e7b96ef3937bb3f2ea4a6f95fa7764b50cd4c2cfe172e2e9bd2cfe1915d4835c166aab2c85e386b669cc7333217d134855edd78e81db68921799a5d7a7bdb88e74b57769af6a69b07acb5a63ae2d9455f7012baf9ce89b3db4247e8e54d4d027865ee2ed6d22fe54a700ff43f8564579ab46475c2d33f1f081098d64729513de4747e6cfa54ecf9652547a2503d292d877070dfd4c5373c4146b309601a71d5ae2ea9b3ce0ad74256c3ec730def205ae8af5845b70383e488f36fa5709bdb9382a9647d3ec66daefeb6788c6b65fb2609654272076660097b2b25545e851bd262503d7a4dac55094ca7aa9e0c36a177b6ba8cad29d84eebcde6b3f62d3962cd45c7966e4884e6ad28215596019379e2d9b44e0a71f0cc7991bf63c8bbec5a966b58cbb39484aa3f332ec30f26f2cccb16a26e0257399d559dc288fa97e22d4cf423e4b9f1afb5fa3c44a8c66e9a49a3ff3a729b1a09e4df8eeda3ad3fd1684103970aee36b56aaca04ada1de4a2b52e62a796d9cb30183cafe09cb1af2858894bf471c8cb44d095e083743181d44845243d4ada31cc714402801953a1a6a4ab01733a0593115f3f89f83f2ba685ab86799c025bcdbe3d5f43dd59436650539d9b84b398247265d9a64e445f5da861ad257ca873a425e1d93b1f7436acc5a5158279c1a33031a6376cf750fd98ba52bb53337297413b40d522b2dfc28063bc77f0e8d8f5fc342410151ce26bbb10feaaf78f39e94332fed57ebd89c74bc45dd5a4b46f6a5d488480c118040a4d94913c4fcba7cde4e03fc4a4dbcf7faae781f831517fc665c89016da3ad831f3574d02123be200107bdec0dc269f11c94bc855b5414057babe64d0b7f8f83b26832aaf68732114914d0bad08dc72f3e5dc85b6e5b59ecacdd3dd3db4b1f497324918d3aab64e074e3bb989e837f3f7cacdab4970020878f8d0034ddb22320c928b94a19fa193e64bf91ba91fc2c0943cced7c90f65b69eda490e7061d9a91272385e682251b2167f765da6828364129e5bde838448a73f819df4441534e9741cb10e3a34375f90c2bd92eefc1f67b4377b49607adf24601fa15b921bd62cea27875cfadc808f40819d5629fababc36981c620e75a89272f02b9bdcb1875cf366faf1f7cfe92f9c5a3665f415e987f14896a9d62957726434fc8accc580ddea0797ec6909070de2cde036a9d1a610b5c67ade5a11674c8fa11ed295367cba58406653a70617061fca5ffd3ba7ab1fa95aa2255f2d0fcff46b1c341f4d056e77be0eaaa6dfb68d8b50cbbfd7e9d47b03c9de059deb72620a72f77a987ab8b2a6aef67f345f458c0dc88becf55cbc63d114e213e99fa304d04fab5567fbe39a92079fede9e3e94957462103dcfc912caeb03ac737fb00b3bac17e76f57ceff9e5ea7dad622fbc9c2c1e1327cfa79d716f755bcc56318705551ee09e10cf3d1f85fb2d74f66349678e89eaee80e10529d168e3b41cb93c9913287ea2e4b182f942048095bbe5d07a95df440ce06547fa90a3aff8650df1c4ada402cfc048de5713313a732cb9e4b82ff5d2403f762aa2a7cfd37d661ad5bf2073e99c5631157a7c8dab2e43df7a2fe59561f351f4097501a3e10c4e90c4ba85c7d6141f0eb64fc9a874088f08a94ac7ad4340ccb24af3b74ad259cc6f39e609543edc5db86e47e146cf329b0c9b35c83cabeb61c45624072a08a0626eb2ec7450e059d3784d463fdf330c7f57b4347dabb6d659ce20efa2cf0103f71cbb726435b4cde6f3964610e605a551f575f79f210b9ca8ab664319f75c47a32ca34afc2d18b2aeb5621759a13365375cbfcc63fec0b16c5152b1f298988aecaf2403635e2070f7e8fd20bf71c6298334410834de3e38be8e44fe42613fcfce2924280a16987ada704db9f8f6f3c7457df01cceba5d14c1d990c546a330bf83c745cdc83d0c0efd045c9d85f83947d01077b8d2f53b58ec7bc59774484b9ea7f53dd0c8bac4074edebdaeb4af0209c2b3a066213fc3e7280e446fc2ebff7d65a50219433a0733535c397b6414c167348efdddb379d0e3f7fd03e602746eea822a18ee97062815d734be63a9027b7618663bed68b5027e886edc3dab7bc57fa7b8968830c096f4031418c435594575a18b9256a4a29bd67d0e4f039ec4cb4eae28aa36d656bd4f3423aa6830215099e3b9bc39b5906bd9f6bea731134b20b97a8714b61c227a40465fc6112443fbe5095f69066d3afbd43780b510571bdeeabdba15b4dec17137bba757413095648bc3e75d1d6e1402ebff5c9fdfeee4f6caac77ce0bd6fd06f95d77a00a09fef7256521754295f9c8584adaacd68f8ee20fa279a29e310811b45c6fe987474a1459103209fd0c4b644337bd71fea2266cc6141cca124d2759de4da95a3fad022401a2acbcf34b2aca5172dc6cde21e200a535e2033cdbbc76a8ce7ae84018a041316e8afa60e1db4901084a8301159ae76016644b1a8bd49be20ca2c05075defd38124a5cf3127aa16be39a26c51ac747252b8a7551e669d1c6124122bdcdcb381f2c5ba2234ac66152b1e0c77b2df2b9dd91182a4d8446c791600e37f9cf003a05e8e6279c1277c49954576a991b61d2aa10dbc9663f38bef2feed98aeaa30f788960c49f4920ac9e82101bddd2271807d328c9fce36f0c80c0172ec9a0175e67c7174cccc2f401cacc4ff4ae2de314bf1f198cb7551ac012b04c5dd4d26705dc69aeb4160d50415306ec536f251fc8a466105d9d38bcdc3a43ef4f69d634c8be749ac293c3939263d0ac350a67807af51ca0f9dd6f4394837295f58f676d0b077270b2b2b2620456de899317cdba83623455ea43af689189c83d1e60eec9af7982d9998cbbda14f0a66fbaed22ce823799ca3821bda4ad53da1d4840311524dbf647a0901525b9710f4459aceafc2c38aeaaf8542aa24b2dba2fd55339ae2c209c0324fdab7665061c706544be85fadbddfa6b5be9317c174266fc4ecbd918712deb0d99430298c92e1b32f27e673a06dbae1b9cf369bc8e092fb7a262812406047def1327f708d9a1df89d02fc0401e59cd0be5bc1c19ee091ea553fa32f31a2ab4af9bc80b29a820d7a19028cd408edc8e0f3de7ad9378e983de96441f2a3ddf12c4069eec860597b293d09f9bfdef7c1132423d462907004eaee3e2744f3a00cc4a88a55daa339af02ea0b13db029dddf05b3a7667b271fb3c0a1ed4f674e6bbe847b623c7a94b58a29094a70316f1fb81a9a3708d71b0c010f6eee8084c074b99f134a942fb5b23155f173826a7b3b3b25a09318b1e4f5e90ec88bf5d0be82e575b1b617e1661f617bc7137a27d3dbf16f81a7d313f8c8450731dc2cbab1fdf5ea3ebba168436afba669080d338b780345aeefdbdbaa26c5c0f87fe0bd7c674d4c606e003247e2753be29efa11a6c7b0e1e41082e95d6ecc542e460ef5cc30711c4012f67d1b0d72be94d3fbcce8bf9e20b6b1befe54b3b72cee4d43a4a2bad00f46ca82e2f799de84c7fae2f84bf031eeba91f3b051595f3ef9d0b57536e1d5906f03b6a14fb46eaf222410320d4a5e1cd6df4d59c98da8eab849773b4e39173bea09c25495b3f76ecda4b7a45cd1285a4d52caec026ec7b0fbe7b3dee35b924e6653a0740f0dc503ee838e67b5dfcb145e91a5b19a9dcf52837f4b91b389306bec0cfcb4fe4d324ab3e88c4bac40a85533a7604ec1d1444993f07126167312a300afbc6bae057e5d28a67765a408a91761dee7093c0e090660eda2f8e4a5fe7b4ea8c0c8dcee8295fb7eee7c58c842b1a54aa2b2ea27bbc14ee3a8055e970f486e53ad776f89c9f2f862abb17d4b976b977f0337a3c2fc60e83f035b01c4d2cdf97cda56e6440baa91189d29bfb832882e4c37197b554977cc442421c396d174b0a6ab1fc9f436555cd2e103b6d26c922deda4cc1d23d7f6ad67fdfbf457e56663a7fdfbaa88459803a72432baabe6de9d2b809e47e39a43d4040e87f68f81f1435cb2943e82ffcbc40d7ab79001c8c045df260738ef338eba7d23eb90e21d4d5110a8a49d7237b41e6f1edc19489be6ff48ce96c46322eba515a52dc04d330512b0f0770a77a6fbaea2536f5661cdddb017e0995844c8af5d2c1ecc9b8ef5d2b3aec0314672285f9e496226239be157819ee3d5460871aaedbc6337e6267feb8df1b2c32cfe4fc4eed664cf7a8a0449718cffdf4a0ff2f18bbd119f86c7aab2f9b2dbe8f578efe781602c6654157ab503e5690d255d8729607241375649cafa4fa6b0bfb442f8e487af006d18da950c52dd8a5aae4c933adb4a88977d4a47599ac1ae0741a40a85c4466a16824b794051b0e24a51d381452e743324bba1950bea5c6821dc9c00827900e396988586b9210f3bcd25d5da1f78d7a8efdff2db35a5a3a23c2087e264612cd8906bd6c556a5a915be263d367cff17fc074bdf7d4d6bd4e5171223df16a14e47fa58d367c3b274fd42ba36946d7b3b19bb95acbd8a81d5c276eea4400d440dc54223be3e266788689c5331f8e30a962d4b342ae0570247e04c55cbdfdb4d34f9d9d7424cbbaf0e42e8b151e7af2d6d54b338c604e94504217ee3b63eecf55ae657af41aa2fe4864a6b7b910c246651b3891542e6740e5558057d4834ecbeb66481ecef0ff8812877a19cf27d3a3851c44d3484adaf42047fa5770b23505a1b93bb6c63736a2dd5c51fa9cd24bbd4864c3606f5f8586613475524fcdcd3a3a0c1fcfcbee5769e37f4f29551ab8fb284c6e1e88417eacbb902a7d15e87be2c835c28a35227fb9b68f0c52f5dfefaad301725b7e8635ad6ca6ddd29f67a0ef69fc54c267f1f3c5c05a2731f179764804e78aca8960bff32cadc12055df95dd8a6e14bfdd20e58353ed2ee18bb3f9b51d87886e2cceaf31e10e3f2b451bc0d49909ce1b5f0c5566d96df2a4ddd8ab91041f1215a01406e89392b15bd91970b360d5558ebbef1d7c545f020b60ffd28cf8e10674e4fff1aeca245b1ae2d2c768d2ef9bddbaf2d1e53abd775926064a5d993e374fdf947d2b5252c7da789fbfb963e376ce36a96aae4d279429eca539720cfaeb61af2cda2dc9aa92403e1fd3ad278a52c0b5fcf4739a30b88a712165af5c848b23d67d2653147ebb370f182047afa6b43080cea9568ef6c6d0e1c2280b79df82c96099f45bd1d73dc9c9488585ea2a77027460d2b5e18278b2d0358c1721cc33d61139f3bb5dda8ee8d8dfe003943a12c32caf2198f1102c8dc75f43629ecd5f2d2bff0a54f4f2e57520f8bf8a68aad8e3344dc98c44c4e9812bb4cd17420c1e4117d2f056f7f58acde1f92901e53795cbf507a3719a6a6d9747db4681e32647125fdc8a2d75e6edf765f5ee797e18163b6c058c6738cf509f43ba25685312bcce3a7ea3cd192510759303875aaeaebb689ef83bb7c9deb7935ef1bd57a4f664429823a64cec2023573c37c999eeb354190a38bc7edc8c33b2d77462d371cfb004b6af44bd401fea37e8a49fed307e05fd2e294f09d39951717794fa9b3ca271be1e147012114c3498f3065f590169cc7e5757aca47e485e642e6d1571975c4beed4fcf56e96103ac3d0eda9016736885d496234cbe740c044a43112389bfa8038c8c3d58480e5c044bb93ab70a15ee86b4b3746469acab2342fe74b56b2c73beaf363aafad8cb678c4db0d3b28edda4e52208d7f1c41ba6b58244ad831d6fa30b3d8676b4633d32c482d4c117c2594bdbf6b4deb1ba957a4afbf42bd224240170a7400412c67c2d4a2a05b6820430fd4d4989d92235d107a79fab888bea952bba52c0a6926f606760f1c0a581b939b22a8655f4d1a950fd1bdcf1ce9c2cba1cc13215c3f62d37a6142f4332bccd124977729e0717f76c8ab11ffde25b9a732060421dac83d94aebf3b165cd6b098a9c29e09a80bf9da9a2c5016d3f54ed6202a0e8c8b6cd3ff409d4f9b56655d0fbdcb735eb56a84b8f6def8e73bf7090ca85302f13de89df409149bae02cb3033fb97fd2de29a1e195fe66db7dc4910216e92db299124c915548d63eb9cc372a73b02a832558d14af381197406595767ba3dc71f7f9fee7db6677fad8d946a2bba5943809f337ba68f80b7735c11ce135a2927522759ec40775b0f72f9aff6ee41ee99f03310d427f15ee219de7df5874f1861e87a2c480d6a1c03c241c0471009e5a466e96e008c130df41a16553dd924c51a4e88cf8c848d8ad21e027b69667ffef79502a4a7b91726d656f9b72974e9d5f00a7bac49c0c99465627eed397509f68e2ec14762a7b3bf2481bcd01784698d43889e7cac7792ed093c0e0087e078a811c21323d1b2d94b4380b4b63c12386cd3ac191147e95602653c49994caa55bd59f93e72881386d5120005d8a43990101ae977957aa1fb6358eab638aedf82497fd931b89e07d4a265f2078d9f327a4db651144b1143d5a0f25e7053a4c03b26276ed46a28dafad6e3c12fa230c398d5c5e3297c4b75d067e4dbc31ee2c45fd3795b6d8102b84708a9b3a69142a2ee7174bde44a29b8447d05864218b4f85f942ab55df32989208444bbd4b4335c3db13a6296a3d52df61004126821b8061545138de50a3e9535287115ee43a44df5a79733d6e00ec10786ec143f7a10cd75e56e77728c7fafb0bf57cc8970caa4696d506f2029ff2e72136395ffa75aabfdc71f932cd92bb93b0744e20d037a1530e8ca6a3b4570a36f5c95b419033fc3ac68ba4837213c27e1a68ba8c9657a842585c7836ec968e1052cfa044df88ad2419627f60b79c4adf082dbd4f83a0c45309a3c4b7c3ef76c87614c709ff5718e979caf193b8c79bc0531eabc02544e236045c4b30ce605e033a262dfa3df60f161275f66f1b858819c3e00888c2c04df3bb67e48edae2cd8c703fd9cd98392178fd032ba3af901bb0a784b6f1b5fcdf0f5b3f959f7699a9ccabb1ac7d12b785f1c3523205f20e1f4b0b410a24c85730eb2ef1c5bb4df8611e857900b177c87c5e653c622c12f408cb105fed7adf12dd0a68131a08ede8717eff6addfce1a151919d5157e9dc4e547ea893bccc17eeecf4441dfcd5add9306433b0a0228459fa4afa3b110edb0ae5bc6c64ce478f9379f5687cb5acc7c66114b28f86c0c434ae8e6d8176a8cc979ec9911f8c52fe64d03d1f8d0fbb4fc658b443c9b80d36c9cc530aebc06a82b6784b32ab6cbc465c01211a983093d3e878aad33e733a1b23f433d63cb988e9781f30f43af6471208e15a42551772acb04f6765c92ad9bcc6e8bf675f2b7eac088db7780abc9aee4a5a97d1f6d8cc42f6287a91b4e1d226a1eacba57225c197306da25bd8e6eb2bf3557543fd37a4c27175e7ea3a984b383c293063a1510d931b7cfce2014f39abee14108505b18705ff83ec2d257d2f94acd06edfb3c206aa3b378478b1b57782bd6ce59c65ccc88fd33e5123c5fe07d40ab6c64f8bef28b87b63ced3cb54f9fb62a2bb755960b717fb2e9c2ea857a1c44cbbee010ff85e7a91b2c2e96592fbe29249fbf4324262d162e2b59d8984b1421b16dbb10c78dd69d5e122d3340062c881b0d1c798a052e9127542567988622aa393fef6b4d588505a10a86fbbdf73091ff88468df33cf96c9882c5bf77b3017dbd72118be32456417a8973d0589f16c20a2cecd88fec5e839d8e53504580dc48b2f18f3f5eaabcabc4d3e6687afa77026727ccee3a40d2d0f40faeec8ce3e23b51f2fcf69152ec59508321aca5bc8337fd240aa3ef05a44a285f7ac4272eb4d8de7fc708b50256d44f1d7ee59c79b892a13c4b8a8907f169e2f145a8c9863e1c7bf2882d66b9aec0b2cfee9f97ca68c9e417e4ca52f7450ddcb2fd6e59250389a6a4e4512ee2ad8dd80801c12048206bd658e3a87bdd4fced6d708e2026bd2add1ca91069b9a41b02fb620a9187d147d580ce7105b1fd7e4d1c617c8c1412083c22661941ef36bbcfc24a277043b79272c745c6d3165f4722253c8b40776634edd16bfa48c40b883c82a8d55fb21982cb8d873228f0c3c5f585d663ea846610e5f130c00ca4bd2b791157830c5e416306ae78a2fb8fdd1df078879a26ea2bdec76ba55b11ce8195fa99b9c9397099f6c2b39e4b446e9dcf7bbeab6deca96a53cc5f2bc7672cff650b4b7462f80363160e7795b047eb7aec342479dbd658baa9d89bfe1d313a3658b69e7cc3e75a21869721baeb4f47c7080478c80cb45b682f8d69f8378f9f2ffc1013252d23735e312fee3da64155014008b7da07542de9b2b73911fe52d2af7009a298171a6588a4da3a62aa7a79af57ec7e5c430be54a3b4fa4e5dab62e5665e843de8e820bfd580acea37a61fbd38c742b2a445fd0aab96862f6130192271426091b4ec18106c1d55e0bd684c0c7ff8e8401199cdfe1ed4a4eb36f6b8477880af729efee94cf344439f0af4942b0eac9ed691bb9d09afc84944dfcd5afe072deb77365d28aa04b617154675d07dc1b8f0b68481eb8c2183b7b822390cb4bd8f374677b347e4c3af0a7b3717071e77628b3978bcf34378df59404dfb0403a9a3640febd9c5e7d78f48b96ed23ff371d5291e022bede9117e9824425c572d1dc4eb3fd77f7870f7165634f75f7bc41349bb28b1650dcf7ad64194e0a84e95a3584bd2e3d200673d00dc6254dde2ebd3c4ebbbc4346b8eaa0751528bea2e8603439030e6bda354abe63b6ca8519eaf8222a70ff255a51e32b12796dc627d6c96588f365a032ec605074bef9c1c265ad7b7ccbd065ee676e605dbad575628853fcb176fa103338be78a082fc5c9fdab917a7006d43e4fe806a20c7ac89dacdfebac3cb2463e7a1069c0ff1a8c1dfe82782dd83a67d8c8486e3545d275488753fb818ceedc4edee2b97773d030ace0a54ed26aac191872e6b80b4f9393799e808d5c499502fbf965f6d7974e920c66e9dba6212df674e77deb3c672e89fa45e2ca6f52b38f4beebb399f47fe40448c395c9e4d7e5f7baf1238764d26f5fd78f016b734153d421ed48331bcd5f83626f133762efbf03d3dd3899484cd590a8bdcfff0136ebd4c874be9eb104306dc774b7ffd3b28e3af516649661ee0d0611ceaa7f5bf3d742f5e4418430dd58fedba079005ed4c2a6d0b600ec5f8d202f53be0f72c778cf8755b10d77e69ba102bb9f55a2e04ef759724eb2f322ec63a4d3883f3e3dd5bd1ad85c0f46dd57d61388d3d7902f9fb1662c3dad326af5be353d3b0d164a18acbe6d0695aac1fb720578f291e1bc729377611c894eb48d0f2221db54eb47c8fe1a34fa9d576cfcadc41009d96107835a32c78de75f001e88f43ce2c96a3a8cff8b38d8b68d60ef79bbbdaea0d360e51ab752f1ad9582000f2717eef37f2b455e884d9b341de32c42a6e972e455ec108413b6e0908c7c31b6ee90a21752515c1eb66856afc1e5150c325ce690db7372fa08a883d8df189c5db709b4d7996fc22ee33536e7b1b512b598d1c84258d057dfac297de64e593632e99588f31533a635dd5da146a9f1827a5688f1c7e04b882cc53fea53cd573111eba11bb5caa7b15fced5145884a598684618ec10ef9a3fb07a5f1e4d4e0827c89b597268355238e99776f98299794f1306c5fa05a14493ded2c8ed242500effe6e2b1776fabb844896d74608484833db26b5dcaff01f62f66bb0e2c16a40949a5617ccec6b1eb443443e3ca7381381ae75dcd6beda98d946a4905209c1d706a1de6341c668c398051193caf12b058277c30f9d3686756ef2298502c845ff5e2ac5367cafa937d2d0e804f86eea1b286c11b5edf7d07726c2e49478390a123d334029c78f7e3442141aa6656800242e3d05e6de9e537ce7c1dc9917bd3634ead459793cbf0e7ac8218427c03c893f05ae9baf4eaf45acf1e3deb2192b727ad40c10e499310a298718da630b1f789492859f2699fdebe15fb38b347831aec475b2196b7494be073a4b9b71b3091394acaf8387abd1cc4183f1e7c47fec64ded125e65ffea9cb971db7924a30810f2115a6be9f440ddb8b887a251fc69d1810ea13acd0dd046c3b30fc61540c499f181affcda380b1f1a97957cc516e1be5ac69d5127a19ded8f268acc9d80d01451fbe73e8c8853aee7b4fd6eff8950b50b08f4614b9079ef507e6312e510ba434d22cf8a82bd3d44b37a3b3e7d817af3e439e70ba24d121ac088a54b6fb52fa0b8c8c80f4c84bf265c09525ac85d644bd831ae627f03f6ddcd9d87e9833b0aeda0d0af2fc9267b99ff38a487631b28de87f3c965b309ec316910c5e710a8bcfb58be9551fc4ea1bbdb9f0151bf919333c18067c16b27fa31f2db28f0f23899e39e2b185acd156d65a097896f0db9240799771531650c97b7c0679565a967f949f6bb65581ffe9d18ac97d375f33b342a76f897a39c5f5165fd52c1dcc17e4f858ce3b3c9b3cb70c47b4270e72d54ae61cc590bdbcfc3588a711e935fb1739abe9fb323f08f84a330cc9452c1b70df611bf537437f9071374347237884a412e18cee46fe5c7f649678027a2a6ff6ae61c9aa95dd3f9771dc4f28c0bade15788b358da005137b5fd346aceede54870c8060f825588cfb3b13f706ce296bcfaa333bb202c6fe70a27ff368c9d793a7b2dc3b9580c7798f81bc14f2dbe5870c1eb9ff32159073faa09ba134dcce02a1c03bdfdad7c428690e82f727ddcde4eefa65e81f7ec6298dfe064bea9ec010f233505f0dfeb5c90baff377cbf4c7b549f8560e743c9e23bbb3e1a52ca90b908ea1e736b5a5ecca1a53f7e7eaab1e5512bb76092ecce06858bc7ea69ef1284f816d2e78cd02217d902df8981171cee311f12f396118b4b51bc8ca01f8bb89803ec19cbe701a5054e5c17d12c896cb7bd720bebb9f3cceba3e917185a2853e53d2a06512cfd53ae3d9682d677dd3a69b2cad0265f8c08582df35d82a2329fbfce88adfd5c129e41b0b1f16ae7132b95486577806322819857f950c98f738184b1c0877db71640dfd6932f4f5b6862fa847d5b886aaba93266bf94e0cae2a048979c7ff699881b12f32a13dd94f40560b6691b9616284f765ca1eeb84ff21f7b2d56e3c107dd96e4ab38ce0be8790f8237ea7308e5b8c3bef8cb14b0705d793852f074ccc822b938cf23f0eeb04c3a11d7bdb298771af39ae94f32f128f6d3e3f86e27513c00f3725df010a90f1ba7bab4cde44513b819e485cc3825230f1816b5e3da746c66f0045d7bc6a4b50637f9b7ca97e0ba759b85e7d3ebeed12156a041680160079ebe3aa1fbea4cff49a8dade024ca0f12708e56a8da8a53c5b7b6c315f01832f13447b56d4f25eb4443522ffbe731619c6ffdce46fa2b6f7a6fa485054ee3d2760c483a85a4a1bc1b509570af3306f43fe1263e9ff292792422f29c735c6c0709d484ffc9132cae8f74b552ee42149c2183231c21c2836a9fd0b9d609389a1a3ac5bf8b49b4cb55d3cab4ec545e2f83082b294b68014db239bc4fbc37c477f61eacb54efc61db47a946d529f29f89bc29c6549742040977c9c5788d5eedf5296214d018b4826d1d212ea87212b0b028dc608643a7acfc8edb5264e1226aa533a0548b49dfa683bfdfa06cb57c4da21b4e1c377bfa636dad3187bf46ab169a81c32a85a6ba929ed43169d7cc9707fc438925b3beabbc229fdb29fe1d1e2b22fbe1b3f5910d1f92bf7b5f024f649016a0f945401a958fb012ba94fd9204b36ae61884df47338ae42bba27215725b00edd71e1f2c96c8a864af90770476106eb6cb899fe34188fc18a48ec6ba10239b4c8802a589876eb49188fe7a17d31485b5c182b84851f77caae5e8c6b629ae30ebb80bdb646a62ae953fce0174ebaf6f792663aca6017e102aedf3cdf164341b2077a82345c371419ceb77f4bb4c247d6bc594ca6ddaed4c375556bee3580566a751eac8ab5e27a2e12506c4782155b9a3d42345efbe04c912bf3ce013d47c3501b1fada367ff21d217b5b4a4718151f3565bd98a2d0a5087701ec09cfad2250f7561f9be024ddda5c0ee97ef7866bd497c9a8742eab51a08f565a40c7b972aa2c80cb6c83718c786a32f99b1267ff46efc27f2af6f811f7d58b0179d5b81d0687ae524bf605c3c64b71e07060036751878dbc125d1e0710a6722977331aa7d5e7d7d02bb72bfe494099dbd81203fb2d0adb2d49d555b2e344e8a8bf317a0ccfba0be74a9424c555e5ce5ec288f7a1fe5b460c3a987b886f43fd81593050f586f2ca6b48201e66f37c0242e92b210d568fed08ec4409691366ef54ecb30afa2e41eeb7dc74ae48c59cbd665646aba418e776cb52cfd41ded2a957a0a4780a3942cb67d922a8d43321b1a0f30378f0738266257d22a8d5d65161d112f177b4a06c1e03faf208edb17264e2fb0d631aa0923e39f7e52cb79bd6b8360dfea03206db507c931dfadbdf07b7a5a078941162d7429dc6bd4243b8ef69f860e3f9d86007c76f66dffdec06b8e10f6adf916a1dbd471cdc6d4abd0c51adef75783afeae422199a8cb4a25009a746a1477a3b04848d5a8b39899f1d751da1de32ab4d4ea2a5a7a5805864c00381ede86d4840f9e427930ea8e67cd492ecd6c19aee5bd3a67a54a244beb5a06b7f4b06c30d581877c2a06fc8bd949b6aa023d243d19a5641a311440e88368cd333e58f09efe9345a74caaeb88142038f7d7f5b01b7b63c9dc98aa536b29ac55d840d7bf6534565cb95b6253186f9c60f0069c8753e7419c00062e539ed7e6d9f2456ade15cff41d94d254c4075c8714aa1e3075cecfadcad6f962969667036e8e0516a4fb495748020573662cc23f8bfc5a9c4a838264f02e3d0e41e14e5f4211ee2cb3575d74685a39fca942c141d489d423400e3b9f9df4a1dba85871b25b4b056d7552db8dec2b18fd5cd09f921117b3339d8aaeda166cfef8cd73b8931b4e0747b59efc56cb606726afc0f59008cdb8c448487353dbd11aae3caadaf3ceb860b1230cb641737e63c6504694a7c811b780a359e65c296294404e12b21d4f3490b3570cb55118bffbb04e96f663968dadcd6244bacbd23c02afe3a1c679878314c1e8284ee84e0c732f06e1ca1501fea2d4a0b7d0bbc9e40c67077f052e3899e2a6456b84ead5cd406d8276b76a762548c5dcee29b7e6d73228efd0ad005b721ecb2eab98d2a95c2d898e899448d8904ea867f390b6e009505ff7bcae9811c840e23e78aa00a164dc19eaeac877f990810a9b7a861e401a8ddde9834e025a45c41646ae99da780aa115401283b751b66da7079cbfcd930e4607a886ad3a382b6106bf22afc26909e48bcdebaedbccff156a00988f195f242eb9a71dd196de2f14d0c81533ca30b63ab1280150542b4af8185236578ba01a62f64b7134cfd4e7e736243b49b12440996d6cf6f50b4ae883f63e1e61b88c5bf7e09f022358acf4bbe1891b178d9989762ef59144941122afe19a7a89b2d3c40a541500c8f499c3e3cada019d2d38a36137a9a9c0a138353b9b41dfef569f94da4ed458f417074dabfb4985de231caa2cf3ced8f7c0dc63b0b121165836a9a15834d013b244145576c382b9dfa35b7ed53fb65b4d7624d3cae209c2876bbff1054cda50a75934595d97b73540d7ccdaaa9836a8b412ab1eb507b0141f02180c7397773a11f829c5fc4c0c8df544facbfb1cfd55294cb04fa992bcd4f3a4dff7db51a938ae8b90cdf55550e762818921c55ba5c1891a7ad5f880cb8be99a7cf5f4dca72535492c8661d146a384be0ef7e6e81887e894550a67172e6fb750b11b916251ccd4a4f0da03415869e21ad86d04abde88d012ce470275252d8c5c13667e0ac7270e2199bf0f9aa62d660fc094852b8b4987f276c004f9166b27b12cf6ed22b42a9057028c34ef289e4dea38f19e7cad4a9abca04929986d58ce925d41476b022d54dbdf472398dceb86823e4226cff2d3b92836baa022aece8483d1abdd3731621d42383d3ff3ba7a646fef4dc827485f7313abcd2955131f7017cfea4ed331ca7f1824b4eafb83381d13eec15a0d73aac8433481e0d794e3a362cb7979aa713d4122dd63d8bb8b110d7d4962f3c7ecadc430ff625427d636d2fdb771a9e8238c1d1b853e1168af92127341c89b9d7422aa6b0811e28866d02da8fed970070262e22dc6bda625f2356aeeb63a43efa2c00266ae10613d319f33b625f6976bd5c240a005633b208ba9c4be92e48bb5377ed7ec54b4dba832e1877a73d13bd2bc5cc39b3723834c4abc36cc3edb535f16b89714dcb4f39cae11bca8910b6ee4828f7fff5fbc7abe2ef638088a2cec1a7efeeb63d579388b08f5a5de9258a14dce957486c02ebdaa087312d4c77772436dbad18678134d121b5eb37be3452e90c0791cdf3480eca6482ba1f9781244940b6fce32262ae92d0e0d380b6b7a4f670e2db28e97b84ea3fe9004f071bd5d93bb4c6311b97753d7adbdad2ab8514c8f41cf3eb46a912473d8b08dcea1b550bd0d8e679af797665905f6e107b29ba817fdb19d0ca58f77b829e9848d7276c8b95c15e96ae7af0f233e8146cccb67e511ecc0ddab830aafa1ce50febb0e73bfd7fe349b1ba9c0de09e41d963ac52ed1a2dacd3979001f0548dee38ea44c4736bebcd39be43cd294717e8d845c9a4f5c4c5e41ae12f9531219b1c3daf3a85491ec1bbb31ac77a2dd1e50531e03cad4ec8c2166b3533e2958787fbba5ccbfe280df64f46186c738dede826d1859340e7efc0aadbc55a89506205fea1a0b9e6ddf480aaac85fde652d990c8572a267af4c4d3cf5ec62043a25d27c1d857ef002b66bac9e688470a1b0da8c32d549925135d52c89e7a136adc43a5e3c6d27040a28afbd20bd4318ff5d4258b59c17d80fe1670054a202727b77c2a312736d4d3eadf7cc6ebcb53f14967519909afb623a57ab3835c004835e7e6a256f44f2ff4dae05468a82cf2a24bde9b812fe1cceb47f87a86a6689412d8211a3dc18b8724449c8ff6b09ef6da7ae46dae5f9559314e357aaf4b5f4ec97e426e333fc69a7bfd484d7a4cfd49a8a5a65b0d9e2854b666aaf5a8626b59a565fcd0f43b983e1417d7ea9d9549209b8c3e83e3f271e6de392989cd773fc690d8484ecddf9030ac354484f5a9b4413270b6326988fb251d8d317a7e0fba34b8a31a401e2e64401c67888801e1bf136c4ae81f623dcddfa44afc9b32887ed9cc48a395ff13f5c85629c5e20a89f25384eeda92f118d734a1b95820322184d8374dd578a2794933d96c40cc61a5efa336c2e1e523589ee09dfe81b06ae58c44d38717657c52d22760c6d0da37e11971d64f9067b387bd2ce3e2ff62aec81bfbc39ace6c324b18e5a756ab5bbbe6b750008254c0385c8be9d32eecfdfdd31f308a16d9627c0113c0d06104b40143a4d9b4577167c39cef178639654b97b0bf7a1fe841eba99bbba340652a8f489a20216103d937b29b1df0a8e213986e8ae870109ebfdfff7ac275742d34098190dd2ec13b7d829d3079385d5d9ebb4214015bd1370a9fda96d8ed1975a30757e73fa0335e5d9dfb2d13ab0c53634a6be115cc90287c4b4b393681e2ba125a2a47a3ac0d9aebec695c5a7d6ff04f2246403854086926bb843c37c8139c32d1aa85123c3f10a700ae12a11a2a329f16ce35ea70f608935a32c58da30552f53504597a9ccca93c7653a12541c7bc7ce070593708773cad87e29f3573a905e617518a4b6b078dc4bc30eba700cd8c0e66fed5d6316cd7f4d7de386f75b3aa20c3006c9896eda4d5dba0fc8b5b6148a5ca1e477016cd8bcbda3e55f57953673727d1c9e28da4eedac7bf40f9551232c9380c8244d0d1cb4cb7e2ec5decb6e2c360988ab3fc62aa35671d9a5bedc6defe81cdab401a245648e5ec2d2756130e064c048ed22b4013874a00e941ce2cf5c39773a4a9145a0700c31685e6f76b381e65f44eb89da445c6797ba863447296022675673a06411b9a2102debef2d2783dfc6c92600d285bfce9cb779ecbf0ec08b03117e378e0f106f90bfd758e1be80c20a7c107752c835f4d8a51c92a12aec6ca5648ce448e481b4cc7ea35f109f3fd54f849ca23feec32721191ae021b316f648cd1a289084e0630543eec7b5256620c02482b53fcf596aad7a738843b4128e96fdde46d9f73c14a2cff68b66b177f86ab5149394d6ea8b7ba7914eeeccc7ec5a6aa76415e941753ab33b75ec370d66b07911d614a97ee22937a468a39c070cb7faef6a1d8970dcc35386407a39fa569ebfc01234a7a295b60ac1b0da48a0c370e16ef40b15182ba060832d963b419756048c643d68503ea276766699fc27d82ad05d51f2539d4706d06bfe5166f3ce36f068768b5bdffdd0395801026a1665700b8f2df4f43e814087fabca606a6f9ba9558136770c4d43a2b0b39b901fe6f90bf771df77b62a5186667a8de54979da356e9891958e22c60fa0175336fd8d304995a30a77be5ea73006a5d98956bd3dd8ab1af869fe03b0d04f25dbb77990588c94d850637225e291aa778068b250147a3704d7ca9017b0f0d30f8d975f2ed70faccee6235eb45d29ea81e062fcc9dfa683c6e458c89adf086f3441f8a7a8a02f4ffb5285825b7ce23854c3439379d8ebf6e16e11336e46fb1bad9030424fc17d33545650814b913d4295cd0b4c3058d62a2ff4fb07714ae00ca47313678d0a0334da56b099cd3c405dc4c064aabaf27ebe079b43986c60419610370b4b78eccab3de74abd3162a35f16827fa20e6ee9b30a9ce32a9d0a5672f3ab3854b403b763556d01608b1d631fde6b3dc94f794875503f817c5b46ff21ef9c674b3aca95ac7d63006f1a23b7f36f5cfe191dbf844e15609da8b8d8ee19e74217fcc1d0c75723b6e8902f946ff57011964d4048167e556d66859cb5b5df11d5070e5d5a1eb27493c121d72e471751b84ec7c89f471a1e1e0b6babdbc131cf4881a851d9f40d59579a0b0be928eb8355c5e0d8e4ba940261735b1299a61430e96dc9983654d3d86f8050d74791dcf6af0d019284136a9f77af0155582acebde32b108c68bedd94c47a072743c5f35489a8190063910482ffe4215f78ab50644cc8d176b206ebf0f3bd75dee61023246ef43782f9c2f09e3a15bb313697515e1331b7c8827eb6f9b6ddbaf2143092f6101f08d64764f853c3740171a13a63268b8a26375c6ab7c417c7a4f5ac02d23e040506141837084e3a751298dda7a9a5ca6fd6a3155d898cab4ef2e726c44185e5f003ac25413f61437e9a2f3e227c35beb130384277e4d7e91f444402e3f7c5b455dd65d76514d3d4ebb454531e123e447e08ac55094f19b5afd6716cdc43d71426e06d8d0491e075d6bc507a7191763da4a5b2901e8199c60c54dcb3321de111cfd189ab0638813e5edbd13dcc97912579abc5c39578a4e47c52cf96a8e646fa1df321b0bb189b5b37c3d7bc751c6128964af4f2e0b4e05c6416e8ba5f26bb8c96f5ce9eca26730ab95fa9768256d3d071883f1234c512ad4f9cc874c2b00e00cf99650d2a166945f6bc561b6048e7ecfd25953d3d6e45da0e2500c5f70c406d87ae584566984940752b72fba996d90ca75abcead2efb7455dbf33cf8cd8b195fb233f02134d0c97372643c5b76314b207893294a06e729ba0f80ac45d877a0b1479da47bc50932b991c7dbe3f979b6f9586e32dc7b22d19829622b79a2e08e44a938bf587017a6def818288011bb31c6ccbb916850a11744d9b065f48663d6458b9987adcf21d6f66443984d842f1526d23b780ff53654c1ab06c63662b94d121c4057ff3321d2e8c8e7e3fd1d03a87b7c3294b49b5abf6fbc4e6f53f93757e6055de642c2d498035d6336f68a451ea645610cf94b2db02f6dc99ffd82827594db534f77f2562f192f241dc4fc529ea6387798bed626595c14ef7ef5aac284224147080745ba8c0ac166aaa51f4bd398b99c88cb6ef76b83d5191961bc4257cb09ff8d7c3025de7ced40880dcb7607df270440bb3aa4ab9ca1e9a0e36fbf8a45741f01b8261561ba465ba78625d035ca86e3eba2ca96dd086e6fcabdbd77e9679d38d3e8cf15e0ced5a0d30034c5fda3d5072adf7869b39ca6706178fb17dd5af2d73b3acd058c0fc8eb145e4b673544ff8f28dd177c155a7df146b013f4d04273b30482485ec2c34b52e066456530c1eee327c5cd9516a3b7dd36d556a8619586edc6b3c3ae9f04f06299aa41f8ca92572fee80d864a6ba81d59cc53a2991ee7625cb70573b83ed1004fd71c392aee281c2dcef33aa72376146ff20ac017786824d894192e6512fcfa886424b639b21764d072bd82ce151e9765d4faecc9dcef725d657b45c7a29858874273851b2bcb41e12e4846c9bcf43ad4dedda94d1edc5b5ae42e833774ac7937585cb4e4a9767e8bef1d6cfd1c100f3e8c062d3d467211be188b741012ba47a3db3f0badbdcda8c305e4ed96b586dff7d3da9d2d5224139444d2e520805df2cac1c9177d7a98af30f568e01c9e8bdd5e2affebd2e00d29a092f348a9176a05442dfbb1099bd5b9fdb03f6bf3c765c5a0fdd1ea626ed73a4b3876c331db53e8ce4c2519c12b9fa87c80255e0ab70c1c0352bddd14443a77bce557e7b18458c4519b32f6fe4c0284c311806c62287d30599e2485e8e54fa3b607b49f630f44493f9ecccb4c4a039cd321b0eddd443a9d5ea0e6369efdafd116d11c944e50d6a42df4d8d14b92067f1c99fd128f829df9e95d025618aa39037cbcb1f3b26fee559c98430922666fcafdd6213002a6e425bb9ca7907625324972bf0f4909e58ae0202742aff0a113b794c1e920a70ec291b58bfce2aa1c92da4b27346fbe8582ce37001ef2546ca9061c8244b99a76dc915ea92dd40977a1c60aef175255489c2591f561e4e44cbb3ccfe73571fc511bdecef375852b0da0aa4b5d82c68684eb028b59806f5b9012d11692904d7b7af115b5cd2ff33b817ff510a0ab83ab88e48b63864a0cbc4c5368a5d8803dcb94acbfa4c7fe5645e465a54caefc9eaf528870852f32da01657315f7b0f62aee5eeef2ce0bf34a9f8d4ac87e9f30671850747e820c661f7031514ef25f6e2ded5b58d96e7d3279d6f4a146a2687313eb10a18aff4ca1d9090b698e46130e19eddedf70bb1d7fb338d9c2bbfe55df7ff4e3f9cd3e8ac4ed5213e25f13c3e25cef26fd85f27621b065e516c44d80aca7df05c1289ccd63fc10c3eedd484b1254167e4c31d136bdad7ea48412c4f35a21f0d44cb34771bb21afa2148eb677911cad69b2817df17c174acc361fbb2cf5b917fd1e10f338844ab692e6bb541c676383fcd96d11701a4daf8beadb64d0885d3faa57deff0ad8fcaf3e7ad34fd0140fd549aa9088d06eff8e78e5fd1493bc2b4ae0672ce8ab3a38586b723024a43422dff1309ee4c72d50f78f5304f74d06ae3048fef0264cb0c8a3f2a27ca0f6d4cc93f87a1f9e9585e59eac252b5d912fd4e8652992fcfa98c57ef63dc83a3f2e2147a08576b793d792c5eefdb36901baaf74fdb7a149ec542074c74d811bf09662c2c16c19c78fda1b145eac83dfb377339527fbf68e0d371e207982cce33fa41b8260940f2680061529479f3508288b8407036286853db9f5a5540620981bbdbef71275140ab3b45d4939dce0be1e667c71a900393bcc468adb294b13fe73e51d5f8393bc3632f7c169b2dceb913779625ed0a5a9dc7cef4aae7342ac2d1809a82c087488ada93d1af265716d6e25074b480a583e86bd55a5b8497291cbd0b6e97e7cfea36bee80bf4caaa18eb39a00010ea3d04ee25eb89f5eb5c2c98d73a36e16d0e9d8bb74374e10eb1988647f2248ace9d7675969591abb7bfe40174db53eeff026b72b69d6743b34e6acd3f625078b4c57e15c335a3f000981c2514eeeac4698b23f0769a7c0ac7b413bd96ea29d1d348742d5f5998f55267a0c1e61ce15643ffa3cd4901732e344ba31ce65f465c183516f532bad24a00003588c58ab7c1bb883fb6d94bd373eb17dc998665a8230b45f8b93e43d55a054424825d58488039e785f84352a19c296558a97e041eb6e6803c50d30d5fb64c7a9585f473e55085cef2615a42a7e271f1a948764b1ab6bee76af530c0fb14c96e3206e7411ede610e00037f86f8757ba70a4eec40696062383a9a7933948415adf383f94d7c5ca233bb60f249a69be7ea2f78cc8dce5fb5e4a91b6bba5372cd3e61fc8785a5923636f498b14d5e28a22687d10cd76aaad38e2392d86df8078f6efa749521541ed1320538b7a061904b7a2aeaee8dc85ec92c8cdf17a20145ab8ce22347b686308ea23d630421f26324c22e89eb6a395b29637d7a53629986d6cc84fa000b03b8567a69513b044360f9401c795ad380cbc579a987da2e18666e2b6b536a3700577ddde17f061019a82e79e03f7335ff0fb30924334b3270ca8d491fde7a166f7219feffa14c308cb7840182911b2ada9ebb12fdc1c7b1156d52710be6b065f5302a154398be79f0639c067f6c664050a1928d03a57c5a33e55a48b130423369e68aec045beaa734ac95ad746e378a9c260fb7e8aa9758725d236ec797ebd0211a69613cea86cd5b9248eef353f66782b92eb7ea1287465880ff57669ecc664f78e49148ee9ce83472f7d3efb54bf81f290cec86c386e33309b246248ee4dc672f8b91749278c0cfa609a2859ea21d37f05afe1d3b1183b24987c26c7e7e920743ed84bb6eb803c583f2e5c9d110c862ed849d424ac70befa1dfb60a95585011057f3b69f9430353a737018d60a03e169c49dced3ef1aed648d19bc617fb68d4269f8a914f3a3b9a2d52a00c2164496942230561e5361a62eb88edd70037faa56c1e2b3aba3fe4911c66929374f96d0982c87155f25b32784fc21001df8eca969273b14353cfbd5a03adfed8f5a383a2bd4416f9d3636619dbcae0667af83adc2f0585503baf61bd7e2a83359ac33e1ef052a2d06b6c5884d64b0eef2c7fbda1d2f8d6f23ce6d8798400f191d2275d405f86d6bf4f88f492afea6bd8b7cea20c104b3e2dc53e7a995e4f2d33651868bbd73bbd23e9fed3e88a87071b17073a5efbdae383e2fd3b5c485c6601bd8c168967407a550e4c217ea22e77020a279a19050e9549e2e83cf38c721e853e02f0fbd318e831bed549614c536401f83838a3456b3697c6da1b2ee50aeacf5722c461a81b93e7789e0c333dc40738725eebe69ca75960d30ffc2839946c942f26a4a73e3333e9afcd23056abed7c05acf8e3fd282b4bb1db11f09f2142bc17306838e85a8b3f8ac51356fb14091b2b3f345d9fa2870fa7e9c03db4622f50af6e773705c9f3e80e5f95c27a55b52791fbcafaa7dcdd7a6ae53c38cde228f4bb6c520a4b515c52727fa14507ed08a3f03a146eaf27282051bfa451529004d4ef01922ac6efe4e99205a6b7fa88a46d332dfe5ff4112177f888cd64d4da7e71f276edda14732d213a7f41895084caa77dffd4d43661b0fa59e4877b49beecefeda87fab21f8868f39623ebe773d83da066d2fea81bdf607cfac285ff547527fc734dfe8d615a7cf373e6c84b7b554bb1446bd2a45cefc474fb536a5e9402cf605310959705cf8476244f604ce2ccd22571f12d72442c6036aaece608a696c7acdf027adffc3fb668532264b58ea9deffda1c0a87c9948c60b1e8fd420e3e7d7c3c66eb835276796a83e8379b1715f3ce251b348be8827b8adcb5bc9f011125f0b6670f97037dfaf1f960129811ebbe50e8f2f48162a436c2ba7b8e462707eec6a907532f9fc8e64d9c7f448ef357c0d7bd9bd5f686158cf386393fb6b95f9b520439e417e852779de8af441e987e18f633ae56bc6407f38f0dca329cf8d0f2f1e929010bdbdfcc388cf3688c49347f659dd9a6c0782e0df09074c6091da83dfa24ec33d71f372a438b06cab21f5a668e2aa163eb015a7f0e3c62739107f570c78405c8e60e5f04cf114face3fc0949a792a77617123c2f543be29932b733c918a9be1bb1134f4128acba072cfff00f52b3d44b23dcd0a3f3f6f5bb581c75c95c73ebb0aaa47bdd15584744dc6af9e78103b9977d67bd497addfd501d73b7c939cc651399607958f2a3811293a6d77ecf94dc6686df412c6ad3ff31a3c1fc72190199a9769c8780291da66ca5567f818a6c3a5f7265ea2f13d4d8ed0af5a9df77744fd03e308d1cf3f981e41abe21771b24ba457ece3f687e3eaabf7cab807dff93ce654b08f34d1104b0b794459183f4c34503aeff696b5a9f42a58d9b88f99257a9dbbbd83f08cff5ccf6c3324dee4f4fe9085449d9ab2a61ec9e64f20c45caef61935d4269f28ab538ffbf345e62caf6f17b00d24ea59c905e818dd44188d3186bffff11b9bdb3c4688ce3b338b046c2b6c8077d6984448514ffeef741bcafa7490344923ec3549c1baa89e1e7ef205c4c486522ba943ad304adaeb99f1c66efb6f5d8ffdab73b4e710d3defe237a7b0e729563bf45fdabaf2ab7db55987c823854c8726c08ac33b900f04067db4220f89a09a22441b6884c23e31d56da0eed681f309fc395a0fcc5534a8ef10f5c47daa1cfba7d99ce1b50a86492d0393b4704d32ebbef03d1f7c841030532c666e115b641ca7bee5460f9f2e126336d13eac2706265e8ccab69e2fdb0e3c77a04a920826b0f9b4f58e30752d4b31c5cedd06763e2e367ef491f94d841647630c3da76ffe3e8cff29479b1c9627df29e3a161ed8b3ea8477d1ef52e55b13c56c0aa087f5b455f200738ce742e7912c0f3361c8465d751e240696d5e9e67949ed74d913437b782dfeb01359b67fe0122452b4f159f199e6c8679f8337206f43aea85017424ee63abe22c20549422a35b3e633fd05104397c389a62ebb278fdff0e2a75743c57f5be7d76d6f7c5c6193182ff00cd1fa29f78d2cf709fdb33ca062741cd4b7a1e7b6772690be87f8148923491fb17a61c07a4961c1fb80bb1330956437d8ad1529c84b01f4eba07cd63dc26151ca1cbd64ea4a0e49e361f402ac06d5ae9377c790dfec22f8d66997850d7d8d52a884b23b853847a6883e421e5bd0b818658a8bd1496fcb4d01f09ed535d42bb502f46119bfc0de3d49eff7713eefef604612ae5a25029832939e6bb650553246dad0222ab75dc16167d1c7346f77d7e925f077de36e71c37089d82c4977007486d01cf739e89fcf984f4dfe123a925a91d144c871e0410c42d67ed3ef6682710f968d7034feba727dddd9cbf890fd1de3c32218c6026834c0ac2eb82953419c6ad8a95de132415a21324c4cf4839bb2e6eba4e87e1c294a4c46f483d6acbb8fa345479da3065db00a7d4d741073b7d13cf570ca6a7fe7f6fa5ab23cd2c858d36e2f4558c67654f2bc2e8c83676bfd6615e9e07a114ebe6e92659917c3fdde9318207813f3f4412ee772bcc4095c2e0cf50fb7b6739470b93ea8953121e98baa47556fa2ae87b9acece5fb10a1eec18b41c874dd62e501daed70443d13f15ce9cab499496e008db8bf649c3e12168843980c7b583ddc4c98bcad28f6fcf265a1e844a4c7326121d3747cb2fc3405bb8eeae449a8dd7eabb2cad920e1c812cbc3e555d0da49adf9491acabf60d8ea599d3a7922a3a3a3f7e30039c0eaf3b9cf6f5a2bca2952c2e2e13e723a3bbd385d87c31bdf9fccd521c17a817c9b60f22297ee8eb1c870c67b18f9e180109ee9f3271bfb03c09fbddf6e5fafdc4cab6a89caaec8d602e4c546708dcb290a8ef813bc5ad07cb813945edf1dca625889aa1edbbb3e22d52374f8f359add8ead556f23d3f4c52316374045d6613eaa2d8f7873e9bca6ff030f5431bc8e32a89f4b67dd4c070126ed54eb080876f25af613d3bbf66873f51e7879843a1e09f09aded78411c0d05456f4fbbac2fa95777e62a06167651c828c23e0a077a5150284650228cc6fd50e4ee875f1ebeee7b050a3eb903002cad6822bf19223d02f616958a6b76fb30db33463f68039b1a7af332ef4b1b814a672f47556e03007ca2ea7e1dc1762670d5812006ef5f5549024568ecda0cdf207432241a93ad4a8d785563d38b88a4ed223b58e9c6793e100b7ba9083df6c6d0534d738afa10678d32349e94cfb3faee491cd6489f19acaf4f5b09ae8031b1453b37d3f14b67320194463690fa3ac69ed675339fd45f9a02975a4be57c43f9a7caea71604f3ac6d63a4247360a0c6473f1f107cc2769a5b9ff51103dd197ec32869b86604aa486dc3d36814f5ccdf9d3f48b43952dd1c76316050d249593fb40e9fd093f738e4ba3549b935e54f24620ebc71b48f14ea462fd13d223f9093ae47f5d83f166b1ce065b99519b8434e3af441f10a1ae938c02bad4ba987062fd6d71a54d8e4cde24fa38373889d0ceef4fb3cd19bf8d302eef0cbc2c52dd38cb5d65b9624f38adcf9aaac26aaebbf6c9c92f74eee4e83c9b151b7b6820fd8100b0e31d1f037d43f894c204f7776b71da2b693ac69c1adde74389f63512063dca5835ec9e1a062dd0deb1725598165dbe0ed8f151caed9c1d0830cc1eb3879e888ada379bb1393209f9dc0b771e8b5fcbdd424c07632341425f5866634767a7c3dbe6b804884170c58b7a4537d8b141e331d587766611818fff59eaade63ed5130064f72a60794b1d71f6f0d909989fd0841b5c78dd9d45b63351e01c9fa09c99c352ddf18a2a80a2f9b92db44f2027e94c888468181840f0820c8ce52e1472a77ad77ee642905896382dc5d8f77cb078764508f5a5912155564ca458f2707ae3c071f0b75e76653e0e9279e80c38359290b5219613c9cb52dbd798be5cd98d94dbe3769f7170078c67ae8e72da2b9213a18419e4bf6a2d8322c01cb3bfe90f6b2963c768535ec3f9a9690223bf88a1e67cb8b09d9624f5601074b0494ab69e1f58741ab57d152306789dc4f5519e7d35829852dfbd500ddb53d8bb6648cb7c5e6034ccb72c1fbcedee2950445809153012719c45f31994e74d07d5b25dd803ea87136f14b4ce7fb587b5b73410b7f85314fe4ecf957ec1a2d96f84857d87aa5ccf099367ed59e71eef901154261698d7ef2660a379a0aae60a120585683d53fd25bfea14de9455d13f647888eacf9f1caf7907a30039473b6980a7a6d20644972033557bcf2e275bef88b88a10d1f0624524fe996820c06d18c6b7303279b8e4b14cb57b67af96e3a5b0892eec4f3055f615d242909317776272ff0db85ef69b6609901706b9e0c24e9262c39bc6f72ec505f260ccee0807b8aac0af1b76a64615cdc5da28d2d6fc124af0b9703eb791176988ba5ea6689845b897ac2b058b4aa3388dd47795bfaf276dfac19aad3a98e7a95db71f41e649f71197a40914f709e33904cfcb349a5fd0b49f47637ccddedf989af2bfe8660b82203d4165059d53400d74aa027589742ff7605dd41499a9b2872056a8236005ea4a8685fb5346f5285924105aef2fdce6bf5114cb6207bc71795436a3df8b73099c4493afbfe5baf2e21754aa01292a597c568fac495bbb7e661e987b8255fbecaedb552bb56a50263b978cfa86ee8bef4572c6ac989944b80e22d1fbe152b6ae13ba15a9f996f0a16675e5eb01e4b4a9a59450e9aa3b737975d780ab67c3b495939e4789fff3fbf2d2e0a4b3f2104e6a74cca49e73d0e9d5e061552e58cd63001da3119d6353452b26f1c8b48d994a66f531359c53497f344f2e2102ac3a50c8e48ef7ef33791489e43d79790e6c88657c4f0203bd4d4824fea6e9eb0d7316150642e11961b8d61d0b120a4540b64f7dc42f7d9733d49859fa2e003d31eb0d1d3c37b430337d62f0e13cdcc9b9d46414aa9f9d08697543894c0753ccdbbf0c0dfab4962bcd97882692602799223e8c05c25467ddec7bb110d21541a820919eefe3179de8b303eb9131b8a26db4eeeea548d1197e7620eb950796dc2b0609aa6ce1f960c9cc2a155bcfd216c4b67db6d798f84508f4c68871e4460d8afedcb1301bcbf21dfac03772d2d6bf6ac4bce9b839513c7e7f0161ceed02e39ef120b2ff01bca1a9dbbe10242c1da866604340ece40c42265d8339809b5f6bb8ac90d6920d59aa14c9550cf0580a19de7799f5b18238d07e3762a48a21dc3b24b97d5bb58493df15bf01c499f49bcbde9d2ca00a38008ff0c670d94fafcec7c6b5113d26e5552c55fe12b80d42bbbbdbca5b682f8072792a471bc4d7a0d77cbef515d3413277b115039a1c43afe3a5dd00b92992347a3133957420b7733dbe380b31d9d202e41d0c4a9a26732a1e022fc4f61529570016066d0b211f7b487a391818f1418439fa68175befc587ae5d81c4f148ae958b42b6167d57b38c46618434d7c44a5cde8c82372bd68b4e0468d28bd0c0815779ba9a2b393a7c86714c00fb79ca77795223e905c6f3c8c25b4da8cdc7da3cd539d753c59970c151408e4e8866b28520f29944234ff8ba5283fab6d1a16f5463ab8e41315cd2dfa400c88ae9cf501d3dc4cd1bb70d6680cb1a4d6205db872d113651980c6c7b506cc11291d5f2a0203f255143f14b872e07db50e872994d67012471a1398b0d2e4fe1076139d0b3b270b6e308a1448891cc78793ccd185ba2feb5b86e90591c9a5e23f4f35843657c597de929dcf11e62fc69599cbf6bdb99a323baf67e9b575fa6f99ae3d703188f5a8dacbc77fe4a916b3d2703257df1c9104866a752a181ede1c657343d8452e05fa216196a12eff373c79faa8ed6d97b91a31653e40eac3b6e9b56e93b13288514a96f4140edc15c2947fdde28f86c6d8f8c5f7143261b2a91426f2e7366acf0a79739627d21653de1115226da52e9e90236bf697db73a4e0eccbdbd1616337e47420db2524d7766f5e65ec6ed71f8a24909ec39b8665d9100a79cf3d896c953f09523ee890cd643cc3a0ad75dcd7ae0e84c136badec0e10090a3fa49651cbb3bab91032df9ac4dcdc8ee2c6780d9056784bf5dd2532ed719732e5c3af625b6829a19f05245f061eb5485f9da6457d1cfa93c862b12c125fe1a4e8e3d414d7e49740006110fd5db477198bbcf0db1a28ef184452464cf83a889a31de7484c16b2f39b0dce948eea62eaebcf6f334359ff1d109a7516e5532d1bdf727f99fd799145eee825ddfa72e762f54ce33e9e8a9c9f337b48908a555c250dbef70ed492f845d26947ff208806ef9f9fc290aad3674b1f935153c2214b667c1d1ed8108349cde60e4517ada890884aed90ede47e42e665cdc4a6a387e1a060d6b426dc821169388b4ffc824ffca4afee3bd719f94add13f548bfc0a9a1ac8750d0dbb5edcd5f77faadaf7dde922d211fbb745d0a57b2a6de97928a8ef71a3608c3e77cf036e565b5a19f3ae301e34a35334a4757aab6be4029e87c7c7c923bbe40a348ab211d3bf5c1ce8285b533a8de45edc440c8784932f76790a816ee74e63ff5c3b6cc346c39a75c7f36b2ed303f06d751cb6f3a95ecdc80eaa08593eb88ba091311e10417abbc44472bba8a8b465dba9258f4a94b4faa7ea451596d40d461f2b77170a856677da4932ecb82207b9f5fe410c2f8f6306d16f4ada0c90e3f3d2a253c1035ee465e887fdff778362df20c5013f43dd445de1a1c230f535a7a68a1a9ed8f4dee2f08ea7bf5afeea8c6f001e7f2da19d07326e68abfbb328f1ac1e6f9a2b478c36c3bdc7021dd70bb1f5df03774aa69771a3f2b6d20e6484cb37be7fdd043daa0d67e3c340d50c9bd876a2c4d253cde27461f88f19b93f251981111ac6e34d0a94c45cc9f59fa998474686e8253b0b299f899737aa388e2187be7734858c77649c1a21770869c311a11eed490c3b4b7f9d15281497168144c14a442c0bf6b7c06c6d7425ff6d2776141a7741fa49004375cae8ae936c5e278a3ad1dd3154c825cbee0a348ee2e86c52035a70c3f428b4c35e96b81b570024e559b80dc670e88396ad13d776e7bab8246ef3697290001044178e2e36cfb0760eab0ac08ea8b6f5c5eb721dc8b5a47b43837bdf8389c806972912c5efd247a16de165a89b9c35d558cb10197967b9ae7e3a3025937b6e33366ffeb87da8107d461e9fc3b6f96def7aaaf06b2f1875bf32803febb81b16169981bfdb6277985aaafed0a4f86e9ceb255d6873a354b1674f97fb36d1296f558c6a5dbb9f8196057c88ea1d30be2bc0f466e123dd8a74a1840efc83abd9ca128c50f4e039e517edce42ccbb8cd20f8cb2ff5385b57de279040ba47d15ecf87e14207402b6ab823452c12fd11c2b41e1e541afb19d9a96a81d6c8c779772d6507b04eebbc91cad36eb10c28c0a9da85f062338cdf6329fc7677905818af5ac893c9ada8a521dd9a6f76707d28b76f21eff8df297e034a825e2a9de96f5e6e1e15ff03237062f3378fc9d97399652b135e9c4be5398d0aebacb8ef071ac73e00421d89ca6ce7d5047552d7980e4f0a87117822d69491a178e2d0c170448a8d913a80d9182e9429a7175e1337b231394208d24829d40bfc998f61b09d1d5b994451615c9c36d46f32ad44a09550430f58d26faed1ad1fa07d01ade91aaf7b206d3d17723b4b064d8179ba6da85300966111748a124f7caa84231db1ea129659c11e8e2907d7766ca3376b8813d2e612d2233937aa8441d7c6e97e1db62452b35a4698dcbf59c1182dc122a65684a72f580f97b6ee7c9f0606e88af1d195e82d11c8765af063de4434150c735d3fcc5c1f52c507f90e5da46696c7dfebc8828035ab7887c39deacd961e22bc88d31bb2f1ccbb7442977d320916d3aabf7199f55c6f5fbd5b9c3f782f79505631b60e02ffc3a0104c73a5513f033dad1c4014e2418b295fa4e5cec80783b73bca3e96937afd082c26c234333b151c294e2ef5a9e71699cd334db192c4169dad869d8af3486ff3b52ce4c12a94aa35b4a7dcd9ea5a72a96acf41c8e72726b3253d41385a4945dfed30068a14d5c6a71f8073be89f5ca1ecf18c250081a3964dcd1c4a1dd06464832c76d230427a5a9865cfbd80d19787aeda37dd7c0849dc1af44138f3bb8034395e93af55ce345c105ded78541b37e1ec7fb878ace63646d91955169d2c42b0df9bae968fc20df9f43555e0d2c4b663f78f463ed59245bd95b77f247c7382be56817bbce45db35a6921bb3801a3244ed8b220391c340d8e6d37515c574c089612e434ca6d600f6063fbf1b70acb11e8062466598147328fc403fff0a886969985dcc83b58e3a986e8828b1a3f46ef3bb24fcab316264a60480bcde27536cdeb4492b18bbd0d3835d7ffa4ad670839ab64a41423d3776e22c5bfd73e7f8eae0e96eb40a9cb43f6166e359890c6bf284e87e303ea0e834122cce9975855b891c37bb9836584c7bd879bb865ebba457dcde35da77445fea4380a966db1bb713867eebd74c94e99339c2449c37b10dbf5e4bc46c426d18688d34350cf0d588fe69d559b73424098010b9eaff27dea0263e85a4dd6b2afdda9673c637d3a79a55102529624b9a7d1351d58c73a9efd1accbdd3baa2d0339f026b2c138f8396ca602ccaa42b1e8abd5dbe91dee7d90e7769ee1890b3fe812ac35185108903b6ed5e4b4ee066bf006fd05fe8e5b8023a8894e0264061d0c2292040780d2912c0d2d8b41a879ddd4439fe5f2db2e321010abb31a53d497b30acc52f8609547b8b3e4ce71a7f1b63ee6dac695ec9cdc5f266f1b5b1feb1b2465961a8ff898ecdbb1ff0d11b97f6efe3965fca48cb43310e7739a21931c5094c0c2c51cfec8783ff62b1ff5eda8d45183918abcfc1a31c4e537bad60a6b4c85e502a076e7e351302dac1d5538a727f087c68ea385039a1bae8953c835e8a6ed995f90b729bb5ffecc65e387d7c5171611cc0e741a8a3bfe890e67171680e119418a3b357f8d80451970ce5fc3c9456b7e6bf4b159252f025b4bedb5f318a8beee9b649270774bc5c94da04b4e8cce3c68612e9457d8b89b2827b05dff395e965a45e6ca4edb256086ef60e32b4b47685390cc8f085079e7e3f64b0bd9c0d073c31ef66b24bf5b09bdc7cf3df081309214de93922cb8532b7156c582b495f681823cd932f390d3d8a8bfdb94bbba51f902001af9ba2210059c289da987acf48fdb2700ee84eee2df5434add22907bd33906c2c0694861a3a969550eb55cedcd6a40b66a2773f5392479eb0c501760dc33fa0395c25770274de0a3e9d481b2094c561e75caca108535307f3e9728f0843cd3805ef110ad4e4c6684433922b73c7a029bf322892f25f9cc96734ee0ca0bb9e2e7ba079609c09e3c34bfa580cc28a767b39de33529167cbd4ccbbe3895a5ae9112f82943879dd628d3e222cced55db27da5cc41bcb842a6bcd605e8eef8b0b531541e5bc5afa1dc0b819ce7920037b486ab6433c0303561317c9fd4093b3ef5b023bccc3a6cfb01e4cf335cf799b42e982a55ced95bc876d969cfae937549ca3dbc581e4aa31ff9fc52b812816a26106229cf224719f3cbf4d7fd08bc3c3eff6555cb45796851652e3c9cbd678be2f8b76e814731481d30f1bd7e428c34a821362b4f36225b9d0ed184c1d67656d278a7d2de23aec223bc15dddb22b621b60c4c525340b3c2c41fd69eeaee0142105578d8587ba18006234dbbf15df416452492e4e2cd7f808627d58ef3aac61dd7c9d5454ec236730ae543500fea8bae206ffe67e13501bf2e3f4288378ec3b06ac5c16e5d894677dea49750e288ad320a950f9dff9bfd34154a79fdb030c46b8e688a81be7297b047760b6e8620809dcfbaa3966fd67bcc5fcdd4eb4fb3f4f10d852dbb52826b6df829beaebc86b66dbed8a1ff129982ac906d261ef2de0075738a2eb3ac5b29e270dcb8383905cfa39a8ffdb0f6a86962c8bd67f96fc907a8a40f1e077ec19510a52ea586ab5d316065a78186466577d7ce0c7680b8f0669d5b16b8dfc62f1d0e08109ecb1940cea746b8a6987bdaa867be13191037220b1cfd58d1d1d740a1371b4500086016114331206531882c78d702a0c6b1c23bd1bdc312c01d32d8bdddaaed6529e64bb1a5d5c2eae130f8f21f18ce2aa5b26f09fc302722872bffae7d5f017145391ad19b22e76065374ce1fb1dd6350413d0505c186efb380d98982f1372a79ec77a74306c8ce7d99634a938a9fe5adac5b911bc0f1dd7329ed0b9a43725b3c89d16aec3be60f0252a1b026e2a322b94e693e2ea2f9ee6185e683a5625610a871ccf5679141fe4e19087b7dd44cf103306157ecab37c008fb20c716a68807ca5f25bfbe38a3d5c12b5b7c0c2770e20078d5ea4d81dcbe0c0594cc226ebc8b7f0362336746127b67cf35e2e368a97344d7ed927d3b1b6ca3cad5b42bd67422faf8d878f2d5113d38c3669e284eece16951acc8c82178b083068be1c2ac2164b795ac1933cb59c6b1c776f80fb7936d04ae669d1f8f187b2f3969acd0c7d56da14d07083f54b609a4bccfff1638b123826a20b59f9bb5d137f0a2284c42ff7dc9da58cfad5dcfd306d8738a62bc5c22d6c6dbc950b7798a9fc50a0f745b1dc92e035e748d92ecf135ce26030d2a4f8387eaaac5fb448b6d1b3da34dfd5cc9f22ae0d1c847a4c693fefc22b95f000e3fc4602f1a7295e36beb7cb3ac40fc9f153321534a779a914391ac9c359ff26d8816203b327bc809fa43f0498979a9041426e2af6123a6fbad8892f45e49383dac63295cbfd282436c7b5879b5e66d1a5cb47ec6566272e00b32a06685c4193c3ad7f4527c3d1933753966f1727191e5a9d96de999a3f2d2bc11013ee54dc56cbf976b644e13229de98365f6c6b483650263b6cd1d55f540a8c42db1869efc5d29a2c49cef7a1c362b74341f56f3b7a5f16e849f62dafd595583330e97e937be196dc6258b78125d2d8c1a012d487d464d22ae86570598e93fbacb13dd5ad96e38112a41b3aed977afbe1737c1a9dff913d684b35435a71e98767db585499c45e8597fe81e76275a1c58e336a32323a4639100b8811809d09b36da41dfa9aa3e92d2accbc72b57b0e6cba883eff133aab6668d4802d24803a23a442914c4e23b70c49921717c1571dca3fc772d68a99d6bb374a44f1d6d9dfe478ab5d286de241698c2f1192499e4297ea7198c8bbe66cb52b915a46534aa2cacfbfda45bb793ad690af5d7181a7f9ed1d4451103e87593adf137464fdb0339923ae01f566220b2a25239293104d7d26ffc0e867afd5620f756357428095f091023e46a308fc1f315d4b5e1fc18b3a32375b7de02845139dbd8863af724b087da390c07f83fe3a0ab2035aa947a0a6e5a764610b2498bd767c1ef234c0b7be58efe86d 您好, 这里需要密码.","categories":[{"name":"高效工作","slug":"高效工作","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/"},{"name":"文献管理","slug":"高效工作/文献管理","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"work","slug":"work","permalink":"http://example.com/tags/work/"},{"name":"学术生产力","slug":"学术生产力","permalink":"http://example.com/tags/%E5%AD%A6%E6%9C%AF%E7%94%9F%E4%BA%A7%E5%8A%9B/"}]},{"title":"python-ERRORandWORMING","date":"2022-11-24T09:38:43.000Z","path":"2022/11/24/python-ERRORandWORMING/","text":"¶Error ¶No module named numpy 在输入 1import numpy 时, 出现错误. overflow - Error “Import Error: No module named numpy” on Windows ¶找出原因: 没有安装NumPy模块. ¶解决办法: 下载模块. 在终端输入 1pip install numpy ¶ValueError: check_hostname requires server_hostname ¶原因 在尝试下载NumPy模块时出现的报错, 和代理有关. 同时用如下的长篇错误: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100ERROR: Exception: Traceback (most recent call last): File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\cli\\base_command.py\", line 180, in _main status = self.run(options, args) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\cli\\req_command.py\", line 205, in wrapper return func(self, options, args) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\commands\\install.py\", line 318, in run requirement_set = resolver.resolve( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py\", line 127, in resolve result = self._result = resolver.resolve( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 473, in resolve state = resolution.resolve(requirements, max_rounds=max_rounds) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 341, in resolve name, crit = self._merge_into_criterion(r, parent=None) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 172, in _merge_into_criterion if not criterion.candidates: File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\resolvelib\\structs.py\", line 139, in __bool__ return bool(self._sequence) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 143, in __bool__ return any(self) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 129, in &lt;genexpr&gt; return (c for c in iterator if id(c) not in self._incompatible_ids) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 30, in _iter_built for version, func in infos: File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py\", line 269, in iter_index_candidate_infos result = self._finder.find_best_candidate( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\package_finder.py\", line 879, in find_best_candidate candidates = self.find_all_candidates(project_name) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\package_finder.py\", line 824, in find_all_candidates page_candidates = list(page_candidates_it) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\sources.py\", line 134, in page_candidates yield from self._candidates_from_page(self._link) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\package_finder.py\", line 783, in process_project_url html_page = self._link_collector.fetch_page(project_url) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\collector.py\", line 512, in fetch_page return _get_html_page(location, session=self.session) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\collector.py\", line 422, in _get_html_page resp = _get_html_response(url, session=session) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\index\\collector.py\", line 120, in _get_html_response resp = session.get( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\requests\\sessions.py\", line 555, in get return self.request('GET', url, **kwargs) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_internal\\network\\session.py\", line 449, in request return super().request(method, url, *args, **kwargs) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\requests\\sessions.py\", line 542, in request resp = self.send(prep, **send_kwargs) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\requests\\sessions.py\", line 655, in send r = adapter.send(request, **kwargs) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\cachecontrol\\adapter.py\", line 53, in send resp = super(CacheControlAdapter, self).send(request, **kw) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\requests\\adapters.py\", line 439, in send resp = conn.urlopen( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py\", line 696, in urlopen self._prepare_proxy(conn) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py\", line 964, in _prepare_proxy conn.connect() File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py\", line 359, in connect conn = self._connect_tls_proxy(hostname, conn) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\connection.p return ssl_wrap_socket( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssl_.py\", line 432, in ssl_wrap_socket ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssl_.py\", line 474, in _ssl_wrap_socket_impl return ssl_context.wrap_socket(sock) File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\ssl.py\", line 500, in wrap_socket return self.sslsocket_class._create( File \"c:\\users\\11905\\appdata\\local\\programs\\python\\python39\\lib\\ssl.py\", line 997, in _create raise ValueError(\"check_hostname requires server_hostname\")ValueError: check_hostname requires server_hostname ¶解决办法 把代理关了","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"奇风岁月/罗伯特·麦卡蒙","date":"2022-10-31T09:15:36.000Z","path":"2022/10/31/随笔摘抄-奇风岁月/","text":"669722601360ff34ff111c0a0d0b6d27142d71c86f2a69f744b607849f3228b0b35f00739a3833aaeb38640b7c6aab92fbb09e3b5d5829d5376acd79cca0ada120c0d93921f91606caa7d67d3dcdb31b75d7958cb588a5271219717c78158ede32ff3616bedaa2d2074899ac490407ad955ae3f89b233eaf91987b9e85108f1d4a3156ddacfe569e7e5442612be24d8dc39a9c7208391d3c4195f749606c1b25ef5c25b24fc5a5929a9c636b5fb92e78b61fc764319200fbd8f24bd80f15269347a55073094d8ca6c68613e4b54b1ef3674124e1dd077274024d5c08968567bcbe7d80ed89b741544941188ba7a8bd013926c98139186fcc6f8203e2b66203f181bd2af6f43ad0ca4ea8db538137ad6d60e009dae0311eec92270e98fc43f6114bab203b3611ee141003ab774812886b5d3446621bc016bc9eaf3669c171d16070ebc303ebbe265395704a794c95ed6443f4f764c20ef8cbcf4ac4020a69eb755476121f95c0d92564fe22b46afb5fe4596c76be41428853dad4b63a263b0e8ed69103bf17bd8f5fc870439adc2935ca5248b04f84eb6d3a9cde45db2fb33b1774e68fe625414f145ceb1d8324af82ff5c822c925c4d1ce2aa3ea63723cb532ea576f82be534c749e9745d432e4c7086a6a48360cafe53076e6dd212701e2ea7b79d7dd77f396b8ef112516722184bbd3eb0e2fcfabfc36d83d691211b3a8f6c9dcad5700af1a6d25deffd976b63a7d1ab3e256dfac7b3c63e7565d687e510e08becf015d885e0e5986cb1a10f6121ae80683bfa8b9f2d77faab0c7e6cfe8e3b02278aeafb4a90bc61bc6cee9fcb84aaaa575eb072d1484c1a32ddbec8697a03e301ad0384bed36dcf047344472c88af0b91a909766a41ffd3aa57be5af8278ad5bf33f3fe21b218ca0e080721d3eb013d962a0bdce724c96989ec83f7151a284e4394df2549724b56f8d4c9bd0c929a152df920643b997f2cf334d8ce2676c538e0944e3b7e132d865f2f030a68f9ecda60de6687dc70d5758d3135122122510bdec727a25be126881a8ec7241a1c37935bbdea23137ad3b87e4fbd9f50283f1b71a74c6129f62d39ccfdcfee3f881204898da611382748f3c4faeeb8fc556cec55e1e0ebd2de35a871305b61befbd67f05ce385e5a375c9569f38d5f76a6e549f043a85101e6f7e00e9649d375174ca8730c23008ed51f9af200dfcefddf2f09f5b92938a55e52699f4578eec1875d29f5d066a86cc3feab9c5f5037227b2361a6c334fc875fbb7cc9e0932653a9c31aa2f47a377ecd724ed57edcd7eba5078fa04a69c4c84119445db65c14086fb94d1a536670effe0cd652eecedca36972b7e7ad3f1c9b33e4092ad5ce526c64fdafd500ee8889dbb0fde880aeb8a6bedb74b79fb2d41a49dfd81b91140d9381c086d11413b760972e224fd7e8cb3e7d2e8c7ab543deca7c1f80487ac7eeb1de67509bce67ef062b9510db290c0ebcf20763cc273189b9c7b7aa5a7b495332d1a167244f71fb62974118c00247cf9080543d829adc57e607d14d8f3d4b17259fdd2cb1fe12073be7c80bf7ecc99ded44d90c220a1979ec40c75f19be4260481fb70a6493e8857c178d1802c579dfccd9229a5d109ca04fb114bafd58fa81c365bdf6843a9a4bb813903dac036cb7dcd5880f2ee0c51015b973dc1eaf1c59c8e036e630c6696f9942c5310fe322da8ef838cc31aed037bb6532b11cd89d1ecb9db87d980c1ed30b0fc37511ee15dbebd25d9b7c41e899ab6fecd953cdb8ca465f9220ac1e71192656b34fac98ba0e5723507f0179c85bf48ba3b1436a441a4b5041f51f8438168ecc52ba88b36bb87197552f946f67a6464439eab02363c13e602982e9ba610e9dcb18e27201f886652378242566449217af6c5d822c85d8c0789b08fa47caabff79ba38fc4f1f5411abfebed1617fd26221b1db3b6f84bb3dbfad24e6bb985e75402082eb3fd05ffc62cbe18cd9a3cdb6437aca0456ef5119ccc36ed442de63f0b0f62d7f220745a586edcd927dc85d37960289444fd93b1763255981329d5cc0b094f25a9324a12ca849659deec155544eb52a399d3b8ec3d424348732cf786b8cf3ea85934687af3b9331248b0caea2c0f7d90b10eef7e8ee006a1d8977f88538a51cb804883a5bc49e0005cb7f1dc42dec88ed5d0ceb7ac44282c87cdf0bb74b51ef49065afde787cc37f54a96bb9651dc6d77237e2a8bfee775619726df990063f80dc8daa35336d25ddbf6d23cd7b87619026ec9a9463c1dec2394fcffb89f77ef0d09ff50e08ec6b447415b610a2ca9808daf587a4611a31172b56ffad64c48f9fc6814afc57bbe8f1e5a12afc66782c5fb1206a4af073d3b5b9fcdbf668fab43fd971d9dddd8fe8b825de556424d5f757a97494a2c38078bb336d9ab77cf7bb77464003119f8e5a0323b1bb796faae46fde58373a904591d9b219ffe48a6840d16760341e90b08b10e55d1b319bcd4c08ded80812578e4f7a8eab779405de7b2b0a9454fbb8f083b15fbfbce9c507d368bd2e8b70f97e6eadcec554a79d27f000174a0aced9123f675b9c18cfcf66983948900cdb2e21d3ba7a1590475ef23668508025d32743ea63f995955365fe59cfc6c1fc6ff5cd71be7c20bd8a47b904e9b659b85c108be4b4e600790419df42d5c39ed53295d81ef1510fb904ba71678af5e3791dc595f2124fc1cf12a64fef3d92314dfb53dfe428f3fe8e007043cb7905ef10ad7294109753fb68a274d989ef1081bd6061d0ee821efab4a85b71548ec0ca916675b0a5830f1e7422851cd69e0227e2090a6431a0071e7e525843a88a53f8c0fb8f097a389742fec2c315a84e4ad111a1ba08259a17fe97b3a4def04d700f78acb879df183ef8c1b5225775a6daaf1306982c3fdb42774b28244d38778205de713a0f5908169825c791b6b6ab87886237922cd19c04587cd36f50d589a1115cb1c0cf4290f08e8c83f4228e4a67fcf37500433d8536be146ca9455859637a1f271f4c09cda0091890c50d08a664e9075e5a077c577bd8e7abd345ae6edf9bedeab18f52d341675f2e01bf5a633a784bd38a0542b4934eeff5c42f2d14c32977011cfd77d4ce0215551a63fbe350d0a865305525c37011132250ec996ebe9417e025e62dca42b202a04cf590e2b3a69fcf9d66531d6122d840f07940ad2f3c0af9f508d3595fc08a512324598717721de4efb7e185322476b09432089fb2801d3bd39d8c1a5f793f91de782be78fb7b394ee5ccbb35607763e08f5851d90d15fbd6e751d74c09feb4bae2c50cbc6fd5842e88fd7c462da8904350cd40c0e34260ace38373f16d099509f9100624e3c4aff3c75edca8d4fe58101ce55187b599120bdadbd423c2cbb894f8562ee3e051aceaf765e956bba83f713ed47873ec211891c031921259e90011dc62ea833dcb737ce7cfe2ef43d80a2392e80d1aaf8746a165da7e1cce79316c587c509c1bb7e1b36b6c8c333d73b332727d908e79c9b7954bae64a869e0ed18524b1998479829b70dd97eeaefcfb039b0d9bff8cfce41db0e1bab6bc136ea8f592f04e2bfd6dddfa1890b91ba757b46a40073ce203b412ae87eb193b7330cd959803da375d898e860343e9a313aa52dc41cfdd030c298c09376ada9e67606c5f35844ebb58a2a0c565f341ed1e765227d1a6d11ec9202ac6f279fe51212182d4d787e1580f67cee2c8b53df8669d5b0b9c07d2e40ca144733bb9ba920e786c20868b646c948194e6a900eb74e46ca365b6531b848cb5f780dd3908241e377e329f3730baaba25bd3c9ebcb61ad125a70fea3f179dcabeda40b4051912b9e5acce41165c4f2fee35788514fd5e6730a34d1d778520748c8c5e2009cfb49f3267e4c7cecd06d4391ff7177bcccaffae5b5b3d645ba22f6727b597fc387bea80fb37923c77b8d7e76f1b4b4a5d44b1a96662ed5ab20c06a9f060365c4cad816926b3bf9f33eb7dcf00377159853394e8eabdd1eb6be4bf17ade010c7374eef972a5c5d12594ccc491aaa78e5c8853bab7596b8ffa770a102ec45c1526f081465608e32deeecdb784b96e117397c935d54078d524f4b76d10cd2c1fdfd4aa92a334e7852625e8216a9a1c68c0db0101e268e86a236820c34ee6f087587e7b8afc5b3a8642e3d9284bccf93c396b48bc301e76dc0128e8cab3743e4552bc3310322be851d2392f9a432407c6bd8b4911c6d86fa02508ea3c5f9204b1e1fdfba1673ada2a7a9ef04e6fb66c0bb76778eb3caf00761c72f6bffeccba2921b35fed5884777d44316ff954f5daa3b13c5f67f5dd34ec322c34728b59ca83 您好, 这里需要密码.","categories":[{"name":"Dilettantism","slug":"Dilettantism","permalink":"http://example.com/categories/Dilettantism/"},{"name":"文学","slug":"Dilettantism/文学","permalink":"http://example.com/categories/Dilettantism/%E6%96%87%E5%AD%A6/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"2022 年随笔摘抄","date":"2022-10-31T09:02:16.000Z","path":"2022/10/31/随笔摘抄2022/","text":" 您好, 这里需要密码.","categories":[{"name":"Dilettantism","slug":"Dilettantism","permalink":"http://example.com/categories/Dilettantism/"},{"name":"文学","slug":"Dilettantism/文学","permalink":"http://example.com/categories/Dilettantism/%E6%96%87%E5%AD%A6/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"设计美学笔记","date":"2022-09-24T00:24:38.000Z","path":"2022/09/24/设计美学笔记/","text":"669722601360ff34ff111c0a0d0b6d2713e2e9950f4a7fc984232af871eb4db94e2bedb77fe57f2c2489562fad74c13b02327ae039101313924176851996d0b0570ff33b90fc739eaa49f6c7d5f28e448c628adcdaff8af8e243ebb3b604f142d5cd87c21e2621dfd758588b15f77e30ff62587e156ecb63b4aa0eb769c997eb3d18b80d1a70a09a25d5db8b36eeaa40d6609ab8845e4d89b7b3c7e7a3e640bff088b2639765c3a5b6628413f55bfc3460898c1833861e3c2b76d5804f56e0993c1e58cf772c4a226a37061b9e79e200718d2611bc0032006d1bdd70c7ddae68a8314c6ad800c23e7f66e0e33ff4b5073ab80b8bf40ac6a0d1becb009de4e132c5585dd582f5ad35c08473d13011a7abc50cb36f99a1d9f887340bcedce79fa2cf7ce766262c431d19d63999bfa5cd5ae176a53b14f43bd58d898c81e54d74b37d3cbdf7509071f18d4417fc4e1e47b7defa4d0dee1639a8e4885216f53fbbc402b41ac08cd7f01d23d5977ab5332527a7491c3e1dcfa0335fe76b240fa9d1b47718fd813e39588a2b7ee54881010fd3726b7a0240cd921495f6f6cbe6c41619ba74ecc21df04d47462722e90bb3bae4e529ade3da268b3ffe33199254386522e8d1e75bbe7b98730fa113f0e11ff4d05b9886a9778cb467de42586968ae03a6b5bc39eb822d360ec0e12a5a77e5db66c2b4fb6dcc7ca3bf0768d674274ea548126a209b0e180df5d9ac17257d11fe0271d8c060a261213600daf1bfca9c0a9a61ab6f3cbd5c041ddc35879478989e2e7467054c7dc3ae78fa6889729fffd211b89b40394cbf0fe094ca9ddb6e7c5f5be26b9f4858e1dd4e1a33795b31e1802e54106d286c4b839cd5672f9a5ef59a0ad085c44f56f19ccaec4b707850e045ce439ca0fff4292215395dc113bfb13175baf2877afc6ca224ed7e220f2cce4bad 您好, 这里需要密码.","categories":[{"name":"Dilettantism","slug":"Dilettantism","permalink":"http://example.com/categories/Dilettantism/"},{"name":"艺术","slug":"Dilettantism/艺术","permalink":"http://example.com/categories/Dilettantism/%E8%89%BA%E6%9C%AF/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Windows 下 FRP 内网穿透计划","date":"2022-09-23T09:28:06.000Z","path":"2022/09/23/Windows-下-FPR-内网穿透计划/","text":"¶为什么使用 FRP 实验室里规定 21: 25 就可以走了, 但是我是自愿加班的, 操场 23:00 关闭, 但是人要 12 点睡, 就意味着还有一个小时左右的时间, 但是操场离寝室近离实验室远, 冬天又太冷了… 所以一般就直接回宿舍了. (其实就是懒狗想要早点下班) 实验室有自己的局域网, 寝室里的电脑连的是校园网, 这个时候 Windows 自带的远程桌面就派不上用场了. 但是有时候坐在寝室里突然间灵光一闪要用实验室的电脑, 这个时候要是碰不到电脑的话, 这个偶然涌出的想法可能就要消失了! 所以能够让我随时随地用到实验室的电脑是一件必须的事情, 于是开始网上冲浪, 找出在寝室访问实验室电脑的方法. ¶FRP 原理 附上: FPR文档 frp 主要由 客户端(frpc) 和 服务端(frps) 组成，服务端通常部署在具有公网 IP 的机器上，客户端通常部署在需要穿透的内网服务所在的机器上。 内网服务由于没有公网 IP，不能被非局域网内的其他用户访问。 用户通过访问服务端的 frps，由 frp 负责根据请求的端口或其他信息将请求路由到对应的内网机器，从而实现通信。 ¶云服务器 云服务器的作用, 分享链接: 买了一台云服务器到底能干什么？ - Logic的回答 - 知乎 在这条回答下有人评论: 如果只是为了远程，Sakura frp足够了，保险可以加个花生棒。免费 这里已经为了 FRP 看了很多资料了, 决定死磕 FRP , 有时间再去了解 Sakura Frp. 附上 Sakura Frp 的链接: https://www.natfrp.com/ ¶如何知道自己的电脑是什么框架 ¶Windows 在命令行中输入 echO %PROCESSOR_ARCHITECTURE% 输出如下值之一: x86, AMD64, ARM64 ¶Linux 在命令行中输入 uname -m, 直接显示Linux 系统架构 我的虚拟机为 x86_64 架构. 更多方法可查阅博客: Linux 要如何查看系统架构 ¶如何判断自己的电脑是否有公网 ip 通过这个网站, ip 地址查询网站: https://www.ip138.com/ 打开命令行, 输入指令 tracert + 搜到的ip地址 1tracert 111.40.58.238 追踪公网IP，通过网站得到的公网 IP是 111.40.58.238, 而实际上我的 ip 地址是 192.168.1.118 (192.168.1.1 是路由). 第一行为节跃点数, 所以中间肯定有其它的节点也就是路由，只要跃点超过一个就说明电脑就没有获得公网IP。这里, 显然我的电脑没有公网 ip. 假如是家庭宽带可以打电话向运营商的人工客服要, 直接说装监控需要分配公网IP. 但我这里是学校 WiFi, 这一条路是走不通的. 参考: 作者: 云爻斋-出处：bilibili ¶准备工作 ¶设备 移动机器: 不需要下载任何软件 实验室机器(客户端frpc): 系统: Windows 10 专业版 云服务器(服务端frps): 具有公网 IP 的中转服务器, 两个内网机械是无法相连的, 公网服务器的作用是中转. 客户端先连接中转服务器, 经由中转服务器与内网服务器相连, 起到内网穿透的效果. 参考教程: windows下基于frp的内网穿透部署 - 进化的monkey的文章 - 知乎 内网穿透 frp 配置 - Yuqi’s blog ¶购买云服务器 这里参考其他博主, 选择了阿里云 ECS . 附购买指南链接: 阿里云开发者社区 - 阿里云学生机购买指南(用途和优势)(阿里云学生机购买指南(用途和优势) **飞天加速计划计划(原云翼计划)是阿里云校园扶持计划，24岁以下或拥有学信网认证信息即可享优惠产品、创业扶持等多项权益哦！包括：专属云服务器产品优惠、校园产品使用攻略等。 平均一个月9.5元，一天只需要0.3元。一年只需114元。 步骤 注册阿里云账号, 阿里云: https://www.aliyun.com/?spm=5176.authc-home.top-nav.dlogo.63834babxeYHR1 进行学生认证,建议使用支付宝认证, 不需要等待, 两分钟搞定! nice ! 阿里云学生机官网地址：https://promotion.aliyun.com/ntms/act/campus2018.html. 尝试使用阿里云 RCS 云服务器, 新手指引-实例-云服务器ECS-阿里云: https://help.aliyun.com/document_detail/25422.html 选型最佳实践: https://help.aliyun.com/document_detail/58291.html?spm=a2c4g.11186623.0.0.1d46637fqT7uVC 现在选择了 ECS 的学生免费领取活动, 做一个实验, 再答一套题就可以领取. 在选择操作系统的时候, 会发现下拉表单中的操作系统没有一个符合 Windows 10 专业版. 这里要说 Windows server 操作系统. Windows Server是Microsoft专门创建用于服务器的一系列操作系统。服务器是功能非常强大的计算机，旨在持续运行并为其他计算机提供资源。这意味着在几乎所有情况下，Windows Server仅在业务设置中使用。Server主要面向服务器，是一个服务器操作系统. Windows的消费者版本面向个人用户. 参考资料:windows server和windows的区别 - 国家一级保护废物的文章 - 知乎 搭配 ECS 后控制台里会出现一个实例 参考链接:CSDN - 1.学生版阿里云简单配置和win7、win10专业版及win10家庭版的远程桌面的配置详解: https://blog.csdn.net/qq_41903105/article/details/85224145 Windows 系统选择了‘2016 数据中心版…’可行 重置密码 登录名: administrator 密码设置为: Lyh#2022 这里会给手机发一个验证码 改完之后重启实例 阿里云提供的示例中的一些基本信息 因为刚开始不懂, 以为云主机的操作系统要和电脑操作系统一致, 现在知道完全是我多虑了… 暂时用 Windows 系统, 再换用 Linux 系统. (都云服务器了, 当然首选 Linux 啊! ) ¶连接云服务器 使用阿里云提供的远程连接方式. workbench 远程连接: 通过网页可以对ECS实例进行远程控制，支持复制粘贴文本，支持多操作系统用户登录同一台实例。 VNC远程连接: VNC远程连接是一种使用RFB协议的屏幕画面分享及远程操作工具，不需要单独为实例设置网络规则即可使用，但其连接质量较差，仅推荐作为临时连接方案使用。 发送命令（云助手）: 发送远程命令可以帮助您在实例内部快速执行命令，即无需远程连接登录实例，即可完成查看硬盘空间、安装软件、启动停止服务等操作。 使用workbench 远程连接方式: 选择密码认证, 输入密码即可. (更换系统为 Linux 系统) 选用 Alibaba Cloud Linux 3.2104 LTS 64 位. 登录上去为一个控制台 输入指令 ls- l 返回 total 0 信息, 刚登录是没有文件的. 在命令行中输入 ssh 用户名@@xxx.xx.xx.xx, 此处xxx.xx.xx.xx 为 云产品资源 提供的 弹性IP）下面的两张图上边的是阿里云提供的实例中的图, 下面的是我免费领取的 ecs 实例的图. 好像是按量计费的产品才有弹性公网 IP, 包年包月的就没有. 1ssh root@101.133.151.69 //阿里云示例 手动输入 yes 输入密码, 提示:输入密码时界面是没有反应的，输入完毕直接回车即可，不要误以为出问题了。 成功之后应该是这样的: 参考教程: 【bilibili: 阿里云-云服务器ECS20-连接云主机】 使用心得: 学生机注册使用体验有点差, 用开始支付宝认证还挺方便的, 后来还要在手机上下载阿里云app和人脸识别验证这一点我不是很喜欢, 个人不喜欢在手机和电脑上安装软件, 也不喜欢给一个新的 app 身份验证. 目前两台电脑已经不在同一个局域网下, 在远程桌面下输入阿里云提供的公网 ip , 可以找到我的Windows账户. 现在仍然有问题, 当我像往常一样输入我的 Windows 密码时提示我: 之前用于连接到 xxx.xxx.xxx.xxx 的凭证无法工作, 请输入新凭证. ¶下载 下载地址: https://github.com/fatedier/frp/releases 根据服务器、内网主机的系统框架，分别下载 frp. 客户端选择的是第一个“frp_0.44.0_darwin_amd64.tar.gz” 版本 服务器端为 x86_64 架构, 选择 “frp_0.44.0_linux_386.tar.gz” 版本 ¶服务器端 使用 url 指令安装 12curl -# -LJOhttps://github.com/fatedier/frp/releases/download/v0.44.0/frp_0.44.0_linux_386.tar.gz 没有 curl也可以使用 wget 安装 1wgethttps://github.com/fatedier/frp/releases/download/v0.44.0/frp_0.44.0_linux_386.tar.gz 以上两种方法我均失败了(…) 成功方法: 使用 SSH 传输. 先在本地下载好需要的安装包, 复制路径, 然后再到相应路径下去上传(这里我没有注意到 cmd 默认在用户目录下开始, 而我的压缩包并不在 users 下面), 先一路 cd 出来, 然后输入命令: 1234scp /本地文件路径/test.txt root@123.123.123.123:/服务器文件路径/// 我的相应命令C:\\&gt;scp /Document\\GoogleDocuments\\frp_0.44.0_linux_386.tar.gz root@39.101.75.147:/work/frp/// 表示将该 frp 文件上传到 Linux 机器的 /work/frp/ 文件夹里 这样就成功了! 然后到云服务器这里查看, 注意: 云服务器中的默认路径并不是根目录, 用 pwd 指令查看当前路径, 发现在 /root 中 再一路 cd 出去, 可以看到上传上去的 frp 压缩包文件了. 用 tar -zxvf 指令解压 用 vim frp.ini 编辑 frp.ini 文件 用 :wq 退出编辑 输入 ./frps -c frps.ini 启动服务器端, 收到如下信息则成功 1232022/10/02 19:33:21 [I] [root.go:209] frps uses config file: frps.ini2022/10/02 19:33:21 [I] [service.go:194] frps tcp listen on 0.0.0.0:70002022/10/02 19:33:21 [I] [root.go:218] frps started successfully 教程: 内网穿透FRP详细教程 Linux上传下载文件的几种方式 - 新睿云服务器的文章 - 知乎 教你 2 种从 Linux 终端下载文件的方法 阿里云开发者社区 - Linux服务器怎样上传下载文件 从Linux服务器下载文件到本地or上传文件到Linux服务器的方法 csdn - linux 新建文件夹命令 ¶客户端 直接在 GitHub 下载 ADM64 架构的文件即可. ¶配置步骤 下载下来的 fpr 其实就是个文件夹, 里面的文件如下所示: 注意：服务器端使用的版本和内网主机使用的要一致，不然容易出问题 ¶服务器端 frps 这里只需要修改 “frps.ini” 文件即可. 在具有公网 IP 的机器上部署 frps，修改 frps.ini 文件，这里使用了最简化的配置，设置了 frp 服务器用户接收客户端连接的端口： 1234567[common]bind_port = 7000 # frp服务的端口号，可以自己定dashboard_port = 7500 # frp的web界面的端口号dashboard_user = user # web界面的登陆账户，自己修改dashboard_pwd = pass # web界面的登陆密码，自己修改authentication_method = tokentoken = Lyh@2022 # frp客户端连接时的密码，自己修改 注意: 实际使用要把注释删掉 ¶客户端 ¶10.2 现场保护 Alliot’s blog-群晖入门到进阶系列（二）：DDNS与端口转发 csdn-借助ecs的公网ip将自己家里的Windows做个内外穿透【外网可以访问的】–frp【远程连接Windows电脑】 买了一台云服务器到底能干什么？ - Logic的回答 - 知乎 windows下基于frp的内网穿透部署 - 进化的monkey的文章 - 知乎 腾讯云开发者社区-frp配置内网穿透教程（超详细） csdn-跨局域网远程连接神器——frp内网穿透 超详细frp配置实现绕过防火墙内网渗透 dial tcp IP:PORT: i/o timeout #2905 【阿里云服务器ECS建站教程全套（适合0基础初学者），小白轻松拥有个人网站！| 保姆级教程 使用frp进行内网穿透入门 Windows命令窗口输入命令报错不是内部或外部命令，也不是可运行的程序 或批处理文件 内网穿透FRP详细教程 跨局域网远程连接神器——frp内网穿透 frp内网穿透实现文件共享祥细教程 frp文档-通过 SSH 访问内网机器 博客园-局域网两个不同网段互相访问","categories":[{"name":"高效工作","slug":"高效工作","permalink":"http://example.com/categories/%E9%AB%98%E6%95%88%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"work","slug":"work","permalink":"http://example.com/tags/work/"},{"name":"Frp","slug":"Frp","permalink":"http://example.com/tags/Frp/"},{"name":"云服务器","slug":"云服务器","permalink":"http://example.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"嵌入式原理及应用(05)-MCS51指令系统的寻址方式","date":"2022-09-15T02:39:00.000Z","path":"2022/09/15/嵌入式原理及应用-05-MCS51指令系统的寻址方式/","text":"寻址方式是指寻找、确定参与操作的数据的地址的方式，一般来说, 寻址方式越多, 单片机的功能就越强, 灵活性就越大, 指令系统就越复杂. 寻址方式所要解决的主要问题就是如何在整个存储器和寄存器的寻址空间内, 灵活方便、快速的找到指定的操作数。 ¶寄存器寻址 可用于访问选定寄存器区的8个工作寄存器R0~R7、A、B、DPTR、Cy等。 1MOV A,R1 ¶直接寻址方式 指令中的第二操作数为立即数。51指令中的立即数应冠以前缀’#'，且若立即数的首位为A~F，前面还要加零。 12MOV A,#40Hmov A,#0A5H ¶直接寻址 指令中直接给出操作数所在的单元地址, 该单元地址中的内容就是操作数, 直接操作数单元地址用 ‘direct’ 表示. 直接寻址方式是对片内所有特殊功能寄存器访问的唯一方式. 12MOV A, #40H; 将内部 RAM 40H 单元的内容送到 AMOV 42H, 62H; 将内部 RAM 62H 单元内容转给 42H 单元中 访问 SFR 可用: 寄存器寻址 直接寻址 ¶寄存器间接寻址 在寄存器中存放的是操作数的地址, 从寄存器中找到操作数的地址, 再按照该地址找到操作数. 用于访问内部RAM和外部数据区，包括52系列单片机的高128字节RAM，只有R0,R1可以作为间址寄存器。 在寄存器间接寻址方式中应在寄存器前加 ‘@’ 12345MOV R0,#40H; 访问低128字节RAMMOV A,@R0; 先从R0中找到源操作数所在地址 40H 然后把 40H 中的内容传给 AMOV R0,#90H; 访问高128字节RAMMOV A,@R0 ¶基址寄存器加变址寄存器间接寻址 基址寄存器加变址寄存器间接寻址以 DPTR 或者 PC 作为基址寄存器, 以累加器 A 作为变址寄存器, 并以两者内容相加形成新的16位地作为目的地址进行寻址. 12345MOVC A, @A+DPTR; DPTR: 数据指针MOVC A, @A+PC; PC: 程序指针;上两条适用于读程序存储器中的固定数据, 例如按照固定的, 一定顺序排列的表格参数JMP @A+DPTR; 散转指令, A 中的内容为程序运行后的动态结果, 可根据 A 的内容不同来实现向不同程序入口的跳转. DPTR 是 16 位寄存器, 只有 DPRT 可以传入 16 位数, 常用于存储地址位 MCS-51 地址位为 16 位的原因: 有 16 根地址总线 ¶位寻址方式 内部 RAM 和特殊功能寄存器中的可寻址位 位寻址是指对内部 RAM 和特殊功能寄存器具有位寻址功能的某位内容进行置 1 和清 0 操作. 位地址一般以直接的位地址给出, 符号为 ‘bit’. 12MOV C, bitMOV C, 40H; 把位地址为 40H 的位值 0 或 1 送给进位位 C. ¶相对寻址方式 相对寻址方式是为了解决程序跳转而专门设置的, 为转移指令所用. 程序跳转到目的地址: 目的地址 = 跳转指令所在地址(PC值) + 转移字节数(跳转指令下一条指令的首地址) + 偏移量 rel 相对偏移 rel 是单字节的带符号的 8 位二进制数的补码数. 它所能表示的数字范围是 -128 ~ + 127. 在实际编写程序时, 只需要在转移指令中直接写上要转向的地址标号即可 12345SJMP rel; 跳转指令的 PC 值加 2 (因为 SJMP rel 指令占用两个字节数) ; 再加上相对偏移量 rel 后的目的地址, 其中 rel 为 8 位带符号的补码.SJMP LOOP; 直接写上转移标号","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"嵌入式原理及应用(04)-MCS51的指令系统","date":"2022-09-15T02:38:10.000Z","path":"2022/09/15/嵌入式原理及应用-04-MCS51的指令系统/","text":"¶概述 51共有指令111条 字节 单字节指令49条 双字节指令45条 三字节指令17条 执行周期 单机器周期指令64条 双机器周期指令45条 4 机器周期指令 2 条 ¶汇编指令的基本结构 1Loop1: mov a, #0ffh; 累计器A赋值为ff LOOP1: mov a , #0ffh; 累计器A赋值为ff [标号]: 操作码助记符 [第1操作数] , [第2操作数]; 注释 [标号] ：表示该指令所在的符号地址，一般由字母和数字组成，第一位为字母，其余位为字母、数字任选。 操作码助记符 、[第1操作数] 和 [第2操作数]：指令的核心部分。对于某些指令可能不存在完整的两个操作数。 注释：是由用户加入的文本，对汇编程序不起任何作用，只是方便阅读。 第1操作数又称目的操作数，第2操作数又称源操作数 汇编语言可以直接对硬件进行操作, 效率高于高级语言 汇编语言不区分大小写 汇编语言用分号 ‘;’ 进行注释 CPU只能执行机器语言（由8位二进制代码组成，分为1字节、2字节、3字节）。所有的汇编程序都要先转化为机械码 123RET &lt;=&gt;22HMOV A,#0fh &lt;=&gt;74H 0FHMOV 74H,#0BH &lt;=&gt;75H 74H 0BH [此处插入一个关于指令和对应功能机械码的表格, 课本p62表3-2] 参考文献: Microsoft Word - 新1-3.doc(模块三 80C51 的指令系统和程序设计) ¶数据传送类 指令介绍中符号的说明： Rn：当前工作寄存器区中R0~R7 Ri：当前工作寄存器区中的R0,R1 Direct：直接地址 #data：指令中的常数（8位或16位） Dptr：数据指针 @：间接寻址前缀 (X) ：x中的内容（20h） ((x))：在间接寻址中，由间址寄存器寻址的单元中的内容 ((R0))，若R0=20H，则((R0))表示（20H） ¶MOV 1234567Mov a, Rn; 以累加器为目的Mov Rn, #0A0h; 以Rn为目的操作数Mov 40H, @Ri；以直接地址为目的操作数Mov @Ri, #0B0h；以寄存器间接地址为目的操作数Mov dptr, #2000h; 把 16 位立即数送入 DPTR , 用来设置外部存储器的地址指针MOV Rn, direct; 将源操作数中的内容送入到当前工作寄存器 R0 ~ R7 中的某一个寄存器 所有 MOV 类指令, 累加器 A 是一个非常重要的 8 位寄存器, CPU 对它具有其他存储器所没有的操作指令 ¶MOVX /访问外部数据存储器 A与外部数据存储器传送 1234Movx a,@dptrMovx a,@RiMovx @dptr,aMovx @Ri,a ¶MOVC /访问外部程序存储器 MOVC 用于访问外部程序存储器 表格存放在外部程序存储器中 12; 查表指令Movc a,@a+pc（单字节） 若程序中这指令所在的地址为1000h，这是一条单字节指令。CPU执行此条指令时，pc=1001, 假定此时a=30h。那么，程序的执行结果，是将程序存储器1031H中内容，读入a中。 这条指令的优点是不改变特殊功能寄存器及 PC 的状态, 根据 A 中的内容就可以取出表格中的常数, 缺点是表格只能存放在该查表指令所在地址的 +256 个单元内 只能访问该指令后面256单元 1234567891011121314; 例: 求 0~9 的平方 ORG 0000H LJMP A1 ORG 0080HA1: NOP NOP MOV SP,#60H MOV DPTR,#2000H MOV A,#03H；将0~9之内任意一个数赋值给A。 MOVC A,@A+DPTRA2: SJMP A2 ORG 2000H DB 00h,01h,04h,09h,10h,19h,24h,31h,40h,51h END 执行 MOVC 指令时, 伴随单片机的 引脚信号同时有效 ¶push / pop 12345(sp)=60h,(a)=30h,(b)=70hPush a ;(sp)+1=61h=&gt;sp (a)=&gt;61hPush b ; (sp)+1=62h=&gt;sp (b)=&gt;62hPop b ; (sp)=&gt;b (sp)-1=&gt;sp =61hPop a ; (sp)=&gt;a (sp)-1=&gt;sp =60h PUSH: 先 +1 , 后入栈 POP: 先出栈, 后 -1 ¶XCH /字节交换指令 将累加器内容与源操作数内容相互交换 12345Xch a,RnXch a,40h（直接地址）Xch a,@RiXch a,R7; 若a=55h;R7=66h，指令执行结果a=66h,R7=55h ¶XCHD /半字节交换 累加器 A 的低四位与内部 RAM 低四位交换. 只变低四位, 高四位不变. 123Xchd a,@R0; 若a=59h,R0=60h,(60h)=3eh,执行结果a=5eh,(60h)=39h; 59H = 0101 1001, (60H) = 3EH = 0011 1110 Data 6, Data 7 同时有进位或同时没有进位, OV = 0 ¶算数操作类 ¶ADD /加法指令 共有 4 条加法指令 1234ADD A, RnADD A, directADD A, @RiADD A, #data 如果位7有进位输出，则置“1”Cy位，否则清零； 如果位3有进位输出，则置“1”Ac位，否则清零； 如果位6有进位而位7没有进位，或者位7有进位而位6没有，则置位溢出标志位OV置\"1\"；否则对溢出标志位清零。(6 和 7 同时有进位或者都没有进位时 OV = 0) 溢出标志位 OV 的状态, 只有在进行带符号数的加法运算时才有意义 例: 53H + FCH, (A) = 4FH, Cy = 1, Ac = 0, OV = 0, P = 1 85H + AFH, (A) = 34H, Cy = 1, Ac = 1, OV = 1, P = 1 ¶ADDC /带进位加法指令 通常将进位标识符 Cy 简称为 C, ADDC 则意为带上进位标志位的加法指令. 带进位标志位加法指令的特点是 Cy 参加运算, 是三个数相加 共有 4 条加法指令 1234ADDC A, RnADDC A, directADDC A, @RiADDC A, #data 例: (A) = 85H, (20H) = FFH, Cy = 1 12ADDC A, 20H; (A) = 85H, Cy = 1, Ac = 1, OV = 0, P = 1 ¶INC /加一指令","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"单片机的硬件结构","date":"2022-09-14T08:15:04.000Z","path":"2022/09/14/单片机的硬件结构/","text":"¶冯·诺依曼结构 参考文献： 知乎-三分钟带你了解冯.诺依曼结构 维基百科-冯·诺伊曼结构 ¶哈佛结构和冯·诺依曼结构的辨析 参考文献：知乎-MCS-51 单片机的硬件结构 ¶算数逻辑运算单元 ALU 参考文献: 维基百科-算术逻辑单元 ¶51单片机中的342个特殊功能寄存器","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[]},{"title":"中学数学-03组合数公式","date":"2022-09-08T10:39:46.000Z","path":"2022/09/08/中学数学-03组合数公式/","text":"¶组合数公式性质: prove: 综上:","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"中学数学","slug":"Math/中学数学","permalink":"http://example.com/categories/Math/%E4%B8%AD%E5%AD%A6%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"中学数学-02前n项相加","date":"2022-09-06T10:51:14.000Z","path":"2022/09/06/中学数学-02前n项相加/","text":"¶前 n 项相加 令: 倒序排列则为: 相加得: 故: ¶前 n 项的平方相加 ¶利用立方 已知: , 写出递推规律: 累加, 得: 故: 综上: ¶用递推关系求解 设数列 设 的一阶差数列为: 设 的二阶差数列为: 设 的三阶差数列为: 可设: 已知: 代入到上式中解出待定系数为: 故: 综上: ¶利用图形的方法求解 有三种表示方式: 综上: ¶扩展: 求前 n 项立方和 与 ‘利用立方求平方和的方法类似’ 同理可得: ¶扩展: 奇数项平方和公式 由上述平方和公式可得偶数项平方和公式为: 为偶数 所以奇数项平方和公式为: 为奇数 参考文献: 知乎-前n项平方和公式怎么推导？ - miniEthan的回答","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"中学数学","slug":"Math/中学数学","permalink":"http://example.com/categories/Math/%E4%B8%AD%E5%AD%A6%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"中学数学-01解一元三次方程","date":"2022-09-05T13:49:53.000Z","path":"2022/09/05/中学数学-01解一元三次方程/","text":"¶步骤 一元三次方程: ） 先考虑将方程变形成 其中 ，， ； 将二次项消去, 得到: 然后，令 于是上面的方程可以变形成为 整理可得 ， 其中 设实根 ， 将方程两边同时立方，得到 和 就是方程 两个根, 解出一元二次方程即可得到 和 . 注意开立方是在复数域上开立方, 能够得到实根和复根. 由 的值迭代回去得到 的值, 再由 的值即可得到原一元三次方程的三个根. ¶证明 一元三次方程可以采用卡尔丹公式和盛金求根公式来计算。下面用最基础的代数方法来理解卡尔丹公式怎么来的。 一元三次方程 ） 1、为了解最初的方程，可以先考虑将方程变形成 其中 ，， 2、这个形式可以进一步化简。回顾一元二次方程的求根公式，采用配方法，将其变成和的平方的形式然后开方即可得到求根公式，这里最高次是3次，所以考虑配立方。 将 和1中的式子比较发现，可以把 并入和的立方里面。于是1中的方程可以成 然后，令 于是上面的方程可以变形成为 ，其中 整理可得 ， 其中 故而可以得到一个结论，所有的一元三次方程都可以化成上面那样的简单形式，因此只要找到 这个方程的解法，就能够解出所有的一元三次方程了； 3、 的解法 关于这个方程的解法，首先我们知道，三次函数的值域是R，因此这个三次方程一定至少有一个实根。 不妨设这个实根 得到一个新的方程，将这个方程两边同时立方，得到 显然这两个方程可以是同一个方程。比较系数，得到方程组 （ 根据一元二次方程的韦达定理，不难发现A和B就是方程 两个根。 因此不难解出 这样，可以用得到的A和B的值求出: 从而得到原方程的根。 复数域的开根号: 知欧拉公式: , 令: 其中 . 则由欧拉公式，可知 然后用倍角公式求取开根号后的值: 转载原文链接: 如何求一元三次方程 - 龍陽桑的文章 - 知乎 ¶例题 1. 解一元三次方程 将二次项消去, 得到: 原方程等于 令 上式等于: 解得: , 则: 解毕. 2. 解一元三次方程 原方程已没有二次项, 令 将方程式: 与原一元三次方程对比, 得到: 则 解毕.","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"中学数学","slug":"Math/中学数学","permalink":"http://example.com/categories/Math/%E4%B8%AD%E5%AD%A6%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"概率论(99)-一些常用结论的推导","date":"2022-09-04T10:04:05.000Z","path":"2022/09/04/概率论-99一些常用结论的推导/","text":"¶e的-x的平方的积分: ¶二重积分 首先我们知道积分符号不影响积分的值，故： 紧接着转为二重积分： 上式转为极坐标更容易求解： 又因为 ，则 ，故： ¶利用正态分布结论 首先列出正态分布的表达式： 通过观察所求函数和正态分布表达式，我们可以令 ， (标准正态分布)，得到如下表达式： 正态分布在 到 的积分为1，故： 最后得出结论: 推广: 参考: 知乎-求e的-x的平方的积分的两种解法 ¶k的阶乘分之lambda 的k次方相加: ¶利用数列函数 设: 则: 故: 综上: ¶利用泰勒级数展开式 观察该式, 对比函数 对 的泰勒展开式: 故令 : ¶二项式分布的平均值: 设: 书写注意验证: 看上角标和下角标之和是否相等","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"概率论","slug":"Math/概率论","permalink":"http://example.com/categories/Math/%E6%A6%82%E7%8E%87%E8%AE%BA/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"嵌入式原理及应用(03)-MCS-51 的存储器结构","date":"2022-08-29T09:06:30.000Z","path":"2022/08/29/嵌入式原理及应用-03-MCS-51-的存储器结构/","text":"程序存储器地址为 16 位二进制数(4 位 16进制数) 数据存储器的片内地址为 2 位 16 进制数, 片外地址为 4 位 16 进制数. ¶程序存储器 单片机的分为数据存储器和程序存储器。单片机内部的存储器称为片内存储器，片外扩展的存储器成为片外存储器。比如8031内部有数据存储器而没有程序存储器，所以它一般要外接一块程序存储芯片，内部的数据存储器叫做9031的片内存储器，外部扩展的存储芯片叫做片外存储器。 参考: CSDN-单片机的片内存储器 片外存储器的内和外是相对于什么啊？ 片内传送数据用 MOV 片外传送数据用 MOVX 存储器中存放的实际上是由用户程序形成的二进制码（机器码），该存储器必须具有非易失性。 1move A ; 将 A 写入, 要将 A 先转化为机械码 程序存储器中存放程序和表格, 最多外扩64k. 由程序计数器（PC）控制程序的执行，PC中存放的是将要执行的下一条指令的地址，是由单片机内部硬件自动生成的，且自动加一. 单片机的中断源 中断入口地址 外部中断0（INT0） 0003H 定时器0（T0） 000BH 外部中断1（INT1） 0013H 定时器1（T1） 001BH 串行口 0023H 由于外部中断0 的中断服务程序入口地址为 0003H , 为使主程序不与外部中断0 的中断服务程序产生冲突, 一般在 0000H 单元内存放一条跳转指令, 转向主程序的入口地址. 由于程序存储器的起始部分具有特殊意义，在编制程序时主程序中最好有跳转指令，在中断程序中也要有跳转指令。 ¶内部数据存储器 MCS51内部数据存储器（RAM）共有 128 个字节，地址 00H~7FH 。51对内部数据存储器有丰富的操作指令。 ¶特殊功能寄存器（SFR） SFR共 21 个，存在于单片机RAM单元中，地址范围 80H~FFH 。 低 128 字节的 RAM 的单元地址为数据寄存器, 高 128 字节的 RAM 单元地址为特殊功能寄存器区. A是特殊功能寄存器 PC不是特殊功能寄存器 特殊功能寄存器反映了MCS51的状态，实际上是MCS51的状态字及控制字寄存器。51单片机通过写SFR来控制相应功能部件（定时器、串口、中断等）的工作方式，同时SFR也综合的、实际的反映了整个单片机基本系统内部的工作状态。例如，前面提到的PSW程序状态字寄存器，就是一个特殊功能寄存器。 ¶可位寻址的SFR位地址 ¶累加器 A 累加器A是一个最常用的专用的寄存器，大部分单操作数指令的操作数取自累加器，很多双操作数指令的一个操作数取自累加器，加、减、乘、除算术运算指令的运算结果都存放在累加器A或B寄存器中。 ¶寄存器 B 在乘、除指令中，用到B寄存器。不进行算数操作时，可作为一般寄存器使用。 ¶程序状态字寄存器PSW PSW是一个8位寄存器，它包含了程序状态信息。 ¶栈指针SP 栈指针SP是一个8位专用寄存器，它指示出堆栈顶部在内部RAM块中的位置. 51的栈向上生成，栈指针先加1，再存储，且后入先出。 先 +1 再入栈, 先弹出后 -1 系统复位后，SP初始化为 07H ，使得堆栈事实上由08H单元开始，考虑到08H～1FH单元分别属于工作寄存器区1～3，若在程序设计中要用到这些区，则最好把SP值改置为1FH或更大的值。 123456789 MOV 81H, #30H= MOV sp, #30H; 堆栈指针 sp 的位地址为 81H, 这两种表示方式等效 MOV sp, #60H; CPU执行一条A累加器进栈指令 PUSH A; 先 +1 后入栈 PUSH B; 最后 (61H) = A, (62H) = B ... POP B; 现场保护 POP A; 出栈先弹出后 -1 ¶数据指针DPTR 数据指针DPTR是一个16位的SFR，其高位字节寄存器用DPH表示，低位字节寄存器用DPL表示。DPTR既可以作为一个16位寄存器来用，也可以作为两个独立的8位寄存器DPH和DPL来用。 123MOV DPL, #10H ;立即数寻址, 给 DPRT 高八位赋值 11H, 低八位赋值 10HMOV DPH, #11H ;DPTR = 1110HMOVX A, @DPTR;寄存器间接寻址, 把外扩存储器地址为 1110H 里的数传给 A ¶特殊功能寄存器P0~P3 特殊功能寄存器P0～P3分别为I/O端口P0~P3的锁存器。即每一个8位I/O口都为RAM的一个单元（8位） 在MCS51中，I/O口和RAM统一编址，所有访问RAM的指令，都可用来访问I/O口。对于片外数据存储器和扩展的I/O口，也是统一编址的。 I/O 口统一编址: 进行 I/O 扩展时有意义 ¶串行数据缓冲器SBUF 串行数据缓冲器SBUF用于存放欲发或已接收的数据，它在SFR块中只有一个字节地址，但是物理上由两个独立的寄存器组成，一个发送一个接收。 ¶定时器/计数器 51单片机有2个16位定时/计数器T0、T1，他们各由两个独立的8位寄存器组成，分别是TH0、TL0；TH1，TL1。不能把T0、T1作为16位寄存器操作。 ¶位地址空间 MCS51中共有可寻址的位 211 个，构成了8051的位地址空间。 在RAM区，有可寻址128位，其位地址为 00~7FH 。可位寻址RAM的字节地址为 20H~2FH ； 可位寻址的SFR，共83位（其中IE为7位，IP为5位，PWS为7位，其余每个为8位）。 片内 RAM 地址为 20H~2FH 的 16 的 128 位(8 × 16 = 128) 可进行位寻址, 也可进行字节寻址. 地址为 30H~FFH 的单元为用户 RAM 区, 只能进行字节寻址, 用作存放数据及作为堆栈区使用. 只有以 “0” 或 “8” 结尾的地址才能够寻址, 例: 计算位地址位 30H 的字节地址 30H , 字节地址 = 26H ¶外部数据存储器 当内部RAM不够使用时，可以外扩数据存储器，最多 64k。 64kB = 2^16 位, 需要 8 个 I/O 口. 外接数据存储器的 写端 和 读端. 接 2 根(要读要写); 外接程序存储器. 接 1 根(只读). ¶关于地址重叠： 程序存储器与外部数据存储器地址重叠（通过指令） 片内程序存储器与片外程序存储器地址重叠（通过EA管脚） RAM的字节地址与位地址重叠（通过字节指令与位操作指令） 52的高128字节RAM地址与SFR地址重叠（通过不同的寻址方式） 52 增强型单片机与 51 单片机相比, 片内数据存储器增加了 128 B, 对应的字节地址为 80H ~ FFH . 这高 128 B 的 RAM 单元地址与特殊功能寄存器区的字节地址重合, 但它们是两个不同的物理区域. 对这两个具有相同地址区域进行访问时, 是由不同的指令寻址方式来区分的—— 对于地址为 80H ~ FFH 的 RAM 区, 只能采用间接寻址的方式访问, 对于地址为 80H ~ FFH 的特殊功能寄存器区的访问只能采用直接寻址方式. 对于低 128 B (00H ~ 7FH) 的 RAM 区, 既可以采用直接寻址方式又可以采用间接寻址方式来访问.","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"嵌入式原理及应用(02)-MCS-51的硬件结构","date":"2022-08-26T08:37:10.000Z","path":"2022/08/26/嵌入式原理及应用-02MCS-51的硬件结构/","text":"¶MCS-51 的引脚功能 ¶电源以及时钟引脚 电源引脚 Vcc: 接 +5v 电源 电源引脚 Vss: 接数字地(GND) 时钟引脚 XTAL1: 如果采用外接晶体振荡器时，此引脚应接地。使用片内振荡器，应接外部石英晶体和微调电容。使用片外振荡器，该脚接外部时钟振荡器输出的信号。 时钟引脚 XTAL2: 片内振荡器反相放大器的输出端。使用片内振荡器，接外部石英晶体和微调电容。使用片外振荡器，悬空。 ¶控制引脚 RST/VPD(9脚): 复位信号/备用电源的输入端。RST是复位信号输入端，高电平有效。加上两个机器周期的高电平时，就可以完成复位操作。在单片机正常工作时,此脚应该为 &lt;0.5v 低电平. RST引脚的第二功能是VPD，即备用电源的输入端, 接上备用电源，系统掉电时向内部RAM供电，使其保持数据。 ALE/ PROG(30脚) ALE(address lock enable): P0 口既做地址总线(AB) 又做数据总线(DB), 当访问单片机外部存储器时，ALE (地址锁存允许)输出脉冲的负跳沿用于16位地址的低8位的锁存信号。在P0 口做DB时用 地址锁存器ALE 来保存下降沿左端的地址信息, 示意图如下: 即使不访问外部锁存器，ALE端仍有正脉冲信号输出，此频率约为时钟振荡器频率的1 / 6。但在执行某些指令时会不发出ALE信号，因而用户不能用做时钟源或定时。约为时钟振荡器频率的1 / 6, 每当执行访问外部RAM或I/O指令时会丢失一个 ALE 脉冲, 故并不是精确的1 / 6 周期. PSEN（29脚）：程序存储允许输出信号端（片外ROM选通线）。在 PSEN脚为低电平时, 选中片外程序存储器。此引脚接EPROM的OE端。 EA(31脚) 当 EA 端保持高电平时, 51单片机先访问内部程序存储器, 但当 PC(程序计数器) 值超过 0FFFH 时(8051, 8751), 将自动转向执行外部程序存储器内的程序. 当 EA 保持低电平时, 不管是否有内部程序存储器, 只访问外部程序存储器. 0000H ~ 0FFFH: 4k个存储单元, byte, 1k = byte ¶I/O 口引脚 ¶I/O 口的功能 为4个并行8位I/O口，输入输出 8 位数据。 P0口：双向8位三态I/O口，此口为地址总线（低8位）及数据总线分时复用口，由ALE信号作为地址锁存, 可驱动8个LS型TTL负载。 漏极开路的 8 位并行双向 I/O 口 当扩展外部存储器及 I/O 接口芯片时, P0 为口分时复用的低 8 位地址/数据总线. 向 P0 口输入 1 后就成为了高阻态的输入口 P0 口做通用 I/O 口使用时, 需外加上拉电阻, 此时为准双向口 P1口：8位准双向I/O口，可驱动4个LS型TTL负载, 供用户使用。 准双向 I/O 口, 具有内部上拉电阻 P2口：8位准双向I/O口，与地址总线（高8位）使用，可驱动4个LS型TTL负载。当扩展的外部存储器小于64k时，即有未用到的P2口线，可作为一般I/O口使用。 准双向 I/O 口, 具有内部上拉电阻 当访问外部存储器及 I/O 口时, P2 作为高 8 位地址总线使用, 输出高 8 位地址. 不做地址总线时, 可作为通用 I/O 口使用. P3口：8位准双向I/O口，即可作为一般I/O口使用，也可作为第二功能口使用. 控制总线, 可驱动4个LS型TTL负载。 准双向 I/O 口, 具有内部上拉电阻 P3 的第二功能要熟记 P3 口的第二功能: P0 口作为地址总线(低 8 位)及数据总线使用时, 为双向口. 作为通用的 I/O 口使用时需要加上拉电阻, 为准双向口. P1, P2, P3 口内部均有上拉电阻, 均为准双向口, 没有高阻’悬浮态’. ¶I/O 口的内部结构 每一位引脚由锁存器、输出驱动器和输入缓冲器组成。 P1口作为输出使用: 输出高电平: Q为1，Q非为0，驱动管截止，P1口引脚在上拉电阻作用下，输出高电平； 输出低电平: Q为0，Q非为1，驱动管导通，P1口引脚输出低电平； P1口作为输入使用 首先要通过内部总线写高电平1，Q非为0，使驱动管截止，这样由外部电路引起的P1口引脚的状态就能通过下面的缓冲器送到内部总线上； 如果做输入之前写低电平0，则Q非为1，驱动管导通，P1口引脚始终被拉低为低电平，外部电路无法在引脚上施加高电平1，从而无法作为双向口使用。 P1口作为输入使用前必须先写高电平 上下两个缓冲器，数据可通过锁存器、上面的缓冲器送到内部总线，也可通过引脚、下面的缓冲器送到内部总线。 ¶双向口与准双向口 注意:准双向口与双向三态口的差别，当3个准双向I/O口作输入口使用时，要向该口先写“1”。准双向I/O口无高阻的“浮空”状态。 TTL电平信号被利用的最多是因为通常数据表示采用二进制规定，+5V等价于逻辑“1”，0V等价于逻辑“0”，这被称做TTL（晶体管-晶体管逻辑电平）信号系统，这是计算机处理器控制的设备内部各部分之间通信的标准技术。 TTL电平信号对于计算机处理器控制的设备内部的数据传输是很理想的，首先计算机处理器控制的设备内部的数据传输对于电源的要求不高以及热损耗也较低，另外TTL电平信号直接与集成电路连接而不需要价格昂贵的线路驱动器以及接收器电路；再者，计算机处理器控制的设备内部的数据传输是在高速下进行的，而TTL接口的操作恰能满足这个要求。TTL型通信大多数情况下，是采用并行数据传输方式，而并行数据传输对于超过10英尺的距离就不适合了。这是由于可靠性和成本两面的原因。因为在并行接口中存在着偏相和不对称的问题，这些问题对可靠性均有影响。 TTL输出高电平&gt;2.4V，输出低电平&lt;0.4V。在室温下，一般输出高电平是3.5V，输出低电平是0.2V。最小输入高电平和低电平：输入高电平&gt;=2.0V，输入低电平&lt;=0.8V，噪声容限是0.4V。 TTL门电路是双极型集成电路，与分立元件相比，具有速度快、可靠性高和微型化等优点。 高阻态即不外接 参考资料: CSDN: LS型TTL负载 ¶I/O 口的读操作 读锁存器 读锁存器指令是从锁存器中读取数据，进行处理，并把处理后的数据重新写入锁存器中，这类指令称为读、修改、写指令。在ANL、ORL、XRL； JBC； CPL； INC、DEC； DJNZ； MOV、 CLR、 SETB等指令中，当目的操作数为某一I／O口或I／O口的某一位时，这些指令均为读、修改、写指令。 当给 I/O 口锁存器写入某一状态后，相应的口引脚是否呈现锁存器的状态，是与外电路的连接有关。 例如，用I/O口线驱动外部三极管基极时，该口线被 锁存器写入“1” 后使外部三极管导通，而三极管一旦导通后，基极电平为“0”。口锁存器与引脚状态不一致 当给一个准双向口 输出“0” 后，输出驱动器打开，管脚电位拉低为“0”，此时如将该管脚作输入脚使，将无法输入高电平。 由此可见，在设计8051系统时，对51的I/O管脚要统一规划使用，一个管脚不能既作为输入，又作为输出。换言之，一个管脚如果第一次用其为输入，一直用其作为输入管脚 读引脚 读引脚指令一般都是以I/O端口为源操作数的指令，执行读引脚指令时，打开三态门，输入口状态。例如，读P1口的输入状态时，读引脚指令为：MOV A，P1。 ¶MCS-51 的CPU MSC-51 单片机的 CPU 为8位的CPU，且内含一个1位的位处理器，可进行字节数据和位变量的处理，是由运算器和控制器组成的。 ¶运算器 ¶算数运算逻辑单元 ALU 功能强大，它不仅可对8位变量进行逻辑\"与、或异或”循环、求补和清零等基本操作，还可以进行加、减、乘、除等基本运算, ALU还具有位处理操作，如置位、清零、求补、测试。转移及逻辑“与、或”等操作。 ¶累加器 A 累加器 A 是CPU 中使用最频繁的一个8位寄存器。 是 ALU 的输入数据源之一, 也是ALU 的运算结果存放单元, 是 ALU 的主要寄存器. 累加器中的进位位 Cy (位于程序状态字特殊功能寄存器 PSW 中) 是特殊的, 因为它同时又是位处理器的累加器. CPU 中的数据大多数通过 A 传送, 大部分指令都会用到它(语言听上去不是全部指令都用上, 有一部分是不会经过 A 的数据传输指令) ¶寄存器 B 是为执行乘法和除法操作设置的，在不执行乘除法操作的一般情况下可把它当作一个 普通寄存器使用。 在乘法运算时，累加器A和寄存器B在乘法运算前存放乘数和被乘数，运算完，寄存器B存放低八位, 累加器A存放高八位。 除法运算前，累加器A和寄存器B存入被除数和除数，运算完用于存放商和余数。 ¶程序状态字寄存器 PSW (Program Status Word) Cy (PSW.7)：进位标志位。在进行加法或减法运算时，若运算结果最高位有进位或借位，则Cy自动置 “1”，否则Cy置 “0”；在进行布尔操作运算时，Cy （简称C）作为布尔处理器。 AC (PSW.6/)：辅助进位标志位。当进行加法或减法运算时，若低4位向高4位有进位或借位时，AC被置 \"1”，否则AC被置 “0”。在十进制调整指令中AC还作为十进制调整的判别位。 F0 (PSW.5)：用户标志位。用户可用软件对F0位置 “1” 或清 “0”，以决定程序的流向。 RSI、RS0 (PSW.4, PSW.3)：工作寄存器区选择位，用来选择当前工作的寄存器区。用户通过改变RS1、RS0的内容来选择当前工作寄存器区。RSI、RS0的内容与工作寄存器区的对应关系如表2-2所示。 OV (PSW.2)：溢出标志位，当运算结果溢出时，OV为 “1”，否则为 “0”。此标志位反映了运算结果是否溢出。 D1 (PSW.1)：未定义位。 P (PSW.0)：奇偶标志位。MCS-51单片机采用偶校验。当累加器A中 “1”的个数为奇数时，P置 “1\",否则P置 “0\"。此位反映累加器A中内容“1\"的奇偶性，它常常用于机间通信。在串行通信中常用奇偶校验的方法检验数据串行传输的可靠性. 串行通信（英语：Serial communication） 串口类似于一条车道，而并口就是有8个车道同一时刻能传送8位（一个字节）数据。但并不是并口快，由于8位通道之间的互相干扰。传输时速度就受到了限制。而且当传输出错时，要同时重新传8个位的数据。串口没有干扰，传输出错后重发一位就可以了，所以要比并口快。 ¶控制器 控制部件是单片机的神经中枢，以主振频率为基准(每个主振周期称为振荡周期),控制器控制CPU的时序，对指令进行译码，然后发出各种控制信号，它将各个硬件环节组织在一起。 它的功能是根据程序计数器PC的内容取指令，然后进行指令译码，并严格按照定时控制电路依据指令译码的内容产生相应的控制信号，协调各部分的工作，完成指令所规定的操作。 ¶程序计数器PC 是控制器内独立的16位计数器寄存器, 是程序存储器的地址指针. 它用来存放CPU执行的下一条指令的地址。当一条指令按照PC所指的地址从程序存储器中取出后，PC会自动加1，指向下一条指令。程序计数器PC是一个16位的寄存器，可寻址64KB的程序存储器空间。 当单片机复位时, PC 内容变为 0000H. 因而程序总是从程序存储器的0000H处开始执行。 一些指令会影响到PC的连续性，例如跳转类，中断响应等。 PC不是SFR ¶指令寄存器、指令译码器及控制逻辑电路 分别用来存放指令操作码、对指令译码、根据译码结果发出一 系列控制信号,使微控制器的各组成部件进行相应的工作，执行指令。 ¶复位电路 复位为单片机提供了初始化手段，当RST引脚保持24个时钟周期以上的高电平将引起复位。 在复位有效期间（即高电平），ALE引脚为高电平，且内部RAM不受复位的影响。 复位后的部分寄存器状态 PC=0000H PSW=00H 选择工作寄存器0区 SP=07H ¶时钟电路 ¶内部方式 晶振 1.2MHz~12MHz 电容 20pF~100pF, 典型值：30pF ¶外部方式","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"嵌入式原理及应用(01)-绪论","date":"2022-08-25T12:02:29.000Z","path":"2022/08/25/嵌入式原理及应用-01/","text":"本文档为hit梁慧敏教授2022年秋季学期《嵌入式系统原理及应用》随堂笔记 本人上外专业课，本文档笔记均为个人理解，若有错误欢迎邮箱讨论。 ¶前言 嵌入式系统是嵌入到对象系统中的专用计算机应用系统。其本质是将计算机嵌入到一个对象体系中，以实现对象体系智能化控制的计算机系统。 嵌入式系统，其本质是将计算机嵌入到一个对象体系中，以实现对象体系智能化控制的计算机系统。 “嵌入性”、“专用性”与“计算机系统”是嵌入式系统的三个基本要素。 嵌入性：微控制器嵌入到物体中去; 专用性：一个专门用在某类对象上的系统不能用在其他对象上; 计算机系统：一个嵌入式系统就是一个小型计算机系统 ¶单片机的概念 单片机就是一块具有一台计算机属性的芯片，在一块硅片上集成了微处理器（CPU）、存储器（RAM,ROM,EPROM）和各种输入、输出接口（定时器/计数器，并行I/O口，串行口，A/D转换器以及脉冲调制器PWM等），被称为单片微型计算机，简称单片机。 单片机主要体现在其控制属性上. 计算机只能处理数字量, 模拟量的数据需要通过模数转换(A/D转换)变为数字量. 若单片机内部没有内置A/D转换功能则需要外置A/D转换芯片. 1976～1978年，美国英特尔、仙童、莫斯特克等公司相继推出8位单片机。限于当时所能达到的集成度,这些8位单片机的性能只达到中、低档水平:内存寻址范围小于4千字节，只有并行的输入输出接口,只读存储器容量小于2千字节，随机存储器容量小于128字节，指令系统是专用的并以单字节指令为主。直至目前产量最大应用最广的仍为这类单片机，其中典型产品有英特尔公司的MCS48、仙童公司的F8和莫斯特克公司的3870等。1978～1983年期间各种高性能单片机相继问世。它们的寻址范围扩大到64～128千字节,只读存储器容量达4～8千字节,随机存储器容量达128～256字节,并增加了串行输入输出接口和模数转换器。这类高性能单片机可适用于更复杂的系统，如智能终端、局部网的接口等。典型产品有英特尔公司的MCS51,美国莫托洛拉公司的6801和泽洛格公司的Z8等。1983年以后，16位单片机问世。随着集成工艺水平的提高，有可能在一块芯片上集成十几万个管子,如英特尔公司的16位单片机MCS96的集成度达12万管子／片。它有5个8位并行输入输出接口,4个全双工串行接口,8级中断处理系统,4个16位可编程序定时器／计数器。莫托洛拉公司的16位单片机8096-A6有8个通道的10位模数转换器，指令系统能处理位、字节、字和双字的操作，16位加法计算时间达1微秒,指令平均执行时间为1～2微秒。它还配备面向工业控制的高级语言(如PL/M、FORTH、C语言等),工作电压为5伏、功耗1瓦。一块16位单片机的功能已能达到一台多片机系统的水平。 ¶一些概念的辨析 单片机是微处理器（CPU）、存储器（RAM、ROM、EPROM、flash存储器）、各种输入输出接口（定时/计数器、串行口、并行I/O口等），集成在一块集成电路芯片中，从而构成完整的微型计算机。 单片机也是一种微型计算机，普通微机：主板、CPU、硬盘、I/O口（键盘、鼠标）、定时/计数器等，各部分相互分离。单片机也是微型计算机。 微处理器、微处理机和CPU它们都是中央处理器的不同称谓，微处理器芯片本身不是计算机。而微计算机、单片机它们都是一个完整的计算机系统，单片机是集成在一个芯片上的用于测控目的的单片微计算机。 广义上讲，凡是系统中嵌入了“嵌入式处理器”，如单片机、DSP、嵌入式微处理器，都称其为“嵌入式系统”。但多数人把 “嵌入”嵌入式微处理器的系统，称为“嵌入式系统”。 目前“嵌入式系统”还没有一个严格和权威的定义。目前人们所说的“嵌入式系统”，多指后者。 ¶数字信号处理器(Digital signal processor, DSP) 数字信号处理器( DSP ) 是一种专用微处理器芯片，其架构针对数字信号处理的操作需求进行了优化。DSP 是在MOS 集成电路芯片上制造的。 DSP用于数据处理应用; DSP的执行速度很快 MCU用于I/O口控制 CMOS电路具有低功耗, 高密度的优点 DSP 的目标通常是测量、过滤或压缩连续的真实模拟信号。大多数通用微处理器也可以成功地执行数字信号处理算法，但可能无法实时连续地跟上这种处理。此外，专用 DSP 通常具有更好的功率效率，因此由于功耗限制，它们更适合用于移动电话等便携式设备。 ¶现场可编程逻辑门阵列(Field Programmable Gate Array, FPGA) FPGA 由若干基本门组成, 以硬件描述语言（Verilog或VHDL）描述的逻辑电路，可以利用逻辑合成和布局、布线工具软件，编程逻辑组件可以被用来实现一些基本的逻辑门数字电路（比如与门、或门、异或门、非门）或者更复杂一些的组合逻辑功能，比如译码器等。 FPGA 的执行速度比 DSP 要更快. ¶ROM, FLASH和RAM的区别 ¶ROM (Read Only Memory)程序存储器 ROM全称Read Only Memory，顾名思义，它是一种只能读出事先所存的数据的固态半导体存储器。ROM中所存数据稳定，一旦存储数据就再也无法将之改变或者删除，断电后所存数据也不会消失。其结构简单，因而常用于存储各种固化程序和数据。 在单片机中用来存储程序数据及常量数据或变量数据，凡是c文件及h文件中所有代码、全局变量、局部变量、‘const’限定符定义的常量数据、startup.asm文件中的代码（类似ARM中的bootloader或者X86中的BIOS，一些低端的单片机是没有这个的）通通都存储在ROM中。 为了便于使用和大批量生产，进一步发展出了可编程只读存储器（PROM）、可擦除可编程只读存储器（EPROM）。EPROM需要用紫外线长时间照射才能擦除，使用很不方便。1980s又出现了电可擦除可编程只读存储器（EEPROM），它克服了EPROM的不足，但是集成度不高、价格较贵。于是又发展出了一种新型的存储单元结构同EPROM类似的快闪存储器（FLASH MEMORY）。FLASH集成度高、功耗低、体积小，又能在线快速擦除，因而获得了快速发展。 ¶FLASH 存储器 Flash 存储器（FLASH EEPROM）又称闪存，快闪。它是EEPROM的一种。它结合了ROM和RAM的长处。不仅具备电子可擦除可编辑（EEPROM）的性能，还不会断电丢失数据同时可以快速读取数据。它于EEPROM的最大区别是，FLASH按扇区（block）操作，而EEPROM按照字节操作。FLASH的电路结构较简单，同样容量占芯片面积较小，成本自然比EEPROM低，因此适合用于做程序存储器。 ¶RAM (Random Access Memory)随机访问存储器 RAM又称随机存取存储器，存储单元的内容可按照需要随机取出或存入，且存取的速度与存储单元的位置无关。这种存储器在断电时，将丢失其存储内容，所以主要用于存储短时间使用的程序。 它主要用来存储程序中用到的变量。凡是整个程序中，所用到的需要被改写的量（包括全局变量、局部变量、堆栈段等），都存储在RAM中。 ¶ROM, FLASH和RAM的区别 对于RAM, ROM以及FLASH的区别，简单地说，在计算机中，RAM 、ROM都是数据存储器。RAM 是随机存取存储器，它的特点是易挥发性，即掉电失忆。 ROM 通常指固化存储器(一次写入，反复读取)，它的特点与RAM 相反。ROM又分一次性固化、光擦除和电擦除重写两种类型。 在应用中，常规上ROM是用来存储固化程序的，RAM是用来存放数据的。由于FLASH ROM比普通的ROM读写速度快，擦写方便，一般用来存储用户程序和需要永久保存的数据。譬如说，现在家用的电子式电度表，它的内核是一款单片机，该单片机的程序就是存放在ROM里的。电度表在工作过程中，是要运算数据的，要采集电压和电流，并根据电压和电流计算出电度来。电压和电流时一个适时的数据，用户不关心，它只是用来计算电度用，计算完后该次采集的数据就用完了，然后再采集下一次，因此这些值就没必要永久存储，就把它放在RAM里边。然而计算完的电度，是需要永久保存的，单片机会定时或者在停电的瞬间将电度数存入到FLASH里。 原文: 知乎: Choris- ROM, FLASH和RAM的区别 ¶存储单位转换 名称 字符表示 说明 位 bit 一个二进制数据0或1，是1bit 机器字长 字 一个机器字长在32位系统中是4个字节, 在64位系统中是8个字节 字节 byte/B 1 byte = 8 bit一个8位的二进制数称为一个字节;存储空间的基本计量单位，如：MySQL中定义 VARCHAR(45) 即是指 45个字节；一个英文字符占一个字节(1 byte = 8 bit)；一个汉字占2个字节2 byte = 16 bit； 1 Byte = 8 Bits 1 KB = 1024 Bytes 1 MB = 1024 KB 1 GB = 1024 MB ¶各种类型数据的占用大小 一个int型是4B，也就是4个字节，一个字节8bit（位），所以就是32位 参考: 计算机各单位间转换（位，字节，进制间转换）","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"硬件","slug":"Electricity/硬件","permalink":"http://example.com/categories/Electricity/%E7%A1%AC%E4%BB%B6/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"python-10-函数的定义及使用","date":"2022-08-07T11:36:43.000Z","path":"2022/08/07/python-10-函数的定义及使用/","text":"123def &lt;函数名&gt;(&lt;参数(0个或多个)&gt;): &lt;函数体&gt; return &lt;返回值&gt; 1234567891011def cross(n): s = 1 for i in range(1, n+1): s *= i return ssummer = cross(3)print(summer)6 希望在类或函数定义后有2行空行, 注意代码规范问题 ¶函数的使用以及调用过程 ¶函数的参数传递 函数可以有参数, 也可以没有参数, 无论函数定义的时候给不给参数, 都必须保留这个括号 1234# 如果没有参数就直接给空括号def &lt;函数名&gt;(): &lt;函数体&gt; return &lt;返回值&gt; ¶可选参数 函数定义时可以为某些参数指定默认值,构成可选参数 123def &lt;函数名&gt;(&lt;非可选参数&gt;, &lt;可选参数&gt;): &lt;函数体&gt; return &lt;返回值&gt; 可选参数必须放在非可选参数后面; 非可选参数是调用函数时必须要有的参数; 如果传入了非可选参数, 则用传入值, 若没有传入则用默认值. 12345678910111213141516def cross(n, m=1): s = 1 for i in range(1, n+1): s *= i return s // m&gt;&gt;&gt; cross(3)6&gt;&gt;&gt; cross(3, 2)3# 也可以通过在定义函数时使用函数的参数来赋值&gt;&gt;&gt; cross(m=2, n=3)3 ¶可变参数传递 函数定义时可以设计可变数量参数，既不确定参数总数量 123def &lt;函数名&gt;(&lt;参数&gt;, *b): &lt;函数体&gt; return &lt;返回值&gt; 定义函数中确定要给的参数放在前面, 最后增加一个 *b 来表达不确定的参数, 同理也可以用 *c , *a 等其他变量名 12345678910111213141516def cross(n, *b): s = 1 for i in range(1, n+1): s *= i for item in b: s *= item return s&gt;&gt;&gt; cross(3)6&gt;&gt;&gt; cross(3, 2)12&gt;&gt;&gt; summer = cross(3, 2, 3, 4)144 ¶函数的返回值 函数可以返回 0 个或多个结果， 函数定义可以有返回值也可以没有返回值, 可以使用 return 也可以不使用; 若一个函数不需要返回任何值, 可以给出 return 但不给出任何返回信息, 也可以不使用 return; 想要返回多个值的情况下, 返回值为元组类型, 用小括号包围; 元组类型与列表类型很相似, 列表类型用方括号包围; 也可以用几个用逗号分隔的变量, 获取返回值 123456789101112def cross(n, m=1): s = 1 for i in range(1, n+1): s *= i return s//m, n, m&gt;&gt;&gt; cross(5, 2)(60, 5, 2)&gt;&gt;&gt; a, b, c = cross(5, 2)&gt;&gt;&gt; print(a, b, c)60 5 2 ¶局部变量和全局变量 局部变量是函数内部使用的变量； 全局变量是函数外部整个程序使用的变量。 局部变量是函数内部的占位符,与全局变量可能重名但不同； 函数运算结束后，局部变量被释放 可以使用global保留字在函数内部使用全局变量 局部变量为组合数据类型且未创建,等同于全局变量 在程序中间使用外部全局变量，通过保留字global在函数内部中声明变量是全局变量而不是局部变量 123456789101112131415# 范例1n, s = 10, 100def fact(n): # fact()函数中使用global保留字声明此处s是全局变量s global s for i in range(1, n+1): s *= i # 此处返回的是全局变量s的运算结果 return sprint(fact(n), s)# 范例2ls = [\"F\", \"f\"]def func(a) ¶lambda 函数","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-9-random库","date":"2022-08-07T10:22:07.000Z","path":"2022/08/07/python-09-random库/","text":"random 库是使用随机数的 python 标准库. 标准库: 是随着 python 的解释器所自带的库, 它不需要安装, 直接用 import 来使用它. 在工程中, 有很多通过随机值的方法来快速测量的情况, 计算机的思维. 计算机不可能产生随机值, 或者简单理解为: 真正的随机数也是在各种复杂条件下产生的确定值, 只不过我们并不充分理解这些复杂条件, 或者已经超越了我们的理解能力. 计算机虽然不能产生真正的随机数, 但是能产生伪随机数 - 采用梅森旋转算法生成的(伪)随机序列中元素. ¶基本随机函数 计算机要产生一个随机数, 是需要一个随机数种子 seed 的, 计算机根据 seed 运用梅森旋转算法, 就能够根据种子产生一系列唯一确定的数据, 只要种子相同, 产生的随机序列无论是每一个数还是数之间的关系都是确定的. ¶seed() 用 random.seed() 给定一个种子, 在使用随机数的时候也可以不调用这个函数, 直接调用 random.random 来产生随机数, 不需要使用 seed 函数, 此时它使用当前操作系统的默认的系统时间(精确到微秒)作为种子. ¶random() 生成一个[0.0, 1.0)之间的随机小数. 12&gt;&gt;&gt; random.random() 0.45594588118356716 若编程中给出了随机种子, 下一次程序再次运行, 只要种子相同, 产生的随机数也相同, 对于使用随机数的种子可以复现程序运行的过程, 如果不使用随机数种子, 每次运行结果可能会改变. 1234567891011121314&gt;&gt;&gt; import random&gt;&gt;&gt; random.seed(4) &gt;&gt;&gt; random.random()0.23604808973743452&gt;&gt;&gt; random.random()0.1031660342307158 # 注意这里&gt;&gt;&gt; import random&gt;&gt;&gt; random.seed(4) &gt;&gt;&gt; random.random() 0.23604808973743452&gt;&gt;&gt; random.seed(4) &gt;&gt;&gt; random.random() 0.23604808973743452 # 注意这里 只要调用了 random.seed() 设置种子的函数, 后续再调用 random() 函数的顺序只要相同, 产生的随机数也是相同的. ¶扩展随机函数 ¶randint() 12345def randint(self, a, b): \"\"\"Return random integer in range [a, b], including both end points. \"\"\" return self.randrange(a, b+1) 生成一个位于 [a, b] 之间的整数. 每次调用会产生不同的随机数. ¶getrandbits() 生成一个 k 比特长的随机整数, 它不是用十进制范围来确定, 而是用比特数的长度来确定, [0, ). 1234567def getrandbits(self, k): \"\"\"getrandbits(k) -&gt; x. Generates an int with k random bits.\"\"\" if k &lt; 0: raise ValueError('number of bits must be non-negative') numbytes = (k + 7) // 8 # bits / 8 and rounded up x = int.from_bytes(_urandom(numbytes), 'big') return x &gt;&gt; (numbytes * 8 - k) # trim excess bits ¶uniform() 生成一个[a, b]之间的随机小数 123def uniform(self, a, b): \"Get a random number in the range [a, b) or [a, b] depending on rounding.\" return a + (b - a) * self.random() ¶randrange() 生成一一个[start, stop)之间以 step 为步长的随机整数. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273def randrange(self, start, stop=None, step=_ONE): \"\"\"Choose a random item from range(start, stop[, step]). This fixes the problem with randint() which includes the endpoint; in Python this is usually not what you want. \"\"\" # This code is a bit messy to make it fast for the # common case while still doing adequate error checking. try: istart = _index(start) except TypeError: istart = int(start) if istart != start: _warn('randrange() will raise TypeError in the future', DeprecationWarning, 2) raise ValueError(\"non-integer arg 1 for randrange()\") _warn('non-integer arguments to randrange() have been deprecated ' 'since Python 3.10 and will be removed in a subsequent ' 'version', DeprecationWarning, 2) if stop is None: # We don't check for \"step != 1\" because it hasn't been # type checked and converted to an integer yet. if step is not _ONE: raise TypeError('Missing a non-None stop argument') if istart &gt; 0: return self._randbelow(istart) raise ValueError(\"empty range for randrange()\") # stop argument supplied. try: istop = _index(stop) except TypeError: istop = int(stop) if istop != stop: _warn('randrange() will raise TypeError in the future', DeprecationWarning, 2) raise ValueError(\"non-integer stop for randrange()\") _warn('non-integer arguments to randrange() have been deprecated ' 'since Python 3.10 and will be removed in a subsequent ' 'version', DeprecationWarning, 2) width = istop - istart try: istep = _index(step) except TypeError: istep = int(step) if istep != step: _warn('randrange() will raise TypeError in the future', DeprecationWarning, 2) raise ValueError(\"non-integer step for randrange()\") _warn('non-integer arguments to randrange() have been deprecated ' 'since Python 3.10 and will be removed in a subsequent ' 'version', DeprecationWarning, 2) # Fast path. if istep == 1: if width &gt; 0: return istart + self._randbelow(width) raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width)) # Non-unit step argument supplied. if istep &gt; 0: n = (width + istep - 1) // istep elif istep &lt; 0: n = (width + istep + 1) // istep else: raise ValueError(\"zero step for randrange()\") if n &lt;= 0: raise ValueError(\"empty range for randrange()\") return istart + istep * self._randbelow(n) ¶choice() 从序列seq中随机选择一个元素 1234567 def choice(self, seq): \"\"\"Choose a random element from a non-empty sequence.\"\"\" # raises IndexError if seq is empty return seq[self._randbelow(len(seq))]&gt;&gt;&gt; random.choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) 7 ¶shuffle() 将序列seq中元素随机排列,返回打乱后的序列. 要先赋值, 再传递给 shuffle() 函数, shuffle() 函数把打乱后的顺序给序列变量重新赋值. 12345678910111213141516171819202122232425262728293031 def shuffle(self, x, random=None): \"\"\"Shuffle list x in place, and return None. Optional argument random is a 0-argument function returning a random float in [0.0, 1.0); if it is the default None, the standard random.random will be used. \"\"\" if random is None: randbelow = self._randbelow for i in reversed(range(1, len(x))): # pick an element in x[:i+1] with which to exchange x[i] j = randbelow(i + 1) x[i], x[j] = x[j], x[i] else: _warn('The *random* parameter to shuffle() has been deprecated\\n' 'since Python 3.9 and will be removed in a subsequent ' 'version.', DeprecationWarning, 2) floor = _floor for i in reversed(range(1, len(x))): # pick an element in x[:i+1] with which to exchange x[i] j = floor(random() * (i + 1)) x[i], x[j] = x[j], x[i]&gt;&gt;&gt; s = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] &gt;&gt;&gt; random.shuffle(s) &gt;&gt;&gt; print(s) [3, 9, 10, 2, 6, 8, 7, 5, 4, 1]","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-8.time库","date":"2022-08-06T06:44:15.000Z","path":"2022/08/06/python-08-time库/","text":"对于一个程序来说, 80% 的时间只消耗在不到 10% 的代码上, 即: 循环代码, 看待一个程序的时候, 从性能角度上要关注循环, 可以用 time 库 perf_counter 对其中的循环进行测量, 对程序性能进行分析, 并优化它. ¶时间获取 ¶time() 能够获取当前系统的时间戳（当前系统中表示时间的一个浮点数，是计算机内部的时间值）。它表示从1970年1月1日0：00开始，到当前时刻为止的一个以秒为单位的数值。 123&gt;&gt;&gt; import time&gt;&gt;&gt; time.time()1659768874.201174 可以看到，它的可读性非常差。 ¶ctime() 以一种非常可读的方式表示时间，并且给出具体的时分秒时间，返回的是一个字符串。 12&gt;&gt;&gt; time.ctime() 'Sat Aug 6 14:59:20 2022' ¶gmtime() 获取的是一种计算机程序能够处理的时间格式 - struct_time 格式. gmtime()和 struct_time 定义: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889def gmtime(seconds=None): # real signature unknown; restored from __doc__ \"\"\" gmtime([seconds]) -&gt; (tm_year, tm_mon, tm_mday, tm_hour, tm_min, tm_sec, tm_wday, tm_yday, tm_isdst) Convert seconds since the Epoch to a time tuple expressing UTC (a.k.a. GMT). When 'seconds' is not passed in, convert the current time instead. If the platform supports the tm_gmtoff and tm_zone, they are available as attributes only. \"\"\" passclass struct_time(tuple): \"\"\" The time value as returned by gmtime(), localtime(), and strptime(), and accepted by asctime(), mktime() and strftime(). May be considered as a sequence of 9 integers. Note that several fields' values are not the same as those defined by the C language standard for struct tm. For example, the value of the field tm_year is the actual year, not year - 1900. See individual fields' descriptions for details. \"\"\" def __init__(self, *args, **kwargs): # real signature unknown pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown \"\"\" Create and return a new object. See help(type) for accurate signature. \"\"\" pass def __reduce__(self, *args, **kwargs): # real signature unknown pass def __repr__(self, *args, **kwargs): # real signature unknown \"\"\" Return repr(self). \"\"\" pass tm_gmtoff = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"offset from UTC in seconds\"\"\" tm_hour = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"hours, range [0, 23]\"\"\" tm_isdst = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"1 if summer time is in effect, 0 if not, and -1 if unknown\"\"\" tm_mday = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"day of month, range [1, 31]\"\"\" tm_min = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"minutes, range [0, 59]\"\"\" tm_mon = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"month of year, range [1, 12]\"\"\" tm_sec = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"seconds, range [0, 61])\"\"\" tm_wday = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"day of week, range [0, 6], Monday is 0\"\"\" tm_yday = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"day of year, range [1, 366]\"\"\" tm_year = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"year, for example, 1993\"\"\" tm_zone = property(lambda self: object(), lambda self, v: None, lambda self: None) # default \"\"\"abbreviation of timezone name\"\"\" n_fields = 11 n_sequence_fields = 9 n_unnamed_fields = 0 __match_args__ = ( 'tm_year', 'tm_mon', 'tm_mday', 'tm_hour', 'tm_min', 'tm_sec', 'tm_wday', 'tm_yday', 'tm_isdst', ) 示例: 12&gt;&gt;&gt; time.gmtime() time.struct_time(tm_year=2022, tm_mon=8, tm_mday=6, tm_hour=7, tm_min=3, tm_sec=29, tm_wday=5, tm_yday=218, tm_isdst=0) ¶时间格式化 ¶strftime(format[, t]) strftime 函数定义 1234567891011121314151617181920212223242526272829def strftime(format, p_tuple=None): # real signature unknown; restored from __doc__ \"\"\" strftime(format[, tuple]) -&gt; string Convert a time tuple to a string according to a format specification. See the library reference manual for formatting codes. When the time tuple is not present, current time as returned by localtime() is used. Commonly used format codes: %Y Year with century as a decimal number. %m Month as a decimal number [01,12]. %d Day of the month as a decimal number [01,31]. %H Hour (24-hour clock) as a decimal number [00,23]. %M Minute as a decimal number [00,59]. %S Second as a decimal number [00,61]. %z Time zone offset from UTC. %a Locale's abbreviated weekday name. %A Locale's full weekday name. %b Locale's abbreviated month name. %B Locale's full month name. %c Locale's appropriate date and time representation. %I Hour (12-hour clock) as a decimal number [01,12]. %p Locale's equivalent of either AM or PM. Other codes may be available on your platform. See documentation for the C library strftime function. \"\"\" return \"\" format: 格式化的模板字符串参数, 用于定义输出效果; t: 计算机内部的时间类型的变量, 就是 gmtime 函数输出的值. 123456&gt;&gt;&gt; time.strftime(\"%Y-%m-%d %H:%M:%S\")'2022-08-06 15:32:37'&gt;&gt;&gt; t = time.gmtime() &gt;&gt;&gt; time.strftime(\"%Y-%m-%d %H:%M:%S\", t)'2022-08-06 07:34:32' ¶strptime() strptime 和 strftime 是一个互补的关系, 它能够将一段字符串变成时间. strptime 函数定义: 123456789101112131415161718192021222324252627282930def strptime(string, format): # real signature unknown; restored from __doc__ \"\"\" strptime(string, format) -&gt; struct_time string 是字符串形式的时间值, format 是格式化的模板字符串, 用来定义输出效果. Parse a string to a time tuple according to a format specification. See the library reference manual for formatting codes (same as strftime()). Commonly used format codes: %Y Year with century as a decimal number. %m Month as a decimal number [01,12]. %d Day of the month as a decimal number [01,31]. %H Hour (24-hour clock) as a decimal number [00,23]. %M Minute as a decimal number [00,59]. %S Second as a decimal number [00,61]. %z Time zone offset from UTC. %a Locale's abbreviated weekday name. %A Locale's full weekday name. %b Locale's abbreviated month name. %B Locale's full month name. %c Locale's appropriate date and time representation. %I Hour (12-hour clock) as a decimal number [01,12]. %p Locale's equivalent of either AM or PM. Other codes may be available on your platform. See documentation for the C library strftime function. \"\"\" return struct_time 示例: 1234567import timetimestr = '2022-08-06 15:32:37'tp = time.strptime(timestr, \"%Y-%m-%d %H:%M:%S\")print(\"tp = \", tp)tp = time.struct_time(tm_year=2022, tm_mon=8, tm_mday=6, tm_hour=15, tm_min=32, tm_sec=37, tm_wday=5, tm_yday=218, tm_isdst=-1) ¶程序计时 测量起, 止动作所经历的时间过程, 即: 一段程序开始运行到结束, 经历了多少时间. 程序计时包括测量时间和产生时间两部分. 计算机中的 CPU 基频运行的时钟往往是以纳秒来计算的. ¶sleep() 产生时间函数, 它让程序去休眠或者产生一定的时间. 以秒为单位. 12345678def sleep(seconds): # real signature unknown; restored from __doc__ \"\"\" sleep(seconds) Delay execution for a given number of seconds. The argument may be a floating point number for subsecond precision. \"\"\" pass 定义一个 wait 函数, 只要调用了 wait 函数, 程序就休眠 3.3 秒, 休眠时间是可以用浮点数表示的. 1234import timedef wait(): time.sleep(3.3) ¶perf_counter() 能够记录时间的流逝, 是一个非常精准的时间函数. 它可以获取计算机以基频运行的时钟. perf_counter() 函数并不是从零开始计时, 它可能从某一个确定的值开始计算, 所以要调用两次 perf_counter 函数, 然后再相减计算差值. 1234567def perf_counter(): # real signature unknown; restored from __doc__ \"\"\" perf_counter() -&gt; float Performance counter for benchmarking. \"\"\" return 0.0 12345678910import timesum = 0stat = time.perf_counter()for i in range(5): sum += iend = time.perf_counter()print(end - stat)2.00001522898674e-06 在写程序的过程中, 有些函数不需要输入参数, 所以老是漏写必要的括号, 写在这里提醒自己.","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-7.数据类型","date":"2022-08-03T08:27:46.000Z","path":"2022/08/03/python-07-数据类型/","text":"¶数字 ¶整数 十进制： 二进制：以 0b 或者 0B 开头；0b010， -0B101 八进制：以 0o 或者 0O 开头； 十六进制：以 0x 或者 0X 开头； ¶浮点数 带有小数及小数点的数字； 浮点数取值范围和小数精度都存在限制； 取值范围数量级约： 到 , 精度数量级为 浮点数间运算存在不确定尾数，不是 bug &gt;&gt;&gt;0.1 + 0.2 0.3000000000004 小数用53位二进制表示，在计算机中，将浮点数现实的时候只输出了其中的16位小数。二进制表示小数，可以无限接近，但不完全相同。 &gt;&gt;&gt;0.2 + 0.2 == 0.3 False 二进制与十进制之间不存在严格的对应关系，浮点数间运算及比较可以通过round函数判断，不确定尾数一般发生在 左右，round()十分有效。 12round(0.1+0.2, 1) == 0.3True round(x,d)函数对 x 四舍五入，d 是小数截取位数 科学计数法 &lt;a&gt;e&lt;b&gt;： ¶复数 用 j 来表示虚数单位。 123z = 1.23e-4+5.6e+89jz.real 获得实部z.imag 获得虚部 ¶数值操作符 操作符及使用 描述 y + x 加，x 与 y 之和 x - x 减， x * y 乘 x / y 除，x 与 y 的商，10/3 = 3.3333333 x //y 整数除， x 与 y 的整数商,10//3 = 3 +x x 本身 -y y 的负值 x % y 余数， 10%3 = 1 x**y 1. 幂运算，x 的 y 次幂，;2. 当 y 是小数时，开平方运算， 10**0.5: x += y x = x+x x -= y x *= x x /= y x //= y x %= y x **=y 在其他编程语言中，两个整数除的结果是整数，而在 python 中是浮点数，若要得到整数结果则用整数除符号。 python 还提供了对二元运算符的增强运算 类型间可进行混合运算,生成结果为\"最宽\"类型 复数 &gt; 浮点数 &gt; 整数 12123 + 4.0 = 127.0 ¶数值运算函数 函数及使用 描述 abs(x) x 的绝对值 divmod(x, y) 商余，(x//y, x%y),同时输出商和余数 pow(x, y[, z]) 幂余，(x**y)%z，[…]表示参数 z 可省略 round(x[, d]) 四舍五入, d是保留小数位数,默认值为0 max(x1, x2, …, xn) 返回最大值 min(x1, x2, …, xn) 返回最小值 1234567891011121314151617&gt;&gt;&gt; abs(-10.01)10.01&gt;&gt;&gt; divmod(10, 3)(3, 1)&gt;&gt;&gt; pow(3, pow(99), 10000)4587&gt;&gt;&gt; round(-10.123, 2)-10.12&gt;&gt;&gt; max(1, 9, 5, 4, 3)9&gt;&gt;&gt; min(1, 9, 5, 4, 3)1 数字类型转换函数 函数及使用 描述 int(x) 将x变成整数,舍弃小数部分无论小数部分是多少，并不进行四舍五入计算，直接变为整数；若输入字符串“123“， int 也能将其变为整数 123 float(x) 与int同理 complex(x) 将x变成复数，增加虚数部分 1234567891011121314&gt;&gt;&gt; int(13.45)123&gt;&gt;&gt; int(\"123\")123&gt;&gt;&gt; float(12)12.0&gt;&gt;&gt; float(\"12.3\")12.3&gt;&gt;&gt; complex(4)4 + 0j ¶字符、字符串 由一对单引号或双引号表示,仅表示单行字符串。 12\"低碳钢的屈服极限\"'C' 由对三单引号或三双引号表示,可表示多行字符串 12```不积跬步 无以至千里``` python 中没有真正提供多行注释的表示方式，三单引号构成的就是字符串，但是如果在程序中出现了字符串，且这个字符串并没有给到某个变量中，或者这个字符串没有进行操作，它也可以当作注释来使用。 如果在字符串中出现双引号，最外层的引号就要使用单引号；同理想要表示单引号就要用双引号。 若希望表示单引号和双引号，可以用三单引号作为字符串的表示。 转义符 : 转义符表达特定字符的本意.12&gt;&gt;&gt; \"这里有一个双引号（\\\"）\"这里有一个双引号（\"） 转义符形成一 些组合,表达一些不可打印的含义123\"\\b\" 回退\"\\n\" 换行(光标移动到下行首)\"\\r\" 回车(光标移动到本行首) 字符串索引的两种方式：1.正向递增序号；2.反向递减序号 ¶索引 返回字符串中单个字符。&lt;字符串名&gt;[数字]，如：“低碳钢的屈服极限”[0] 或者 TempStr[-1]表示名为 TempStr 的字符串的倒数第一位字符。 ¶切片 返回字符串中一段字符子串。&lt;字符串名&gt;[数字:数字]，“低碳钢的屈服极限”[1:3] 表示输出字符串的第1个字符到第2个字符，但不到第3个字符，即“碳钢”，或者 TempStr[0:-1] 表示从0开始但不到字符串的最后一个字符的字符串，相当于把字符串中的最后一个字符去掉。 &lt;字符串&gt;[M, N], M 缺失表示至开头，N 缺失表示至结尾。 12&gt;&gt;&gt; \"低碳钢的屈服极限\"[:3]\"低碳的\" &lt;字符串&gt;[M, N, K]，根据步长 K 对字符串切片 123456&gt;&gt;&gt; \"零一二三四五六七八九十\"[1:8:2]\"一三五七\"# 字符串从最开始到最结尾 MN 默认缺失的情况下，从最开头到最结尾，步长为 -1：从后向前逐一取出。**相当于将字符串逆序**&gt;&gt;&gt; \"零一二三四五六七八九十\"[::-1]\"十九八七六五四三二一零\" ¶字符串操作符 操作符及使用 描述 x + y 连接两个字符串 x 和 y n*x 或 x*n n 为整数，复制 n 次字符串 x x in S 如果 x 是 S 的子串，返回 True，否则返回 False ¶字符串处理函数 函数及使用 描述 len(x) 返回字符串 x 的长度 str(x) 任意类型 x 所对应的字符串形式。相当于将任何类型的变量增加一个引号 hex(x), oct(x) 整数 x 的十六进制或八进制小写形式字符串 chr(u) u 为 Unicode 编码，返回其对应的字符 ord(x) x 为字符，返回其对应的 Unicode 编码 12345&gt;&gt;&gt; hex(425)\"0x1a9\"&gt;&gt;&gt; oct(425)\"0o651\" Unicode 是 python 字符串的编码形式，python3 中所有的字符串、所有的代码，都是用 Unocode 实现的。Unicode 将世界上的所有字符纳入到一个大框架中，可以表示任意的一个字符。 ¶字符串的处理方法 方法是 python 中的一个专有名词，要用 &lt;a&gt;.&lt;b&gt;() 风格中的函数 &lt;b&gt;() ，是面向对象的一种风格使用: a 是对象，b 是某一个对象能够提供的功能，及方法。方法必须要用 . 的形式来执行。 方法本身也是函数，但与 &lt;\\a&gt; 有关 字符串及变量也是 &lt;\\a&gt;，存在一些方法 方法及使用 描述 str.lower() 或 str.upper() 返回字符串的副本,全部字符小写/大写 str.split(stp = None) 返回一个列表,由str根据sep被分隔的部分组成 str.count(sub) 返回子串 sub 在 str 中出现的次数 str.replace(old, new) 返回字符串 str 副本，所有的 old 子串被替换为 new str.center(width[,fillchar]) 字符串str根据宽度width居中, fillchar可选 str.strip(chars) 从str中去掉在其左侧和右侧chars中列出的字符 str.join(iter) 在 iter 变量除去最后元素外每个元素后增加一个 str ，主要用于字符串分割 1234567891011121314151617181920&gt;&gt;&gt; \"AbCdEfGh\".lower()\"abcdefgh\"&gt;&gt;&gt; \"a,b,c\".split(\",\")['a', 'b', 'c']&gt;&gt;&gt; \"an apple a day\".count(\"a\")4&gt;&gt;&gt; \"低碳钢\".replace(\"钢\",\"钢的屈服极限\")\"低碳钢的屈服极限\"&gt;&gt;&gt; \"python\".center(20, \"=\")'=======python======='&gt;&gt;&gt; \"= python=\".strip(\" =np\")\"ytho\"&gt;&gt;&gt; \",\".join(\"12345\")\"1,2,3,4,5\" ¶字符串类型的格式化 &lt;模板字符串&gt;.format(&lt;逗号分隔的参数&gt;) 槽：相当于一个占位信息符，用 {} 表示，只在字符串中有用。每一个槽所要添加的信息与 .format 方法中对应的参数相一致，在不指定的情况下顺序一致，参数序号从 0 开始。在确定槽中对应的关联参数之后，可以对这个参数的输出格式进行相关的控制，在槽内部使用格式化的标记来进行格式控制。 槽内部对格式化的配置方式：{&lt;参数序号:&lt;格式控制标记&gt;} 12&gt;&gt;&gt; print(\"{0:b}, {0:c}, {0: d}, {0: o}, {0: x}, {0: X}\".format(425))'110101001, Ʃ, 425, 651, 1a9, 1A9'","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-6.序列类型","date":"2022-07-30T12:33:50.000Z","path":"2022/07/30/python-06-序列类型/","text":"不可变序列类型 不可变序列类型普遍实现而可变序列类型未实现的唯一操作就是对 hash() 内置函数的支持。 hash(object) 返回该对象的哈希值（如果它有的话）。哈希值是整数。它们在字典查找元素时用来快速比较字典的键。相同大小的数字变量有相同的哈希值（即使它们类型不同，如 1 和 1.0）。 这种支持允许不可变类型，例如 tuple 实例被用作 dict 键，以及存储在 set 和 frozenset 实例中。 尝试对包含有不可哈希值的不可变序列进行哈希运算将会导致 TypeError。 可变序列类型 尝试对包含有不可哈希值的不可变序列进行哈希运算将会导致 TypeError。 见:python 3.10.5 文档-可变序列类型 ¶list ¶tuple ¶range 类型表示不可变的数字序列，通常用于在 for 循环中循环指定的次数. 详见:python 3.10.5 文档-range 对象 1234567class range(stop)class range(start, stop[, step])range(n)产生0到n-1的整数序列,共n个range(m,n)产生m到n-1的整数序列,共n-m个","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-5.程序的控制","date":"2022-07-30T10:56:22.000Z","path":"2022/07/30/python-05-程序的控制/","text":"¶程序的分支结构 ¶单分支结构 123456789101112if &lt;条件&gt;: &lt;语句块&gt;summary = eval(input(\"输入总数：\"))rank = eval(input(\"输入排名：\"))if rank / summary &lt; 0.25: print(\"能够保研\")输入总数：85输入排名：20能够保研 ¶双分支结构 1234if &lt;条件&gt;: &lt;语句块1&gt;else: &lt;语句块2&gt; 还有一种紧凑形式, 仅适用于表达简单逻辑的二分支结构的一种紧凑方式. 12345&lt;表达式1&gt; if &lt;条件&gt; else &lt;表达式2&gt;# 当条件成立了, 返回表达式1 的信息, 当条件不成立, else 后面的表达式2 被执行 guess = eval(input())print(\"猜{}了\".format(\"对\" if guess == 99 else \"错\")) 注意: 二分支结构中 if 和 else 对应的是表达式而不是语句 语句可以理解为带赋值形式的有等号构成的语句 表达式是语句中的一部分, 并不支持赋值的功能 ¶多分支结构 1234567if &lt;条件&gt;: &lt;语句块1&gt;elif &lt;条件&gt;: &lt;语句块2&gt; ......else: &lt;语句块n&gt; ¶条件判断及组合 不等于: != 操作符及使用 描述 x and y 与 x or y 或 not x 非 ¶程序的异常处理 把一块要执行的程序放在 try 语句块1中, 如果它一旦出现了异常, 则执行 except 对应的语句块2, 若它不出现异常, 则不执行语句块2 12345678910111213141516try: &lt;语句块1&gt;except: &lt;语句块2&gt;# 增加异常类型标记, 只有在这种异常类型发生时, 才会执行语句块2try : &lt;语句块1&gt;except &lt;异常类型&gt;: &lt;语句块2&gt;例如:try: &lt;...&gt;except NameError: &lt;...&gt; 异常类型的名字是 python 程序内部定义的, 不同于变量, 不需要对它增加字符串表示, 只需要给出异常名称即可. 处理异常的高级手段: 12345678try : &lt;语句块1&gt;except : &lt;语句块2&gt; # 发生异常时执行else : &lt;语句块3&gt; # 在不发生异常时执行finally : &lt;语句块4&gt; #不管异常与否, 对应的语句块一定执行 ¶程序的循环结构 ¶遍历循环 遍历某一个结构形成的循环运行方式 12345678910111213141516for &lt;变量&gt; in range (&lt;参数&gt;) : &lt;被循环执行的语句&gt;for i in range(5) print(i)01234for item in [123, 'py', 456]: print(item, end=',')123,py,456, python 与 c 语言区别:python 函数内的执行语句不用花括号括入,用缩进表示 12345678for i in range(5): print(\"it is:\", i)it is: 0it is: 1it is: 2it is: 3it is: 4 在保留字后注意不要落下冒号 : for i in &lt;…&gt; 结构还能对文件进行遍历, 并且产生循环: 12for ilne in fi: &lt;语句块&gt; fi 是一个文件标识符, 遍历其每行, 产生循环. 文件标识符: 用户可以对一个外部文件通过 python 函数将文件打开, 若这个文件以字符形式打开, 它就会表示为一个文件的表示的名字, 相当于用一个变量来标识系统中的一个文件, 该变量就叫做文件标识符. 只要后面的变量或者这个数据类型它是一个由多个元素构成的数据类型都可以使用 for in 的方式遍历它其中的每一个元素, 并且根据元素的个数形成相应的循环. ¶无限循环 12while &lt;条件&gt; : &lt;语句块&gt; 反复执行语句块, 直到条件不满足时语循环结束. ¶循环控制保留字 continue : 结束当次循环 break : 结束整个循环. 一个 break 只能跳出一层循环 12345678910111213141516171819202122232425262728293031for c in 'python': if c == 't': continue print(c, end=',')p,y,h,o,n,for c in 'python': if c == 't': break print(c, end=',')p,y,s = 'python'while s != '': for c in s: print(c, end='') s = s[:-1]pythonpythopythpytpyps = 'python'while s != '': for c in s: if c == 't': break print(c, end='') s = s[:-1]pypypypypyp ¶循环的高级用法 循环与 else 联合使用.","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-4.python库","date":"2022-07-30T08:40:13.000Z","path":"2022/07/30/python-04-python库/","text":"Python计算生态=标准库+第三方库 标准库:随解释器直接安装到操作系统中的功能模块 第三方库:需要经过安装才能使用的功能模块 库Library、包Package、模块Module 以 turtle 库为例: ¶调用库的几种方法 ¶form &lt;库名&gt; import &lt;函数名&gt; ¶import 调用库 1import turtle &lt;库名&gt;.&lt;函数名&gt; 使用库函数 1234turtle.setup()turtle.goto()turtle.fd()turtle.bk() 这种方法比较繁琐,每次调用都要带上&lt;库名&gt;. 但好处是特指此函数是库中的函数, 不会出现函数重名的问题 ¶from &lt;库名&gt; import* 1form turtle import* 这种方式比较简洁,不需要每次都加上库名.来调用函数 1234setup()goto()fd()bk() 虽然该方法调用函数比较简单,但是有发生函数重名的可能性 ¶import &lt;库名&gt; as &lt;库别名&gt; 给调用的外部库关联一 个更短、更适合自己的名字 123456import turtle as tt.setup()t.goto()t.fd()t.bk() 用这种方式,冗余的代码量最少,同时又防止了库重名的问题. 推荐","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-3.eval","date":"2022-07-30T08:06:14.000Z","path":"2022/07/30/python-03-eval/","text":"去掉参数最外侧引|号并执行余下语句的函数 12&gt;&gt;&gt; eval(\"1\")1 将字符串 “1+2” 外侧的引号去掉,变成了python可以理解的语句,在python中运行 12&gt;&gt;&gt; eval(\"1+2\")3 将最外侧的引号去掉,无论是单引号还是双引号,剩下一个双引号括住的 “1+2” 12&gt;&gt;&gt; eval('\"1+2\"')\"1+2\" 去掉最外侧的引号,然后以 python 的语句形式来执行剩下的内容 12&gt;&gt;&gt; eval('print(\"Hello\")')Hello","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-2.输入输出","date":"2022-07-30T07:53:43.000Z","path":"2022/07/30/python-02-输入输出/","text":"¶输入 ¶input 大多数情况下都使用 input() 函数从控制台获得用户输入。 123&lt;变量&gt; = input(&lt;提示信息字符串&gt;)TempStr = input(\"请输入：\")input 括号中表达的信息是提示信息字符串，并不作为 变量 字符串中的一部分 ¶输出 ¶print 以字符形式向控制台输出结果的函数. print 函数默认输出字符串之后会换行, 想要不换行, 就要在 print 函数中增加一定的控制. python 中的定义: 123456789101112def print(self, *args, sep=' ', end='\\n', file=None): # known special case of print \"\"\" print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False) Prints the values to a stream, or to sys.stdout by default. Optional keyword arguments: file: a file-like object (stream); defaults to the current sys.stdout. sep: string inserted between values, default a space. end: string appended after the last value, default a newline. flush: whether to forcibly flush the stream. \"\"\" pass \\r : 打印后光标退回到之前的位置; \\n : 打印后换行. 12345678910111213141516print(&lt;拟输出字符串变量&gt;)print(\"低碳钢的屈服极限\")# print 函数的格式化print((\"转换后的温度是{:.2f}C\".format(C)))# {:.2f}表示将变量C填充到这个位置时取小数点后2位,并不会四舍五入dayup = pow(1.001, 365)daydown = pow(0.999, 365)print(\"向上{:.2f}, 向下{:.2f}\". format{dayup, daydown})from random import randomfor i in range(3): x, y = random(), random() print(\"(x, y) = ({}, {})\".format(x, y)) {:.2f}表示将变量C填充到这个位置时取小数点后2位,并不会四舍五入 print 内加逗号, 起到空格的作用. 12345678for i in range(5): print(\"it is:\", i)it is: 0it is: 1it is: 2it is: 3it is: 4 在原逗号的位置,逗号消失,变成了空格.","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"python-1.格式框架","date":"2022-07-29T13:06:26.000Z","path":"2022/07/29/python-01-格式框架/","text":"(Python 3.10.5 文档)[https://docs.python.org/zh-cn/3/library/index.html] (Python 标准库)[https://docs.python.org/zh-cn/3/library/index.html] ¶注释 单行注释，以 # 开头 多行注释，以 ‘’’ 开头和结尾 ¶命名 命名规则:大小写字母、数字、 下划线和汉字等字符及组合 python 的命名是大小写敏感的、首字符不能是数字、不与保留字相同 保留字： 12345678910# 注意大小写and as assert breakclass continue def delelif else except finallyfor from global ifimport in is lambdanot nonlocal or passraise return try whilewith yield False NoneTrue ¶数字类型 整数 浮点数 字符：单引号括入，‘C’ 字符串：双引号括入\"10, 011, 101\"， 在字符串中的编号是从 0 开始的而不是1 字符串索引的两种方式：1.正向递增序号；2.反向递减序号 索引：返回字符串中单个字符。&lt;字符串名&gt;[数字]，如：“低碳钢的屈服极限”[0] 或者 TempStr[-1]表示名为 TempStr 的字符串的倒数第一位字符。 切片：返回字符串中一段字符子串。&lt;字符串名&gt;[数字:数字]，“低碳钢的屈服极限”[1:3] 表示输出字符串的第1个字符到第2个字符，但不到第3个字符，即“碳钢”，或者 TempStr[0:-1] 表示从0开始但不到字符串的最后一个字符的字符串，相当于把字符串中的最后一个字符去掉。 列表（类似于matlab中的数列）：中括号括入[10, 011, 101]，['f', 'F']","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"},{"name":"python","slug":"Language/python","permalink":"http://example.com/categories/Language/python/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"微积分(1)-函数","date":"2022-07-25T01:51:46.000Z","path":"2022/07/25/微积分-1函数/","text":"¶函数的概念 ¶实数与数轴 实数具有两个性质： 有序性（全序性）：任意两个互异的实数 、 都可以比较大小，实数按照由小到大的顺序排列在数轴上； 完备性：任意两个有理点 、 之间都有一个有理点 , 从而它们之间有无穷多个有理点，即有理点处处稠密。因为有理数与无理数的和为无理数，所以无理点也处处稠密。实数充满整个数轴没有空隙就是实数的完备性。 复数没有有序性； 若说有理数或无理数充满整个数轴没有间隙是错误的； 所有的分数都是有理数，无限不循环小数才是无理数，而分数都可以化为有限小数或无限循环小数。 ¶数集与界 自然数集：N ，整数集：Z ，有理数集：Q ，实数集：R 区间：介于两个实数之间的集合。 邻域：设 ,称开区间 为点 的 邻域，记作 去心邻域：称集合 为 的去心 邻域， 记作 。 定义1.1 对于数集 ，若有常数 使得 则说数集 有上（下）界，并称 为数集 的一个上（下）界。 对于既有上界又有下界的数集叫做有界数集，否则为无界数集。 如果某数集上有上（下）界，那么就会有无穷个上（下）界。 公理 凡非空有上界的数集 一定有最小上界 ，称为数集 的上确界，记作 。 命题 非空有下界的数集 一定有最大下界 ，称为数集 的下确界，记作 。 是集合 的上确界等价于： ，必须满足 ，使得 对于最小下确界同理 ¶绝对值 表示 到原点的距离，绝对值的性质： 当 时， 当 时， ¶函数的概念 定义1.2 如果两个变量 和 之间有一个数值对应规律，使得变量 在其可取值的数集 内取得每一个值时，变量 就依照这个规律确定对应的值，则说 是 的函数。记作： 函数概念中有两个要素：1. 对应规律； 2. 定义域。所以说函数 与 是两个不同的函数。定义域不一样 没有说明定义域时，为天然定义域，即：使函数有意义的所有实数的集合。 正函数的值域就是反函数的定义域。 ¶几个常用的概念 ¶函数的几种性质 (1) 奇偶性 奇函数：, 偶函数： 奇函数的和仍为奇函数，偶函数的和仍为偶函数；两个奇函数的积或两个偶函数的积都是偶函数；一个奇函数和一个偶函数的积为奇函数。 (2) 周期性 设函数的定义域为 ，若有常数 ，使得当 时，必有 且： 则称 是周期函数，并称常数 是它的一个周期。 并不是所有的周期函数都有基本周期。 eg: 常值函数 ，所有的正实数都是其周期，没有最小正周期。 (3) 单调性 对于 单调函数： 严格单调函数： (4) 有界性 在定义域上有界（等同于既有上界又有下界）的函数叫做 有界函数。 ¶隐函数和参数方程表示的函数 若变量 之间的函数关系由一个含有 的方程： 给定，则说 是 的隐函数。相应的，把由自变量的算式表示出因变量的函数叫做显函数。如果能将 从隐函数中解出来，就得到它的显函数形式，但不是所有隐函数都能表示成显函数。 注意，也并不是任意一个含有 的式子就是一个隐函数，如： 就不是隐函数。 只有一个量在动，所决定的是曲线； 两个量在动，所决定的是曲面。 例题 设函数 满足关系 其中 为常数，，求函数 。 解： 由所给关系式知，若 在点 处有定义，则在点 处也有定义。由所给关系式得： 两式联立，解代数方程组得 ¶单值函数与多值函数、反函数 反函数：两个不但涉及到的自变量与因变量对换，且涉及到的运算顺序都是相反的函数。 反函数的图形关于直线 对称 单值单调的函数有反函数，其反函数也是单值单调的函数。 ¶初等函数 ¶基本初等函数 幂函数： 指数函数： 对数函数： 三角函数 … 和差化积 积化和差 三角函数无反函数，确定在某一个单调区间上有，但此时已不是原来的函数了。 ¶复合函数与初等函数 称为由函数 和 构成的复合函数， 叫做中间变量。 初等函数：由基本初等函数经过四则运算和有限次符合而来，并能用一个式子表达的函数。 双曲正弦： 双曲余弦： 双曲正切： 双曲余切： ¶极坐标 M 为平面上任意不在极点的点，极径 ：由 到 的距离；极角 ：射线从 第一次逆时针旋转到 位置所转过的角度。 ¶极坐标与直角坐标的关系","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"微积分","slug":"Math/微积分","permalink":"http://example.com/categories/Math/%E5%BE%AE%E7%A7%AF%E5%88%86/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"结构动力学-2单自由度系统的强迫振动","date":"2022-07-23T12:34:36.000Z","path":"2022/07/23/结构动力学-2单自由度系统的强迫振动/","text":"¶受迫振动 受迫振动(Forced Vibration)：即振动系统在外界干扰力或干扰位移作用下产生的振动。外界不断对振动系统输入能量，才能使振动得以维持而不至于因阻尼存在而随时间衰减。 对于线性系统, 根据叠加原理, 可以分别求系统对于初始条件的响应和对于外部激励的响应, 然后再合成为系统的总响应。 外激励可能为：力 - 位移 - 加速度形式 例如：车的上下颠簸是位移形式 ¶简谐激励的响应 运动方程： 是一个显含时间的线性常系数非齐次微分方程。 经过标准化： 瞬态响应： 在受迫振动中由于阻尼因素导致的能量损耗, 自由振动响应将随时间衰减而最后消失，是非齐次微分方程的通解部分。 稳态响应： 强迫振动响应不随时间衰减，是非齐次微分方程的特解部分。 微分方程的特解与系统的初始条件无关 — 所以稳态响应又称为系统对激励的零初始状态响应。 ¶数学分析解法 先修知识：常系数非齐次线性微分方程 方程非齐次部分为： 对比一般非齐次项： 和非齐次方程的特解： , , , 可设特解为： 带入到微分方程中，可得： 解得： 有阻尼简谐振动既改变幅值大小又改变相位，简谐激励下的有阻尼单自由度系统的稳态振动有如下规律: 系统对谐波激励的响应仍是等幅 简谐波: 运动规律由激励力的频率 和振幅 以及响应的滞后相位 共同确定; 响应频率与激励频率相同; 响应滞后激励的相位 则与激励频率与系 统固有频率之比及阻尼的大小有关(无阻尼时 ); 强迫振动响应的振幅仅与系统的物理参数( )以及激励力大小和频率有关, 而与初始条件无关。 ¶复数解法 根据欧拉公式： 运动微分方程： 经过变换可化为： 可令 为（复）频响应函数，此值包含了相位信息，是激励频率 的函数。 称幅值因子，对 关于 求导，得极值点为 极大值为： ， 小阻尼情况下约等于 引入符号 ,在工程上称为品质因子(quality factor)。 在有阻尼系统中，外激励 时，响应振幅会显著增大，其大小为与阻尼比有关的极限值。 有阻尼系统在余弦激励下的全解： 用初始条件确定待定常数 , 可得系统的解为: 说明： 前两项指数衰减, 称为系统的瞬态响应, 第 (2) 项称为激励伴生自由振动响应; 瞬态响应过程结束后, 响应以第 (3) 项为主, 其运动状态稳定, 称为稳态响应; 振动从初始到接近稳态响应阶段, 称为振动的过渡过程或暂态过程, 该阶段瞬态响应不可忽略, 该过程的持续时间与阻尼比及系统的固有频率大小有关。","categories":[{"name":"Mechanics","slug":"Mechanics","permalink":"http://example.com/categories/Mechanics/"},{"name":"结构动力学","slug":"Mechanics/结构动力学","permalink":"http://example.com/categories/Mechanics/%E7%BB%93%E6%9E%84%E5%8A%A8%E5%8A%9B%E5%AD%A6/"}],"tags":[{"name":"Physics","slug":"Physics","permalink":"http://example.com/tags/Physics/"}]},{"title":"微积分(4)-三角函数","date":"2022-07-14T07:50:15.000Z","path":"2022/07/14/微积分-3三角函数/","text":"参考：三角恒等式 ¶和差化积、积化和差 ¶和差化积 ¶积化和差","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"微积分","slug":"Math/微积分","permalink":"http://example.com/categories/Math/%E5%BE%AE%E7%A7%AF%E5%88%86/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"微积分(3)-解微分方程","date":"2022-07-13T13:14:27.000Z","path":"2022/07/13/微积分-2解微分方程/","text":"¶常系数齐次线性微分方程 微分方程形式： y的解的形如： 带入上式，解得： 即为上述微分方程的特征方程，其根为特征根。 n个互异的特征根 ,对应着， 为一个基本解组; 若有复特征根，则必成对出现：, 若有重根 若 为重根，对应着： ¶常系数非齐次线性微分方程 微分方程： 微分方程的特征方程: ¶解微分方程的通解 微分方程的解存在且有唯一性。 ¶解微分方程的特解 微分方程等号右边的非齐次项形如： 、是多项式，是它们的次数的最大值，若是特征方程的重特征根，则非齐次方程的特解形如： 、是的次待定多项式，带入原微分方程中可求解、的系数。最终是通解为：","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"微积分","slug":"Math/微积分","permalink":"http://example.com/categories/Math/%E5%BE%AE%E7%A7%AF%E5%88%86/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]},{"title":"结构动力学-1单自由度系统的自由振动","date":"2022-07-12T07:57:42.000Z","path":"2022/07/12/结构动力学-1单自由度系统的自由振动/","text":"对工程实践中的结构振动系统可分为离散模型和连续模型，其中离散模型具有 (可数的)有限个自由度, 而连续模型则用(空间)分布式参数描述、具有(可数的)无限个自由度。单自由度系统是最简单的离散振动系统。 自由度：确定某一个机构系统几何位置的独立参数的数目。 在振动系统中只有质量及其分布、运动阻尼、恢复力特性等少数参数对振动特性及其响应起主导作用，据此，人们提出了集中参数模型。 通常将标准单自由度“质-弹-阻”模型称为其所代表的原系统的单自由度等效振动系统。 ¶单自由度系统的自由振动 ¶构成离散系统的自由振动 ¶离散系统模型元素 组成离散模型的基本理想元素包括 弹性元件(k)、阻尼元件©和质量(惯性)元件(m) ¶弹性元件 实际弹簧的力与变形的关系为： 扭转弹簧（角振动或扭转系统） 在小变形范围内: :扭转弹簧刚度，N·m/rad ¶阻尼元件 常见的阻尼表现为如下三种形式: 粘滞阻尼(Viscous Damping):由物体在粘性流体中运动时受到的阻力所致; 干摩擦(库仑)阻尼(Dry-friction Damping): 由相邻构件间发生相对运动所致的; 滞后阻尼(hysteretic damping)：由材料变形时材料内部各平面间产生相对滑移或滑动引起内摩擦所致的 常见的阻尼模型形式： 粘性阻尼：与相对运动速度成正比,与速度方向相反。 非粘性阻尼： 干摩擦阻尼（库伦阻尼）：由相邻构件间发生相对运动所致的,与正压力成正比, 与速度方向相反. 材料阻尼：一个特定周期内所消耗的能量与振幅的平方成正比, 在相当大范围内与振动频率无关。 结构阻尼：连接面、边界支撑间的相对滑动、摩擦和间歇接触。 流体阻尼：与速度平方成正比, 与速度方向相反。 如无特别说明, 本课程所涉及的阻尼均指粘滞阻尼 如无特别说明, 本课程所涉及的阻尼均指粘滞阻尼, 其阻尼力与阻尼器(用 c 表示)两端的相对速度成正比, 如图所示, 其中比例系数 c 称为粘性阻尼系数, 其单位为牛顿秒/米。 ¶惯性元件 系统的质量元件，提供惯性力。 平移振动系统的质量：在平移系统中, 质量的惯性体现为惯性力： 角振动系统的质量：在角振动系统中, 旋转质量元件的惯性体现为惯性力矩 ¶等效刚度 详细见文件02-01-等效刚度.pdf ¶弹性元件的组合 并联：位移相等， 串联：恢复力相等， 思考 m = 0：并联 m ≠ 0：串联 m = 0 时，一旦有不平衡的力，加速度瞬间达到无穷大，两边的力必然平衡，为串联。 12+ 实际工程的弹性元件比较复杂，为了方便分析，通常将复杂弹性元件系统简+ 化为一个等价的弹性元件，要通过弹性元件系统等效刚度的计算来实现。 将复杂弹性元件系统简化为一个简单的弹性元件，关键是二者刚度等效。 确定等效刚度的一般方法；弹性元件为储能元件，只有等效弹簧在任意时刻储蓄的势能均与原系统相等时，等效系统才与原系统等效。可以利用势能相等的原理来确定等效刚度。 利用势能相等来确定系统的等效刚度： ¶单自由度系统的运动方程 单自由度振动系统运动微分方程是一个二阶常系数线性微分方程。 是一个二阶常系数线性常微分方程 表示质量 相对于静平衡位置的位移，常数 称为系统参数。 ¶受常值力的系统的建模及其影响 例如在铅锤平面上始终受重力作用的质量快。 静平衡方程： 以向下为正方向，以弹簧原长为坐标原点 相对于动力学系统的静平衡位置给出的运动方程不受类似于重力这类常值力的影响，可以以该静平衡作为位移测量参考量。 基于这一原因, 通常在线性系统的动力分析中, 首先确定静力平衡位置, 以该静平衡位置作为位移测量参考位置, 从而在动力学建模时不考虑常值力的影响。 平衡方程式本身在说明一件事情：朝着某个方向的力（矢量）合力为零。 平衡方程式两边各项的正负号判定方法：选取一个正方向，例如选取向右为正，外力写在等式右边，向右为正号，向左为负号；响应力写在等式左边，位移、速度、加速度均向右为正，在此符号判定系统中的响应均与位移、速度、加速度相反，在正广义位移作用下产生力的项符号为正。 ¶无阻尼自由振动 ¶自由振动 系统由非零初始条件（初始位移、初始速度）所导致的振动称为自由振动。 无阻尼：，自由振动：,则运动方程变为： 称为无阻尼系统自由振动的圆频率，取决于系统的固有参数而与其它条件无关，通常也称之为系统 的固有(角, 圆)频率(intrinsic frequency)或自然频率(nature frequency)。 ¶无阻尼自由振动的解 先修知识：常系数齐次线性微分方程 特征方程： 特征解为： 根据常微分方程理论，特征解还有的情况，称为平凡解，但振动是平衡位置附件的往复运动，此时的物理意义即为不存在振动，通常不符合实际条件，所以应该舍去平凡解，仅保留非平凡解。 则： 通解为： 非平凡解中待定系数和为积分常数, 需根据系统的初始条件和共同确定。 系统的振动运动是一种圆频率为的简谐振动。 ¶确定积分常数 , , 周期： 在简谐振动中, 完成一个完整运动周期所需的时间定义为系统振动的周期 ¶确定固有频率的方法 系统的固有频率是重要参数，只有 确定了，系统才能确定，方程才能有特定的解。 ¶直接法 而数学模型对应的力学模型是系统的质阻弹模型，在微分方程中： 注意要用等效弹性系数和等效质量计算。 采用直接法确定系统的固有频率，需要先确定系统的等效质量和等效刚度。在系统的质量和弹簧构成比较简单，容易获得系统的质阻弹模型的质量及弹簧刚度时，使用直接法方便简洁。但在系统对应的质阻弹模型的质量或弹簧刚度是不易直接获得的情况下，直接法有时就比较麻烦。 ¶静变形法 在质量弹簧系统中，由静变形与自蠢的关系,可得系统的固有频率： 静变形法实质上是由直接法变换而来，特点是回避了系统的等效质量和等效刚度。 不足之处是，静变形法一般只适用于一个弹性元件和一个质量块的简单振动系统。 ¶能量法 条件：无阻尼自由振动系统属于保守系统。 该方法首先利用能量守恒原理建立系统的运动方程，然后再根据定义确定系统的固有频率。为此先确定系统的动能和势能： 保守系统任意时刻总的机械能守恒即为常数，故有: 对上式两边关于时间求导，得到系统的运动微分方程： 于是可以利用定义来确定系统的固有频率: 式中的 和 是代表的是等效质量和等效刚度。 利用能量法完全可以建立系统的运动方程，而且对于复杂系统较其他方法往往还相对简单。 复杂系统的动能和势能往往由若干部分组成，计算时一定不能落项。 ¶弹簧与阻尼器串联的单自由度系统 ¶有阻尼自由振动 先修知识：常系数非齐次线性微分方程 标准化，得到运动微分方程为： ：阻尼比，或粘滞阻尼因子。 设解的形式为： 此处相当于是自动控制原理当中的拉普拉斯变换求解。可以将该系统看作是一个有阻尼自由振动求解。 带入到微分方程中，得到代数方程即为 特征方程 ： 微分方程的两个解为： 方程 的性质取决于阻尼比 。其关系可以用图2-10所示的复平面图形反映。 系统的通解 ¶先修知识：欧拉公式 ¶无阻尼： 为一对纯虚根。 此时做简谐振动。 ¶小阻尼： 为位于半径为 的圆上的一对共轭复根 为有阻尼固有频率， ，阻尼导致系统运动的振动频率降低。 ¶临界阻尼： 为为位于负实轴上的重根： 临界阻尼状态 是系统振动与非振动运动性质变化的分化点。 ¶过阻尼： 特征根始终在实轴上，随着 , 有： 通解式中的两项均为负指数，因此它表示的运动是一种非振荡的指数律衰减运动，第一项比第二项衰减更快。 ¶对数衰减率 小阻尼情况下振动按指数规律衰减。用对数衰减率来表征系统阻尼的情况，用符号 表示。","categories":[{"name":"Mechanics","slug":"Mechanics","permalink":"http://example.com/categories/Mechanics/"},{"name":"结构动力学","slug":"Mechanics/结构动力学","permalink":"http://example.com/categories/Mechanics/%E7%BB%93%E6%9E%84%E5%8A%A8%E5%8A%9B%E5%AD%A6/"}],"tags":[{"name":"Physics","slug":"Physics","permalink":"http://example.com/tags/Physics/"}]},{"title":"导航原理","date":"2022-06-25T08:05:22.000Z","path":"2022/06/25/导航原理/","text":"大体做一下射电天文学的概念，它能解决什么问题。 它和导航有什么关系，它的某一项或者某几项技术技术在导航方面的贡献，是提高了精度啊还是引入了新型导航方法啊…… 以及这个技术的原理/实现方法 ¶射电天文学概述 ¶射电天文学简介 -------------------------------------------------- 射 电天文导 航作 为天 文导 航技 术 的一个 分支 ，是光学 天 文导航 的有 益 补 充 和 拓展 。本 文 提 出 以射 电天文 导 航系统 在 小 口径射 电天 线 的情况 下对 太 阳 、卫星 等信 标进 行测 量 ，可 达 到 相 当 高 的跟 踪 定 位 精度 ，目前 该 系统 已成 功应 用于 某 型天文 导航 设备 中。 ---------------------------------------------------- 天文学的研究对象是地球大气层之外天体的形成、演化、动力学以及其它特性，这些天 体包括太阳及其行星、彗星、恒星、星系、空间中的弥漫物质以及宇宙本身。 例如“宇宙是如何开始的（或宇 宙有开端吗）？”、 “宇宙有多大？”、 “宇宙的年龄是多少？” 以及“宇宙如何终结（或是宇宙会终结吗）？” 作为一门解释我们及我们所在的行星在宇宙中位置的科学，天文学对 于整个人类具有非常重要的文化意义。现在的许多发现，如黑洞、类星体等已经经常出现在人们的日常对话中。 但是单凭光学无法满足观测天文发展的需求，天文学家在整个可用的电磁频谱范围内开展观测，观测范围远远超过了视觉或“光学” 区域。 每个频率范围都拥有独特的观察视角，且通常需要该频率范围专用的望远镜和探测 器。射电天文学家研究的是在无线电频谱范围内特定频率上发射或吸收能量的天体：在地面上，研究工作可以在13 MHz至2 000 GHz范围内任何一处大气层完全透明的区域内开展。 ¶射电天文学的作用 探测宇宙 宇宙的一些组成部分只能借助其在无线电频率方面的特征进行研究。特别是宇宙中最为 丰富的物质成分 – 中性氢（HI），它只能通过其在1 420 MHz频率处的谱线观测。 值得注意的是，一旦绘制出HI在我们所在银河系中的分布情况（参见图0.1），便可以最终确定银河 系的中心，清楚地绘制银河系的旋臂，而我们的位置则被确定为位于一个外侧的旋臂上。 射电观测可以对过去的光学工作进行 必不可少的补充，这是因为在光学波长，银河中心会被星际尘埃所遮挡，然而，通过容易测量的HI发射线的多普勒频移，则可以确定银河系沿视线方向的分布情况。 通过绘制我们所在银河系的连续辐射，一旦确定了银河系中心的准确位置，便显示出该中心恰好是一个极强的 射电源，近期的近红外（NIR）工作已经证明该处是一个超大质量的黑洞。 这个典型的例子说明，射电天文既是整体天文研究必不可少的部分，同时又可以为电磁频谱范围内其它波长处的观测结果的补充数据。 探测射电源 在某些星系的两侧近乎等距的存在成对的射电源。 这意味着，光学图像所示的这些星系中存在 着与这些星系相关、但又与之距离很远的巨大射电发射区域。 了解宇宙实体 1964年发现近乎各向同性的宇宙微波背景（CMB） 在30至300GHz频率间的天空连续谱观 测显示，CMB具有2.73 K的亮温度。 CMB全天巡天，探测到了地球/太阳/星系相对于CMB的运动带来的多普勒效应以及CMB的 亮温度存在微小的点对点变化（仅有百万分之几）。 提供独立证据证明宇宙的扩张速率在不断提高 探测中子星、脉冲星 在中子发现不久之后，1934年人们即预测了中子星的存在。 1967年，探测到快速发射脉 冲的射电源（脉冲星） 一组飞快旋转、 周期以毫秒计的特定脉冲星可被作为高度准确的时钟使用。 ¶射电天文学在导航中的作用 ¶射电天文导航技术 ¶天文导航技术 天文导航是一种高精度、自主式导航技术。主要以光学和红外为探测手段, 根据恒星天体的精确坐标位置及其已知运动规律, 测量天体相对于航行体参考基准面的高度角, 从而计算出航行体位置与航向。 天文导航与惯性系统组合时, 可产生一个极其精确的导航解;而且星体的方位和高度数据还可用来向惯性系统提供调平信息。所以天文导航技术在现代武器装备系统中显得尤为重要。 ¶射电天文导航技术 天文导航与惯性系统组合时, 可产生一个极其精确的导航解;而且星体的方位和高度数据还可用来向惯性系统提供调平信息。所以天文导航技术在现代武器装备系统中显得尤为重要。 射电探测是20世纪30年代发展的一种天文观测技术, 其利用微波辐射技术对天体辐射的射电信号进行探测。天体射电虽然很弱, 但处于大气窗口波长的天体射电信号受天气影响很小, 利用天体射电信号实现天文导航, 可克服气象条件及昼夜明暗的限制[1]。因此射电导航开辟了天文导航技术新领域, 为实现装备化奠定了基础。 ¶守时系统的支撑体系 射电天文系统包括高增益天线、低噪声接收机、固态振荡器和倍频器。参量放大器、低 温冷却的砷化镓场效应晶体管放大器、HEMT放大器和SIS混频器等的开发都受到射电天文 学需求的促动或影响。这些发展已使得接收机可以再在极宽带宽且温度低至2 K 状态下工 作。目前，在一些频率实现的噪声温度已接近技术上可能达到的量子极限。一些最尖端的深 空电信系统使用这些技术，其本地振荡器按照原子频率标准实现亚皮秒单位的时间同步。这些标准用作地面和空间导航系统守时系统的支撑体系。 ¶无线电干涉测量技术——地面和空间导航 随着时间的推移，天文学对地面和空间导航做出重要贡献。水上导航无线电六分仪的发 展实现了在阴雨天准确定位。最近无线电干涉测量技术一项应用，是关于多点定位的手机紧 急定位，它是以附近天线杆收到的信号强度为基础。通过准确计算一物体发射的信号到达三 个或以上接收机（TDOA）的时差，可以对该物体精确定位这，亦可通过测量三个或以上发射机发射信号的TDOA用于定位接收机。 ¶毫秒脉冲星计时观测——时间与频率标准 出于需要，甚长基线干涉测量（VLBI）团体发展了非常稳定和精确的时间标准和授时 方法，授时方法的不确定度为10-16分之几秒。这些系统后来被商业开发，现用于卫星导航、航天通信和国防等目的。通过为国际测地与天体测量（IVS）服务的VLBI维护工作，全球卫星导航业务（RNSS）系统（GPS、Glonass、Galileo）的时间和协调系统与地球和宇宙相关联。 精确的人造时钟迎来了安全导航的时代。国际时间局不断探索制造更加精确的时钟，目 前通过综合世界各地原子钟数据确定时间。但射电天文学家开展的毫秒脉冲星计时观测，是 对国际原子时标准长期稳定性进行独立检查的最佳方式。计时观测是利用最稳定的脉冲星进 行的，以最大限度减少沿视距方向星际介质电子成分长期变化的任何影响，而且最大限度地 减少单个脉冲星的异常表现。也可通过对比双星系统中毫秒脉冲星的计时观测结果与系统轨道参数的符合程度，独立地检查国际原子时标准的长期稳定性。 ¶地面VLBI技术和精确的多普勒跟踪——太阳系内高精度空间导航任务 虽然开发VLBI技术的目的是收集有关天体详细结构和位置的数据，但该技术亦用于许 多其他用途。因此，精准测量的遥远类星体和射电源的VLBI位置可为人类提供最精确的空 间参考坐标系。利用天体作为参考点，地面VLBI就可测量望远镜在地球上的固有运动，如 由于大陆漂移或断层构造板块滑移造成的运动。这些测量结果有助于估计发生地震的可能 性。目前已成立了国际甚长基线干涉测地与天体测量服务组织（IVS），提供支持测地、地 球物理和天体测量研究和操作的服务5。地面VLBI技术和精确的多普勒跟踪亦用于太阳系内 高精度空间导航任务。因此，在ESA惠更斯号探测器进入土星卫星Titan（土卫六）大气层时就对其位置进行了精确跟踪 ¶VLBI的大地测量学 VLBI是测量和监测地球的重要手段。通过世界范围内不同地点天线构成的网络以及具 有精确测定位置的射电源系统，可以确定一对天线之间的距离，精确度可达到若干毫米。 VLBI是唯一提供完整地球方位参数（EOPs：白昼长度和极点方位）的大地测量技术，它可 针对惯性天球参考架（CRF）获得地球的位置（前者由类星体表描述）。通过测量EOP， VLBI可提供地球参考架（TRF）的绝对方位以及比例。EOP对于航天器导航至关重要，但它 们在短时间内更迭变化且无法预测，因此需要进行定期测量，例如，没有VLBI，则无法进 行全球定位系统（GPS）卫星数据的校准。国际大地测量学和天文学VLBI服务组织（IVS）（Schuh和Behrend，2012年），负责对CRF进行充实和完善并定期测量EOP。 ¶深空网中最基本的组成部分 完整意义上的深空网由射电天文观测系统、太阳系雷达和深空联合体所构成。 ¶多普勒测速的卫星导航定位技术原理简述 采用双曲面交会定位原理。用户接收导航卫星发送的无线电信号，根据多普勒频移效应，测定用户到导航卫星的相对速度，得到用户到两颗导航卫星的距离差，从而构成两个以上的双曲面， 再通过双曲面相交形成双曲面交会点，从而推算出用户位置。美国于1960年4月开始发射的“子午仪”导航卫星就是采用这种方式。1957年，美国两位科学家在跟踪苏联首颗卫星时无意中发现， 收到的无线电信号有多普勒频移效应，即卫星在飞近地面接收机时收到的无线电频率逐渐增高，飞远时则逐渐降低。科学家对这种现象认真研究后产生灵感，卫星的轨道可由地面站测得的 多普勒频移曲线确定，若知道卫星的精确轨道，就能确定地面接收机的位置。该技术的缺点是不能连续实时导航、两次定位时间间隔太长、只能提供二维定位，对高速移动物体测量误差较大等。","categories":[{"name":"Electricity","slug":"Electricity","permalink":"http://example.com/categories/Electricity/"},{"name":"导航原理","slug":"Electricity/导航原理","permalink":"http://example.com/categories/Electricity/%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86/"}],"tags":[{"name":"专业课","slug":"专业课","permalink":"http://example.com/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"}]},{"title":"MATLAB","date":"2022-06-25T07:37:27.000Z","path":"2022/06/25/MATLAB/","text":"¶基本命令 ¶Tips tab键代码补全 特殊符号的输入：\\pi = pi markdown中特殊符号的输入 https://blog.csdn.net/Haiyang_Duan/article/details/78844292 输入计算公式时，建议由两个以上组成的特殊运算符一次性输完。如：“()”、“[]” 保存M.文件，文件名可以包含字母、数字、点和下划线，但不能以数字开头 matlab默认弧度运算，若想要运用角度运算，则一般在原函数名后加d。例如sin弧度运算，sind角度运算。或者使用angle函数，强制将弧度值转化为角度值 ¶文件操作 列文件名、显示或删除文件、显示或改变当前目录等（what、dir、type、delete删除文件、cd、which文件定位） 功能 命令句型 显示文件内容 type 打开文件 open 定位函数文件 which 列出文件夹中的文件 dir 列出matlab文件 what dir&gt;what 打开指定文件显示其详细内容 open filename 显示某个文件的路径 which filename ¶工作区操作 变量操作 clear 删除工作区所有变量 clear 变量名 删除工作区指定变量 save 载入变量 save filename variables 将变量列表variables所列出的变量保存到磁盘文件filename中。variables所表示的变量列表中，不能用逗号。未列出variables时表示将当前工作空间中所有变量保持到磁盘文件中 load 载入变量 load filename variables 将以前用save命令保存的变量variables从磁盘文件中调入MATLAB工作空间。用load 命令调入的变量，其名称为用save命令保存时的名称，取值也一样。variables所表示的变量列表中，不能用逗号，各个不同的变量之间只能用空格来分隔。未列出variables时，表示将磁盘文件中的所有变量都调入工作空间。 在命令窗格中输入doc 函数名搜索函数用法 ¶其他操作 组合键：“ctrl+c”——终止程序。用于终止无限循环 1234i=1while i&gt;0 i=i+1;end %此时使用Ctrl+C终止程序 向命令窗口输入数值：variablename=input('any message'),用于调试和交互式仿真 时间函数tic、toc tic 秒表计时器开始 toc 秒表计时器结束 123456789t = zeros(1,100); %for n =1:100 %循环次数，默认步长1 A=rand(n,n); %0-1分布的随机变量 b=rand(n,1); tic; x=A\\b; %\\/左除、右除，符号向哪歪-哪分母 t(n)=toc; endplot(t) 除后的余数rem() r = rem(a,b) 返回 a 除以 b 后的余数，其中 a 是被除数，b 是除数。此函数通常称为求余运算，表达式为 r = a - b.*fix(a./b)。rem 函数遵从 rem(a,0) 是 NaN 的约定。 ¶运算符ops ¶三角运算 以sin为例,cos,tan同理 运算符 function sin 弧度制 sind 角度制 sinh 双曲正弦 asin 反正弦弧度制 asind 反正弦角度值 asinh 反双曲正弦 atan2 第四象限反正切 hypot hypot(a, b)平方和的平方根(斜边) deg2rad 将角度从度到弧度转换为弧度 rad2deg 将角度从弧度转换为度数 ¶指数函数、对数函数 命令及句型 功能 exp(x) 指数函数,返回expx的值，在matlab中无法以e输入自然数，自然数的表达为exp(1) log(x) matlab中log默认的是以自然对数e为底返回in(x)的值 log10(x) 常用对数，以10底。matlab中指定底数语法：loga(b) pow2(F,E) 求以2为底的幂值并对浮点数字进行缩放,返回 f*2e,F缺省则默认为1 sqrt(x) 开平方 power(A,B) .^ 返回ab ¶矩阵运算 Matlab的数组运算符需要在运算符前加“.”才能完成运算，例如“.*”、“. ^”。 数学表述 程序表述 数学表述 程序表述 aij+bij A+B a+ bij a+B aij-bij A-B a－bij a-B aij×bij A.*B a×bij a.*B aij/bij或bij\\aij A./B或B.\\A a/bij或bij\\a a./B或B.\\a aij^bij A.^B a.^B A的非共轭转置 A.’ A/B，相当于A*inv(B)；A\\B，则相当于inv（A）*B 在MATLAB中数组运算与矩阵运算在“加”和“减”运算上的算符是一致的，即“.+”等同于“+”，“.-”等同于“-”。 矩阵赋值用中括号[ ] A = [0 1; 1 0] ¶复杂运算 函数 function abs(x) 返回标量的绝对值和向量的模 angle(Z) Z为一个复数，返回Z的向位角 fix(x) 舍去小数取整 floor(x) 四舍五入取整 sign(x) 取符号 ¶关系运算 运算符 含义 运算符 含义 &lt; 小于 &gt;= 大于等于 &lt;= 小于等于 == 等于 &gt; 大于 ~= 不等于 ¶逻辑运算 与(&amp;)、或(|)、非(~) ¶特殊运算符 []表示矩阵创建，()矩阵元素提取；()函数输入，[]表示函数输出 换行符“…” @函数名前形成函数句柄，如fhandle=@function_name。 符号“：” 表示“所有” j:k，默认步长1，到&lt;=k的数截至； j:i:k，步长i，i可以取负数 1234A = [ 1,2,3,4; 5 6 7 8; 9,10,11,12] %创建矩阵AA(:,2) = [] %删去第2列A = [A; 1 2 3 4] %增补一行A([1,4],:) = [] %删去1,4行 ¶基本矩阵操作elmat ¶注意说明 在MATLAB中如果要想表示一个矩阵是非常容易的，不需事先定义，可直接赋值。定义形式为：变量＝表达式 向量运算和矩阵运算相同 .^(1/2) = sqrt end在矩阵中可以表示最后一行（列）、最后一元素。例如：a=A(end,1:end-1)， “：”功能：矩阵取值区间, :表示所有 矩阵的维度必须保持一致。矩阵的除法有左除和右除两种，分别采用运算符“\\”和“/”,相当于X=inv(A)*B和X=B*inv(A) ¶矩阵函数 注意在matlab中的语法默认按列进行排序 函数名 function grammar zeros 创建全零数组 x = zeros, zeros(n), zeros(m, n) ones 创建全部为 1 的数组 x = ones, ones(n), ones(m, n) rand 均匀分布的随机数 x = rand, rand(n), rand(m, n) eye 单位矩阵 x = eye, eye(n), eye(m, n) diag 创建对角矩阵或获取矩阵的对角元素 D = diag(矩阵)返回主对角线列向量，D = diag(向量)返回包含主对角线上向量的元素的对角矩阵 cross(A,B) 向量或矩阵叉乘 若A、B为向量则必须为3维，若A、B为矩阵，则返回一个3×n矩阵，其中的列是A与B对应列的叉积，A、B都是3×n矩阵。 dot(A,B) 元素或向量点乘 A和B的第i列上元素相乘后相加，得结果为一行向量 A*B 线性代数中的AB A.*B AB中的对应元素相乘 blkdiag 分块对角矩阵 B = blkdiag(A1,…,AN) 返回通过沿 B 的对角线对齐输入矩阵 A1,…,AN 创建的分块对角矩阵 norm 向量范数和矩阵范数 norm默认返回2-范数，也即向量的模或欧几里德长度，n = norm(v,p) 返回广义向量 p-范数 det 矩阵行列式 d = det(A) 返回方阵 A 的行列式 inv 矩阵求逆 Y = inv(X) 计算方阵 X 的 逆矩阵， 相当于X^(-1) lu 矩阵LU分解 [L,U]=lu(A)，产生一个上三角矩阵U和一个下三角矩阵L，使得矩阵L和矩阵U满足关系式A=L*U qr 矩阵正交分解 [Q,R]=qr(A)，返回一个与A维数相同的上三角矩阵R和一个正交矩阵Q，使得满足关系式A=Q*R eig 矩阵特征值分解 [V,D]=eig(A)，返回矩阵V和D，其中V是以矩阵A的特征向量作为列向量组成的矩阵，而D是由矩阵A的特征值作为主对角线元素构成的对角矩阵。满足关系A*V=Vz*D svd 矩阵奇异值分解 [U,S,V]=svd(A)返回一个与A矩阵维数相同的对角矩阵S，正交矩阵U和正交矩阵V，满足关系式A=U*S*V’ find 矩阵非0元素检测 Ind=find(X)，返回非零元素所在位置，返回的不是元素，也不是零元素 max() min() mean() 求最大值、最小值、平均值 矩阵则返回每列最大、最小和每列的平均值，向量则返回最大、最小的元素和所有元素的平均值. median() 返回从大到小排列的中间值中间值 矩阵则返回每列的中间值，向量则返回所有元素的中间值。若元素个数为偶数则返回中间两个值的平均值 std() var() 标准差、方差 若为一行则求一行的标准偏差和偏差；若为多行，则求每一列的标准偏差和偏差。 sum() 求和 若为矩阵则返回每列元素的和，若为向量则返回所有元素的和 sort() 按升序排列 返回对矩阵中的元素按列升序排列的新矩阵 diff(X, n) 计算差分,类似于微分 若X为矩阵，则返回第 i+1 行减去第 i 行元素的结果，若为向量，则返回第 i+1 个减去第 i 个元素的结果。n 的含义递归应用 diff(X) 运算符 n 次来计算第 n 个差分，n 缺省则默认为1 特殊变量 function i 虚数单位 inf 无穷 end 矩阵的最后一行（列）、最后一元素 ¶多项式的建立与运算polyval,interp1 对于多项式 P = a0xn + a1xn+1 + a2xn+2 +…+ an-1x + an MATLAB约定用n+1个元素构成的行向量 P = [a0, a1, a2, …, an-1, an]表示n阶多项式。 -------------------------------------------- polyval(p, x) 计算多项式 p 在 x 的每个点处的值。参数 p 是长度为 n+1 的向量，其元素是 n 次多项式的系数（降幂排序）： 例如： 计算多项式 p(x)=3x2 + 2x + 1在点 x=5,7,9 处的值。多项式系数可以由向量 [3 2 1] 表示 1234567p = [3 2 1];x = [5 7 9];y = polyval(p,x)y = 1×3 86 162 262 interp1(x,Y,xi),一维插值已知自变量向量或矩阵数据x，以及其对应的函变量Y值，会生成由这些数据组成的线性函数。任意给定在x的xi，通过上述线性函数，计算yi. 123456x = 0:10; %生成自变量向量或矩阵数据x y = sin(x); %给出x对应的函变量y值 %interp1会生成由这些数据组成的线性函数xi = 0:.25:10; %任意给定在x区间内的xiyi = interp1(x,y,xi); %通过 线性函数，计算yiplot(x,y,&#x27;o&#x27;,xi,yi) %离散点型、线型、颜色 spline(x,Y,xx) 样条插值 ¶积分函数polyint q = polyint(p,k) 使用积分常量 k 返回 p 中系数所表示的多项式积分,若 k 缺省则默认为0. 例如：创建一个向量来表示多项式被积函数 3x4 − 4x2 + 10x − 25。x3项不存在，因此系数为 0。 1234567891011p = [3 0 -4 10 -25];q = polyint(p) %%使用 polyint 和等于 0 的积分常量来对多项式求积分。q = 1×6 0.6000 0 -1.3333 5.0000 -25.0000 0a = -1; %%通过在积分极限上计算 q，求解积分的值。b = 3;I = diff(polyval(q,[a b]))I = 49.0667 ¶基本矩阵信息 求矩阵行数、列数。[m,n]=size(A)返回矩阵的行数m和列数n。 求向量的长度、求取矩阵的最大维数。n=length(X)返回向量X中包含的元素个数n ¶向量操作 等差向量 命令生成。 Z = [start : step : end]， Z = 1:2:6 -&gt; Z = 1 3 5。用此方法，最后的元素不一定会出现。 linspace向量操作。 Z = linspace(第一个元素, 最后元素, 生成向量元素的个数), 生成向量元素的个数缺省时默认为100个。用此方法，最后元素一定出现。 ¶元胞数组cell 元胞数组是一种包含名为元胞的索引数据容器的数据类型，其中的每个元胞都可以包含任意类型的数据。元胞数组通常包含文本列表、文本和数字的组合或者不同大小 的数值数组。通过将索引括在圆括号 () 中可以引用元胞集。使用花括号 {} 进行索引来访问元胞的内容。 语法 C = cell(n) 返回由空矩阵构成的 n×n 元胞数组。 ¶创建元胞数组 注意：元胞数组的运算和赋值要通过大括号{} 12345678910C = &#123;&#x27;2017-08-16&#x27;,[56 67 78]&#125;C = &#123;1,2,3; &#x27;text&#x27;,rand(5,10,2),&#123;11; 22; 33&#125;&#125; C=2×3 cell array &#123;[ 1]&#125; &#123;[ 2]&#125; &#123;[ 3]&#125; &#123;&#x27;text&#x27;&#125; &#123;5x10x2 double&#125; &#123;3x1 cell&#125;name = &#123;&#x27;my_cos&#x27;, &#x27;my_sin&#x27;&#125;; eventual = &#123;&#125;; %创建空元胞数组 ¶元胞数组的引索 对元胞数组的某一行进行索引。当您使用圆括号 () 进行索引时，将得到一个作为该元胞数组子集的元胞数组。 对元胞的内容进行索引。当您使用花括号 {} 进行索引时，将得到指定元胞中包含的数据段。 12345678910111213141516171819202122232425262728C = &#123;&#x27;2017-08-16&#x27;,[56 67 78]&#125;;C(2,:) = &#123;&#x27;2017-08-17&#x27;,[58 69 79]&#125;;C(3,:) = &#123;&#x27;2017-08-18&#x27;,[60 68 81]&#125;;C(1,:) ans = 1×2 cell 数组 &#123;&#x27;2017-08-16&#x27;&#125; &#123;[56 67 78]&#125; C&#123;1,:&#125; ans = &#x27;2017-08-16&#x27; ans = 56 67 78 C(1, 2) ans = 1×1 cell 数组 &#123;[56 67 78]&#125; C&#123;1, 2&#125; ans = 56 67 78 ¶2D图形生成 ¶二维曲线命令plot 基本调用格式：plot(X1,Y1,LineSpec1,...,Xn,Yn,LineSpecn) 二维绘图指令 指令 description plot Linear plot,绘制x-y图 loglog Log-log scale plot，绘制xy均以lg为单位长度的图 semilogx Semi-log scale plot，绘制x轴以lg为单位长度的图，例如波德图 semilogy Semi-log scale plot，绘制y轴以lg为单位长度的图 polar Polar coordinate plot，绘制极坐标图 plotyy Graphs with y tick labels on the left and right，绘制具有两个y轴的图 ¶linespecn 曲线形状、标记符号、颜色，直接用单引号 ‘’ 括入，依次添加设定 离散数据点形设置值 Marker Description Marker Description ‘+’ 十字符 ‘x’ 叉字符 ‘.’ 实心黑点 ‘*’ 米字符 ’ ’ 短竖线 ‘_’ ‘d’ 菱形 ‘s’ 正方形 ‘^’ 上三角 ‘v’ 下三角 ‘&lt;’ 左三角 ‘&gt;’ 右三角 ‘p’ 五角星 ‘h’ 六角星 ‘o’ 圆 连续线型设置值 Line Style Description Line Style Description - 细实线 – 虚实线 : 冒虚，虚点线 -. 点划线 颜色 Color Description Color Description Color Description Color Description y 黄色 m 粉色 c 浅蓝色 r 浅红色 g 绿 b 蓝 w 白 k 黑 ¶plot函数的属性调用 上一小节简单介绍了plot的基本调用格式，而plot绘制的曲线的几何形状及色彩都是其属性表现，还可以通过如下调用格式来对曲线的属性进行设置。lot(x,y,’s’,'PropertyName',PropertyValue,...) 属性名 含义 属性值 ‘LineStyle’ 线条类型 举例如‘-.’ ‘LineWidth’ 线条宽度 正实数 ‘Color’ 线条颜色 ‘r’‘y’等 ‘Marker’ 离散点型 参见表3-2，如‘h’ ‘MarkerSize’ 离散点的大小 正实数 ‘MarkerEdgeColor’ 离散点边界色彩 ‘r’‘y’等 1234567clc;clear;x = -pi:pi/10:pi;y = tan(sin(x)) - sin(tan(x));plot(x,y,&#x27;--sr&#x27;,&#x27;LineWidth&#x27;,2,... &#x27;MarkerEdgeColor&#x27;,&#x27;k&#x27;,... &#x27;MarkerFaceColor&#x27;,&#x27;g&#x27;,... &#x27;MarkerSize&#x27;,10); 属性和命令不同，属性名不区分大小写，但属性值不一定，例如\\ 导引特殊 \\alpha \\Alpha 首写大小写区分符号大小写 在同一个窗口绘制多条曲线,可以使用如下命令： 123plot(x,y,linespec)plot(x,y,’s’,&#x27;PropertyName&#x27;,PropertyValue,...) plot(x1,y1,option1,x2,y2,option2,…) ¶多子图subplot 12345678910111213141516171819202122232425262728%控制坐标轴刻度t=[0:pi/20:5*pi];plot(t,sin(t),&#x27;r:*&#x27;) %红色 虚点线 米字符axis([0 5*pi -1.5 1.5 ]) %设置x轴，y轴范围xlabel(&#x27;t(deg)&#x27;) ; ylabel(&#x27;magnitude&#x27;) %给x轴和y轴命名title(&#x27;sine wave from zero to 5\\pi&#x27;)%给图形加标题%生成多子图subplot(2,2,1);x = linspace(-3.8,3.8);y_cos = cos(x);plot(x,y_cos);title(&#x27;Subplot 1: Cosine&#x27;)subplot(2,2,2);y_poly = 1 - x.^2./2 + x.^4./24;plot(x,y_poly,&#x27;g&#x27;);title(&#x27;Subplot 2: Polynomial&#x27;)subplot(2,2,[3,4]);plot(x,y_cos,&#x27;b&#x27;,x,y_poly,&#x27;g&#x27;);title(&#x27;Subplot 3 and 4: Both&#x27;)%创建坐标系ax1 = axes(&#x27;Position&#x27;,[0.1 0.1 0.7 0.7]);ax2 = axes(&#x27;Position&#x27;,[0.65 0.65 0.28 0.28]);%指定第一个 Axes 对象的位置，使其在点 (0.1 0.1) 处有一个左下角，宽度和高度为 0.7。 指定第二个 Axes 对象的位置， %使其在点 (0.65 0.65) 处有一个左下角，宽度和高度为 0.28。 默认情况下，这些值被标准化为数字。 将 Axes 对象返回为 ax1 和 ax2。 ¶图形注释类命令 支持latex语法 命令 功能 title() 增加图题,位于图表之上 xlabel 为x轴增加标签,位于x轴下方居中对齐 ylabel 为y轴增加标签，文字旋转90°居中对齐位于y轴左方 text 在图中文本注释 gtext 利用鼠标添加文本注释 legend 增加图例 12345678910111213141516171819plot((1:10).^2)ylabel(&#123;2010;&#x27;Population&#x27;;&#x27;in Years&#x27;&#125;)x = linspace(0,pi);y1 = cos(x);plot(x,y1)hold ony2 = cos(2*x);plot(x,y2)y3 = cos(3*x);plot(x,y3)y4 = cos(4*x);plot(x,y4)hold offlegend(&#123;&#x27;cos(x)&#x27;,&#x27;cos(2x)&#x27;,&#x27;cos(3x)&#x27;,&#x27;cos(4x)&#x27;&#125;,&#x27;Location&#x27;,&#x27;northwest&#x27;,&#x27;NumColumns&#x27;,2) 分号’;'表示换行 ¶坐标轴操作 函数 功能 语法 axis[] 控制坐标轴的范围刻度范围 axis[xmin xmax ymin ymax] grid 生成分割线，网格线 grid on, grid off axes() 创建笛卡尔坐标系 axes(‘Position’,[0.65 0.65 0.28 0.28]) hold 图形叠放 hold on， hold off subplot() 绘制多子图 subplot(m, n, i),[m, n]相当于二维矩阵的行、列数，i表示第i个图.此处按行排列 ¶设置坐标轴范围和纵横比axis 1234567axis([0 2*pi -1.5 1.5]) %更改坐标轴范围，使 x 轴的范围从 0 到 2π，y 轴的范围从 -1.5 到 1.5。axis padded %图和图框之间添加填充边距axis off %绘制曲面而不显示坐标区的线条和背景。axis tight %使用紧凑的坐标轴范围并返回值axis ij %坐标系的方向.默认情况下，x 轴的值按从左到右的顺序逐渐增加， %y 轴的值按从下到上的顺序逐渐增加。反转坐标系，这样 y 的值按从上到下的顺序逐渐增加。axis auto %坐标区自动选择合适的范围 ¶添加新绘图时保留当前的坐标轴范围 12345678x = linspace(0,10);y = sin(x);plot(x,y)y2 = 2*sin(x);hold onaxis manual %此时坐标轴范围不再变化plot(x,y2)hold off ¶设置多个坐标轴的坐标轴范围 123456789101112tiledlayout(2,1)x1 = linspace(0,10,100);y1 = sin(x1);ax1 = nexttile;plot(ax1,x1,y1)x2 = linspace(0,5,100);y2 = sin(x2);ax2 = nexttile;plot(ax2,x2,y2)axis([ax1 ax2],[0 10 -1 1]) ¶mode - 用来确定坐标轴范围的手动、自动或半自动选择 值 说明 更改的坐标区属性 manual 将所有坐标轴范围冻结在它们的当前值。 将 XLimMode、YLimMode 和 ZLimMode 设置为 ‘manual’。如果使用的是极坐标区，则此选项会将 ThetaLimMode 和 RLimMode 设置为 ‘manual’。 auto 自动选择所有坐标轴范围。 将 XLimMode、YLimMode 和 ZLimMode 设置为 ‘auto’。如果使用的是极坐标区，则此选项会将 ThetaLimMode 和 RLimMode 设置为 ‘auto’。 ‘auto x’ 自动选择 x 坐标轴范围。 将 XLimMode 设置为 ‘auto’。 ‘auto y’ 自动选择 y 坐标轴范围。 将 YLimMode 设置为 ‘auto’。 ‘auto z’ 自动选择 z 坐标轴范围。 将 ZLimMode 设置为 ‘auto’。 ‘auto xy’ 自动选择 x 轴和 y 坐标轴范围。 将 XLimMode 和 YLimMode 设置为 ‘auto’。 ‘auto xz’ 自动选择 x 轴和 z 坐标轴范围。 将 XLimMode 和 ZLimMode 设置为 ‘auto’。 ‘auto yz’ 自动选择 y 轴和 z 坐标轴范围。 将 YLimMode 和 ZLimMode 设置为 ‘auto’。 ¶style - 坐标轴范围和尺度 值 说明 更改的坐标区属性 tight 将坐标轴范围设置为等同于数据范围，使轴框紧密围绕数据。 XLimMode、YLimMode 和 ZLimMode 更改为 ‘auto’。如果使用的是极坐标区，则 ThetaLimMode 和 RLimMode 将改变。坐标区范围自动更新，以便包含添加到坐标区中的新数据。为了避免在使用 hold on 时范围发生更改，请使用 axis tight manual。 padded 坐标区框紧贴数据，只留很窄的填充边距。边距的宽度大约是数据范围的 7%。 XLim、YLim 和 ZLim。 equal 沿每个坐标轴使用相同的数据单位长度。 将 DataAspectRatio 设置为 [1 1 1]，并将相关的模式属性设置为手动。禁用“伸展填充”行为。 image 沿每个坐标区使用相同的数据单位长度，并使坐标区框紧密围绕数据。 将 DataAspectRatio 设置为 [1 1 1]，并将相关的模式属性设置为手动。禁用“伸展填充”行为。 square 使用相同长度的坐标轴线。相应调整数据单位之间的增量。 将 PlotBoxAspectRatio 设置为 [1 1 1]，并将相关的模式属性设置为手动。禁用“伸展填充”行为。 fill 启用“伸展填充”行为（默认值）。每个轴线的长度恰好围成由坐标区的 Position 属性所定义的位置矩形。 将图框纵横比模式和数据纵横比模式的属性设置为自动。 vis3d 冻结纵横比属性。 将图框纵横比模式和数据纵横比模式的属性设置为手动。 normal 还原默认行为。 将图框纵横比模式和数据纵横比模式的属性设置为自动。 ¶指定x、y的刻度值和标签 函数名 作用 xticks 设置或查询 x 轴刻度值 xticklabels 为每个刻度线指定一个标签 yticks 设置或查询 y 轴刻度值 yticklabels 为每个刻度线指定一个标签 12345x = linspace(0,10);y = x.^2;plot(x,y)xticks([0 5 10]) % 实质是一个数组，存放x轴的刻度值xticklabels(&#123;&#x27;x = 0&#x27;,&#x27;x = 5&#x27;,&#x27;x = 10&#x27;&#125;) ¶网格线操作 ¶显示网格线 grid on，创建条形图并显示网格线。网格线显示在刻度线处。 1234567y = rand(10,1);bar(y)grid ongrid minor %在刻度线之间添加次网格线grid off %关闭所有网格线 ¶关闭特定方向上的网格线 12ax.XGrid = &#x27;off&#x27;; %关闭特定方向上的网格线ax.YGrid = &#x27;on&#x27;; ¶编辑网格线布局 网格线显示在刻度线位置。通过更改刻度线位置可编辑网格线的布局。 12xticks(0:0.2:1)yticks([0 0.5 0.8 1]) ¶修改网格线的可视外观 更改区域图网格线的颜色、线型和透明度。通过访问 Axes 对象修改网格线的外观。然后设置与网格相关的属性，例如 GridColor、GridLineStyle 和 GridAlpha 属性。通过设置 Layer 属性可在绘图上显示网格线。 123456789y = rand(10,1);area(y)grid onax = gca;ax.GridColor = [0 .5 .5];ax.GridLineStyle = &#x27;--&#x27;;ax.GridAlpha = 0.5;ax.Layer = &#x27;top&#x27;; ¶向数据点添加文本说明text ¶语法 text(x,y,txt) text(x,y,z,txt) text(_,Name,Value) text(ax,_) t = text(___) 12345678x = linspace(-5,5);y = x.^3-12*x;plot(x,y)xt = [-2 2];yt = [16 -16];str = &#123;&#x27;local max&#x27;,&#x27;local min&#x27;&#125;;text(xt,yt,str) ¶输入参数z x：第一个位置 y：第二个位置 z：第三个位置 txt：要显示的文本 ¶文本属性名称-值对组参数 属性 作用 示例 ‘FontSize’ 字体大小 数值（double、int） ‘FontWeight’ 字符粗细 ‘normal’ （默认） 、‘bold’ ‘FixedWidth’ 字体名称 \\ ‘Color’ 文本颜色 ‘blue’、 [0 0 1]、‘#0000FF’ ‘HorizontalAlignment’ 相对于位置点水平对齐文本 ‘left’ （默认）、‘center’ 、‘right’ ¶matlab关键词 123iskeyword &#123;&#x27;break&#x27; &#125;&#123;&#x27;case&#x27; &#125;&#123;&#x27;catch&#x27; &#125;&#123;&#x27;classdef&#x27; &#125;&#123;&#x27;continue&#x27; &#125;&#123;&#x27;else&#x27; &#125;&#123;&#x27;elseif&#x27; &#125;&#123;&#x27;end&#x27; &#125;&#123;&#x27;for&#x27; &#125;&#123;&#x27;function&#x27; &#125;&#123;&#x27;global&#x27; &#125;&#123;&#x27;if&#x27; &#125;&#123;&#x27;otherwise&#x27;&#125;&#123;&#x27;parfor&#x27; &#125;&#123;&#x27;persistent&#x27;&#125;&#123;&#x27;return&#x27; &#125;&#123;&#x27;spmd&#x27; &#125;&#123;&#x27;switch&#x27; &#125;&#123;&#x27;try&#x27; &#125;&#123;&#x27;while&#x27; &#125; ¶程序内部设计lang 编程的目标是：以最小的代码重复度、最简捷的流程控制，实现多种功能。为实现这一目标，需要学习以下知识点。 ¶控制流 ¶选择结构 if elseif 如果逻辑表达式1的值为真，则执行语句1；如果为假，则判断逻辑表达式2，如果为真，则执行语句2，否则向下执行。 语法 1234567if expression statements elseif expression statements else statementsend end 是终止 for、while、switch、try、if 和 parfor 语句的关键字。若没有 end 语句，则 for、while、switch、try、if 和 parfor 会等待进一步输入。 end 的每个实例与先前最近的未成对的 for、while、switch、try、if 或 parfor 语句配对使用。 end 也表示数组的最后一个索引。例如，X(end) 是 X 的最后一个元素，X(3:end) 选择 X 的第三个到最后一个元素。 ¶循环结构 for 循环 步长缺省时为1 123for index = begin:step:end statementsend whlie 循环 123while expression statementsend ¶分支结构 switch, case, otherwise 语法 123456789switch switch_expression case case_expression statements case case_expression statements ... otherwise statementsend 例如 1234567891011n = input(&#x27;Enter a number: &#x27;);switch n case -1 disp(&#x27;negative one&#x27;) case 0 disp(&#x27;zero&#x27;) case 1 disp(&#x27;positive one&#x27;) otherwise disp(&#x27;other value&#x27;)end ¶continue break return continue 将控制权传递到 for 或 while 循环的下一迭代。它跳过当前迭代的循环体中剩余的任何语句。程序继续从下一迭代执行。在嵌套循环中，continue 仅跳过循环所发生的循环体内的剩余语句。 break 终止执行 for 或 while 循环。不执行循环中在 break 语句之后显示的语句。在嵌套循环中，break 仅从它所发生的循环中退出。控制传递给该循环的 end 之后的语句。 返回到上一级调用函数或等待键盘输入命令，提前结束程序;可以用在循环体内，也可以用在非循环体内。 对break与continue功能进行验证 1234567891011function ai = break_continue(x)ai=[];i=1;%空矩阵while i&lt;=x ai=[ai,i]; if i==1; disp(&#x27;执行控制流命令&#x27;); continue; disp(’如果显示此句，说明控制流后命令被执行) i=i+1; endend 运行一下程序解释运行结果即详细描述程序运行过程 123456789101112131415161718192021222324function Ai = break_continue_return() i = 1;while i if i ==1||i==2 i=i+1; disp(&#x27;进入continue中断控制流&#x27;) continue disp(&#x27;continue已执行&#x27;) end while i if i == 3||i==4 disp(&#x27;进入break控制流&#x27;) break; disp(&#x27;break已执行&#x27;) end end i = i+1;%知识点：通过观察命名窗口 i 值显示情况，理解break if i==5 disp(&#x27;进入return中段控制流&#x27;) return disp(&#x27;return已执行&#x27;) end end end 控制程序代码多少的顺序：continue&lt;=break&lt;=return ¶函数文件操作 .m程序文件包括脚本和函数文件两类。 脚本M文件:一系列的matlab指令和命令组成的纯文本格式的M文件。在命令窗口中直接输入edit命令，或是单击常用工具栏上的“新建”图标，可以打开一个新的M文件编辑窗口。 使用脚本式的M文件，可以使程序的输入变得简单、快速和方便。 ¶函数文件 语法 function [y1,…,yN] = myfun(x1,…,xM)&amp;emsp;建立新的函数 global X Y Z &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;ensp;定义全局变量 123456789function [m,s] = function_stat2(x)n = length(x);m = avg(x,n); %计算均值s = sqrt(sum((x-m).^2)/n); %计算标准差endfunction m = avg(x,n)m = sum(x)/n;end 特定规则： 可执行代码第一行必须以单词function作为引导词，必须遵循如下形式：function [out1,out2,..]=filename(in1,in2,..) 调用时识别m文件的文件名而不识别&lt;函数名&gt;。 程序中的变量均为局部变量，不保存在工作空间中。其变量只在函数运行期间有效。 区别脚本文件和函数文件： 有无funciton; 通信（指与工作空间）方面不同，进入函数区后，函数内变量都出现workspace中，函数运行结束后，只有函数的输入()和输出[]和matlab平台的workspace交互） 若想使得函数非输入()非输出量[]与函数外程序交互，可以使用global。 例：建立函数文件实现计算一串数值的均值与标准差 例题延申: 该函数文件名和函数名不一致，如何在命令窗口运行该函数 调用文件名。此外，建议编程时将文件名和函数名改成一致 直接使用m文件工具栏的 run 运行程序 可以么? 不行，带输入的函数文件运行必须输入需要的参数的具体值 本程序带私有函数，其中主函数、私有函数分别是 函数：[m,s] = function_stat2(x)，私有函数：m = avg(x,n) ¶脚本文件中的函数 在名为 integrationScript.m 的文件中定义一个脚本，以计算被积函数在 $2\\pi/3$ 处的值，并计算曲线下方从 0 到 $\\pi$的面积。包括一个局部函数，用于定义被积函数 $ {\\sin{(x)}}^3 $。 注意：在脚本中包括函数需要安装 MATLAB® R2016b 或更高版本。 12345678910111213% Compute the value of the integrand at 2*pi/3.x = 2*pi/3;y = myIntegrand(x)% Compute the area under the curve from 0 to pi.xmin = 0;xmax = pi;f = @myIntegrand;a = integral(f,xmin,xmax)function y = myIntegrand(x) y = sin(x).^3;end ¶函数句柄feval Feval函数的作用是字符串调用M文件，在一些情况下，用户需要把一个函数的字符串传递给一个函数进行计算。使用格式如下： feval(F,x1,…,xn)命令计算F关于参数x1、…、xn的值，F为函数名或是函数句柄。若F=@foo，那么feval(F,9,54)等价于foo(9,54)。 [y1,…,yn]=feval(@F,x1,…,xn)命令返回多个参数。 语法：[y1,...,yN] = feval(fun,x1,...,xM) 示例： 123456789101112fun = &#x27;cos&#x27;fun = @sin% 如果已有函数句柄，不需要使用 feval，因为您可以直接调用函数句柄。以下语句的结果是相等的。fh = @eig;[V,D] = fh(A)[V,D] = feval(@eig,A)feval(函数句柄，参数列表）f_h=@plotfeval(f_h,0:10,0:10) ¶程序间的调用 在名为 stat2.m 的文件中定义两个函数，其中第一个函数调用第二个函数。 123456789function [m,s] = stat2(x) n = length(x); m = avg(x,n); s = sqrt(sum((x-m).^2/n));endfunction m = avg(x,n) m = sum(x)/n;end 12345678910111213141516171819function temp celfun=&#123;&#x27;funsina&#x27;;&#x27;funcos&#x27;&#125;; celou=&#123;&#125;;x=-pi:0.2:pi; for k=1:2 fun=celfun&#123;k&#125;; oumai=funchildren(fun,x); celou&#123;k&#125;=oumai; end figure(1);plot(x,celou&#123;1&#125;(:),x,celou&#123;2&#125;(:))endfunction ouchi=funchildren(fun,x) ouchi=feval(fun,x); endfunction y=funsina(x) y=sin(x);endfunction y=funcos(x) y=cos(x);end 123- 解读：私有函数，当m文件中有多个function，则第2个以后的function为私有函数。+ 局部函数仅可供同一个文件中的其他函数使用+ feval(fan, X): fun-用户定义的函数名，相当于句柄；X：fun()函数中要传递的参数。 ¶变量 ¶全局变量global 没有特别声明的变量是局部变量. 语法：global var1 ... varN 【例题描述】：声明global变量，研究其工作空间 1234567891011function lang_globalclear;clcglobal Xtttest(10)fprintf(&#x27;Global variable is set to %d\\n&#x27;, X);function tttest(r)global XX=r;clear XX=5; ¶私有函数 一个M函数文件中，可以有多个函数，其中主函数出现在最上方，子函数仅能被同一文件中的函数调用。 ¶创建符号变量函数syms 作用：创建符号标量变量、函数和矩阵变量。 语法： syms var1 … varN syms var1 … varN [n1 … nM] syms var1 … varN n syms ___ set syms f(var1,…,varN) syms f(var1,…,varN) [n1 … nM] syms f(var1,…,varN) n syms var1 … varN [nrow ncol] matrix syms var1 … varN n matrix syms(symArray) syms S = syms 创建符号标量变量 x 和 y。 12345syms x yxx = xyy = y 使用自动生成的元素 a 1 ,…,a 4 创建符号标量变量 a 的 1×4 向量。 此命令还会在 MATLAB 工作区中创建符号标量变量 a1、…、a4。 1234567891011 syms a [1 4]aa = ( $a_1, a_2, a_3, a_4$ )whos Name Size Bytes Class Attributes a 1x4 8 sym a1 1x1 8 sym a2 1x1 8 sym a3 1x1 8 sym a4 1x1 8 sym 使用自动生成的元素创建符号标量变量的 3×4 矩阵。 元素的形式为 $A_{i,j}$ ，它生成符号矩阵变量 $A_{1,1} $,…,$A_{3,4}$ 。 1234567A [3 4]AA = [A1_1, A1_2, A1_3, A1_4] [A2_1, A2_2, A2_3, A2_4] [A3_1, A3_2, A3_3, A3_4] ¶确定表达式中的符号变量symvar 语法： C = symvar(expr) 说明： C = symvar(expr) 搜索表达式 expr，查找除 i、j、pi、inf、nan、eps 和公共函数之外的标识符。这些标识符是表达式中变量的名称。symvar 返回字符向量元胞数组 C 中的标识符。如果 symvar 找不到标识符，则 C 是一个空的元胞数组。 1234C = symvar(&#x27;cos(pi*x - beta1)&#x27;) C = 2x1 cell &#123;&#x27;beta1&#x27;&#125; &#123;&#x27;x&#x27; &#125; symvar h函数忽略的常见函数和常量有： 1eps i inf Inf j nan NaN pi ¶符号替换函数subs 语法： subs(s,old,new) subs(s,new) subs(s) s 是等式，old表示旧符号，new表示新符号，返回 s 中用新符号代替所有出现过的旧符号。 12345678syms a bsubs(a + b, a, 4) ans = b + 4subs(a*b^2, a*b, 5) ans = 5*b ¶结合符号函数解微分方程 ¶求解一阶微分方程 $\\frac{dy}{dt} = ay$ 使用 diff 指定一阶导数，使用 == 指定方程。 然后，使用 dsolve 求解方程。 123syms y(t) aeqn = diff(y,t) == a*y;S = dsolve(eqn) $S = C_1e^{at}$ 该解决方案包括一个常数。 要消除常数，请参阅使用条件求解微分方程。 有关完整的工作流程，请参阅求解偏微分方程。 ¶求解二阶微分方程$\\frac{d^2y}{dt^2} = ay$ 使用 diff(y,t,2) 指定 y 的二阶导数，使用 == 指定方程。 然后，使用 dsolve 求解方程。 123syms y(t) aeqn = diff(y,t,2) == a*y;ySol(t) = dsolve(eqn) 解得：$ySol(t) = C_1e^{-\\sqrt{a}t}+C_2e^{\\sqrt{a}t}$ ¶求解带有初始值的微分方程 使用 == 运算符将初始条件指定为 dsolve 的第二个输入。 指定条件会从解中消除任意常数，例如 C1、C2、…。 1234syms y(t) aeqn = diff(y,t) == a*y;cond = y(0) == 5;ySol(t) = dsolve(eqn,cond) 解得：$ySol(t) = 5e^{at}$ ¶求解带有初值的二阶微分方程 求解二阶微分方程$\\frac{d^2y}{dt^2} = a^2$，初始条件为$y(0) = b, y^{'}(0) = 1$ 12345syms y(t) a b eqn = diff(y,t,2) == a^2*y;Dy = diff(y,t);cond = [y(0)==b, Dy(0)==1];ySol(t) = dsolve(eqn,cond) 解得：$ySol(t) = \\frac{e^{at}(ab+1)}{2a}+\\frac{e^{-at}(ab-1)}{2a}$ ¶求解微分方程组 求解微分方程组： $\\frac{dy}{dt} = z$; $\\frac{dz}{dt} = -y$ 1234567891011syms y(t) z(t)eqns = [diff(y,t) == z, diff(z,t) == -y]; S = dsolve(eqns) S = struct with fields: z: [1x1 sym] y: [1x1 sym]Access the solutions by addressing the elements of the structure. ySol(t) = S.y zSol(t) = S.z $ySol(t) = C_1cos(t)+C_2sin(t)$ $zSol(t) = C_2cos(t)-C_1sin(t)$ ¶ode45 普通4-5阶法解微分方程 语法： [t,y] = ode45(odefun,tspan,y0) [t,y] = ode45(odefun,tspan,y0,options) [t,y,te,ye,ie] = ode45(odefun,tspan,y0,options) sol = ode45(___) 说明: [t,y] = ode45(odefun,tspan,y0)（其中 tspan = [t0 tf]）求微分方程组 y′=f(t,y) 从 t0 到 tf 的积分，初始条件为 y0。解数组 y 中的每一行都与列向量 t 中返回的值相对应。 ¶利用ode函数解微分方程 在这里我们着重介绍ode45解常微分方程的格式和使用方法，ode45的调用格式如下： 12[t,y]=ode45(@odefun,tspan,y0,options,para)，dy=odefun(t,y,para) 举例：feval(@sin,5)中feval的意义，第一个输入是“调用函数”，第二个及以后输入是“调用函数输入”。 ode45的: 第1个输入(@odefun是“调用函数”； 1234odefun为常微分方程的函数名，编写格式如下： function dy=odefun(t,y,para) … dy=… 其中t为时间变量，y为方程的状态变量，而dy为状态变量的导数，para为需要传递的参数。在输入上写上t来占位【不管odefun中是否显含t，均要输入t】，自编的ode调用格式没有这种限制。 第2个输入tspan表示积分时间段,tspan=[t0:step:tf]; 第3个输入y0是微分方程特解的初值，y解的未知量（状态）,y0的元素个数对应状态维数; 第4个输入options是对ode45进行设置项（可缺省），用odeset设置，【了解，可在命令窗口输入odeset，观察仿真结果】，常用选项如下： RelTol——相对误差容许上限，默认值为0.001，为保证较高精度，可再适当减小该值； AbsTol——表示每个状态变量允许的绝对误差，默认值为 ； MaxStep——求解方程最大允许步长； 第5个量是参数para,为调用函数与方程函数之间需要传递的参数，如果有多个参数，可以用逗号隔开，该参数可缺省。 ¶一次微分方程 可以在对求解器的调用中将具有单个解分量的简单 ODE 指定为匿名函数。 即使未使用其中一个输入，匿名函数也必须接受两个输入 (t,y)。 例如：解该微分方程：$y’ = 2t$，使用[0,5]的时间区间和初始条件$y_0=0$。 123tspan = [0 5];y0 = 0;[t,y] = ode45(@(t,y) 2*t, tspan, y0); ¶解微分方程组 $y’_1 = y_2$ $y’_2 = \\mu (1 - y^2_1) y_2 - y_1$ 在函数文件 function file vdp1.m中，使变量$\\mu = 0$, $y_1$ 和 $y_2$ 是二元素向量 dydt 的条目 y(1) 和 y(2)。函数文件如下编写： 123456789function dydt = vdp1(t,y)%VDP1 Evaluate the van der Pol ODEs for mu = 1%% See also ODE113, ODE23, ODE45.% Jacek Kierzenka and Lawrence F. Shampine% Copyright 1984-2014 The MathWorks, Inc.dydt = [y(2); (1-y(1)^2)*y(2)-y(1)]; 在初始值为[2 0]的时间间隔[0 20]上使用ode45函数求解ODE。结果输出是时间点t和解数组y的列向量。y中的每一行对应于t的对应行中返回的时间。y的第一列对应于$y_1$，第二列对应于$y_2$。 123456[t,y] = ode45(@vdp1,[0 20],[2; 0]);plot(t,y(:,1),&#x27;-o&#x27;,t,y(:,2),&#x27;-o&#x27;)title(&#x27;Solution of van der Pol Equation (\\mu = 1) with ODE45&#x27;);xlabel(&#x27;Time t&#x27;);ylabel(&#x27;Solution y&#x27;);legend(&#x27;y_1&#x27;,&#x27;y_2&#x27;) ¶解有外部输入的微分方程 ode45仅适用于使用两个输入参数t和y的函数。但是，可以通过在函数外部定义额外参数并在指定函数句柄时传入来传入这些参数。 例如：二阶微分方程$y’’ = \\frac{A}{B} ty$; 先将它整理成一阶微分方程组的形势： $y’_1 = y_2$ $y’_2 = \\frac{A}{B} ty_1$ 函数文件odefcn.m 有四个输入参数： t, y, A and B; 1234function dydt = odefcn(t,y,A,B)dydt = zeros(2,1);dydt(1) = y(2);dydt(2) = (A/B)*t.*y(1); 要用$ode45$解该微分方程,需要指定函数句柄，以便将A和B的预定义值传递给odefcn。 1234567A = 1;B = 2;tspan = [0 5];y0 = [0 0.01];[t,y] = ode45(@(t,y) odefcn(t,y,A,B), tspan, y0);plot(t,y(:,1),&#x27;-o&#x27;,t,y(:,2),&#x27;-.&#x27;) ¶解多初值情况下的 ODE 等式$f(t,y)=−2y+2 cos(t) sin(2t)$，方程中只有y， t两个输入。$y_0 = -5:5$ 12345678910yprime = @(t,y) -2*y + 2*cos(t).*sin(2*t);y0 = -5:5; tspan = [0 3];[t,y] = ode45(yprime,tspan,y0);plot(t,y)grid onxlabel(&#x27;t&#x27;)ylabel(&#x27;y&#x27;)title(&#x27;Solutions of y&#x27;&#x27; = -2y + 2 cos(t) sin(2t), y(0) = -5,-4,...,4,5&#x27;,&#x27;interpreter&#x27;,&#x27;latex&#x27;) ¶导入数据 ¶支持的导入文件格式 ¶MATLAB 格式化数据 12345678load(filename)load(filename,variables)load(filename,&#x27;-ascii&#x27;)load(filename,&#x27;-mat&#x27;)load(filename,&#x27;-mat&#x27;,variables)matObj = matfile(filename)matObj = matfile(filename,&#x27;Writable&#x27;,isWritable) ¶readmatrix 从文件中读取矩阵 语法： 123456789A = readmatrix(filename)A = readmatrix(filename,opts)A = readmatrix(___,Name,Value)temp = readmatrix(&#x27;HeatmapTest.xlsx&#x27;)temp = NaN 1.0000 0.5000 0.8000 NaN 0.5000 1.0000 0.2000 NaN 0.8000 0.2000 1.0000 说明： A = readmatrix(filename) 通过从文件中读取列向数据来创建数组。readmatrix 函数可自动检测文件的导入参数。 readmatrix 基于文件的扩展名确定文件格式： .txt、.dat 或 .csv（适用于带分隔符的文本文件） .xls、.xlsb、.xlsm、.xlsx、.xltm、.xltx 或 .ods（适用于电子表格文件） 对于包含数值和文本混合数据的文件，默认情况下，readmatrix 将数据作为数值数组导入。文本变为NaN形式，占据在double类型的矩阵中。 ¶readtable 基于文件创建表 语法： 12345678910111213T = readtable(filename)T = readtable(filename,opts)T = readtable(___,Name,Value)temp = readtable(&#x27;HeatmapTest.xlsx&#x27;)temp = 3×4 table Var1 A B C _____ ___ ___ ___ &#123;&#x27;A&#x27;&#125; 1 0.5 0.8 &#123;&#x27;B&#x27;&#125; 0.5 1 0.2 &#123;&#x27;C&#x27;&#125; 0.8 0.2 1 说明： T = readtable(filename) 通过从文件中读取列向数据来创建表。 readtable 基于文件的扩展名确定文件格式： .txt、.dat 或 .csv（适用于带分隔符的文本文件） .xls、.xlsb、.xlsm、.xlsx、.xltm、.xltx 或 .ods（适用于电子表格文件） readtable 为该文件中的每列在 T 中创建一个变量并从文件的第一行中读取变量名称。 默认情况下，readtable 会根据在输入文件的每列中检测到的数据值来创建具有适当数据类型的变量。 读取为表的形式，若其中有字符则被解析为字符形式，数据则被解析为double形式 ¶readcell 从文件中读取元胞数组 语法 1234567891011C = readcell(filename)C = readcell(filename,opts)C = readcell(___,Name,Value)temp = readcell(&#x27;HeatmapTest.xlsx&#x27;)temp = 4×4 cell 数组 &#123;1×1 missing&#125; &#123;&#x27;A&#x27; &#125; &#123;&#x27;B&#x27; &#125; &#123;&#x27;C&#x27; &#125; &#123;&#x27;A&#x27; &#125; &#123;[ 1]&#125; &#123;[0.5000]&#125; &#123;[0.8000]&#125; &#123;&#x27;B&#x27; &#125; &#123;[0.5000]&#125; &#123;[ 1]&#125; &#123;[0.2000]&#125; &#123;&#x27;C&#x27; &#125; &#123;[0.8000]&#125; &#123;[0.2000]&#125; &#123;[ 1]&#125; 说明： C = readcell(filename) 通过从文件中读取列向数据来创建元胞数组。 readcell 基于文件的扩展名确定文件格式： .txt、.dat 或 .csv（适用于带分隔符的文本文件） .xls、.xlsb、.xlsm、.xlsx、.xltm、.xltx 或 .ods（适用于电子表格文件） C = readcell(filename,opts) 还使用导入选项 opts。 C = readcell(_,Name,Value) 基于文件创建元胞数组，并通过一个或多个名称-值对组参数指定其他选项。您需要在上述语法的输入参数之后指定名称-值对组。 要为数据设置特定的导入选项，您可以使用 opts 对象，也可以指定名称-值对组。当您指定除 opts 之外的名称-值对组时，readcell 仅支持下列名称-值对组： 文本文件 - DateLocale、Encoding 电子表格文件 - Sheet、UseExcel 将所所有元素均作为元胞数组导入元胞矩阵中 ¶importdata 从文件加载数据 语法： 12345678910111213141516171819202122232425A = importdata(filename)A = importdata(&#x27;-pastespecial&#x27;)A = importdata(___,delimiterIn)A = importdata(___,delimiterIn,headerlinesIn)[A,delimiterOut,headerlinesOut] = importdata(___)temp = importdata(&#x27;HeatmapTest.xlsx&#x27;)temp = 包含以下字段的 struct: data: [3×3 double] textdata: &#123;4×4 cell&#125; temp.dataans = 1.0000 0.5000 0.8000 0.5000 1.0000 0.2000 0.8000 0.2000 1.0000 temp.textdataans = 4×4 cell 数组 &#123;0×0 char&#125; &#123;&#x27;A&#x27; &#125; &#123;&#x27;B&#x27; &#125; &#123;&#x27;C&#x27; &#125; &#123;&#x27;A&#x27; &#125; &#123;0×0 char&#125; &#123;0×0 char&#125; &#123;0×0 char&#125; &#123;&#x27;B&#x27; &#125; &#123;0×0 char&#125; &#123;0×0 char&#125; &#123;0×0 char&#125; &#123;&#x27;C&#x27; &#125; &#123;0×0 char&#125; &#123;0×0 char&#125; &#123;0×0 char&#125; 说明： A = importdata(filename) 将数据加载到数组 A 中。 A = importdata(‘-pastespecial’) 从系统剪贴板而不是文件加载数据。 A = importdata(_,delimiterIn) 将 delimiterIn 解释为 ASCII 文件 filename 或剪贴板数据中的列分隔符。您可以将 delimiterIn 与以上语法中的任何输入参数结合使用。 A = importdata(_,delimiterIn,headerlinesIn) 从 ASCII 文件 filename 或剪贴板加载数据，并读取从第 headerlinesIn+1 行开始的数值数据。 [A,delimiterOut,headerlinesOut] = importdata(_) 使用先前语法中的任何输入参数， 在 delimiterOut 中额外返回检测到的输入 ASCII 文件中的分隔符，以及在 headerlinesOut 中返回检测到的标题行数。 返回一个struct类型，默认将文本与数值分开 ¶热图绘制 heatmap ¶使用自定义轴标签基于矩阵数据创建热图 创建一个数据矩阵。然后创建矩阵值的热图。通过将前两个输入参数指定为所需的标签，在 x 轴和 y 轴上使用自定义标签。通过设置 HeatmapChart 对象的属性，指定标题和轴标签。 1234cdata = [45 60 32; 43 54 76; 32 94 68; 23 95 58];xvalues = &#123;&#x27;Small&#x27;,&#x27;Medium&#x27;,&#x27;Large&#x27;&#125;;yvalues = &#123;&#x27;Green&#x27;,&#x27;Red&#x27;,&#x27;Blue&#x27;,&#x27;Gray&#x27;&#125;;h = heatmap(xvalues,yvalues,cdata); 对于已有表格数据的情况，例如该表格HeatmapTest.xlsx: 先将数据与字符分离，再合与途中； 123456temp = importdata(&#x27;HeatmapTest.xlsx&#x27;);data = temp.data;A = temp.textdata;xvar = A(1, 2:end);yvar = A(2:end, 1);heatmap(xvar, yvar, data); ¶轨道六根数演示题 ¶主程序填空 123456%%%%% Rho.mclc;clear;%轨道六根数a=10000e3;e=0.2;i=0;omega=0;Omega=0;fai=0;gd = [a e i omega Omega fai];[R0,V0]=RV(gd)%初始位置速度 ¶子程序编写 12345678910111213141516171819202122232425%%% RV.mfunction [R,V]=RV(gd) mui = 398603e9; a = gd(1); e = gd(2); i = gd(3); omega = gd(4); Omega = gd(5); fai = gd(6); u = omega + fai; p = a*(1-e^2); redius = p / (1 + e*cos(fai)); A = [cos(Omega)*cos(u) - sin(Omega)*sin(u)*cos(i);... sin(Omega)*cos(u) + cos(Omega)*sin(u)*cos(i);... sin(i)*sin(u)]; velocity = sqrt(mui / p); B = [-cos(Omega)*(sin(u) + e*sin(omega)) - sin(Omega)*(cos(u) + e*cos(omega))*cos(i);... -sin(Omega)*(sin(u) + e*sin(omega)) + cos(Omega)*(cos(u) + e*cos(omega))*cos(i);... sin(i)*(cos(u) + e*cos(omega))]; R = redius * A; V = velocity*B;end ¶绘制初始 r、v 随半长轴 a 变化曲线 ¶程序代码 12345678910111213141516171819202122232425262728293031323334353637383940%%% chang_a.mA=10000e3:100:12000e3;e=0.8;i=278;omega=69;Omega=45;fai=38;Ar=[]; %创建空矩阵，目的是存储程序输出量R VAv=[];for k=1:1:length(A) %循环体结束条件不要人为输入数字 a= A(k); gd=[a e i omega Omega fai]; [R0,V0]=RV(gd); Ar=[Ar, R0]; %矩阵扩维 Av=[Av, V0];endsubplot(2, 3, 1)plot(A, Ar(1, :));title(&#x27;随着半长轴a变化 r_x的变化&#x27;);subplot(2, 3, 2)plot(A, Ar(2, :));title(&#x27;随着半长轴a变化 r_y的变化&#x27;);subplot(2, 3, 3)plot(A, Ar(3, :));title(&#x27;随着半长轴a变化 r_z的变化&#x27;);subplot(2, 3, 4)plot(A, Av(1, :));title(&#x27;随着半长轴a变化 v_x的变化&#x27;);subplot(2, 3, 5)plot(A, Av(2, :));title(&#x27;随着半长轴a变化 v_y的变化&#x27;);subplot(2, 3, 6)plot(A, Av(3, :));title(&#x27;随着半长轴a变化 v_z的变化&#x27;);%%% 子程序 RV.m%% 同上 ¶绘制初始 r、v 随引力系数的曲线 查阅太阳系八大行星引力系数，及太阳、月球、木卫 1、木卫 2 引力系数，建立引力系数矩阵 B=[八大行星引力系数 太阳 月球 木卫 1 木卫 2]单位($m^3s^{-2}$) （备注：学生填写该中括号），建立相应天体半径矩阵 R=[八大行星半径 太阳 月球 木卫 1 木卫 2]。 123456+ 引力常数 mu = GM， 与质量成正比；+ 地球引力常数 mu = 3.98603e14； 按照[水星 金星 地球 火星 木星 土星 天王星 海王星 太阳 月球 木卫1 木卫2]+ 质量 M = [0.055 0.815 1 0.107 318 95 14 17 3.329e5 0.012345679012345678 0.01490288010716678 0.008037508372404554]+ 引力系数 B = M * mu+ 天体半径矩阵：+ R = [2.4397e3 6.0518e3 6.371e3 3.3895e3 6.9911e4 5.8232e4 2.5362e4 2.4622e4 6.9634e5 1.7374e3 1.8216e3 1.5608e3] 设卫星半长轴矩阵 Aa=R+200 公里，绘制初始 r、v 随引力系数的曲线。 ¶编程思路 在主函数中计算出矩阵B、 R，然后在循环体中多次调用 RV 函数，改变gd的值。 ¶程序代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344%%% changer_rv.mclc;clear;mu = 3.98603e14;M = [0.055 0.815 1 0.107 318 95 14 17 3.329e5 ... 0.012345679012345678 0.01490288010716678 0.008037508372404554];B = M * mu;% 单位（m）R = 1000 * [2.4397e3 6.0518e3 6.371e3 3.3895e3 6.9911e4 5.8232e4... 2.5362e4 2.4622e4 6.9634e5 1.7374e3 1.8216e3 1.5608e3];a = R + 2e5;e=0.2;i=0;omega=0;Omega=0;fai=0;R = [];V = [];for k = 1:12 gd = [a(k) e i omega Omega fai B(k)]; [R0, V0] = RV(gd); R = [R, R0]; V = [V, V0];end%%% RV.mfunction [R,V]=RV(gd) mui = gd(7); a = gd(1); e = gd(2); i = gd(3); omega = gd(4); Omega = gd(5); fai = gd(6); u = omega + fai; p = a*(1-e^2); redius = p / (1 + e*cos(fai)); A = [cos(Omega)*cos(u) - sin(Omega)*sin(u)*cos(i);... sin(Omega)*cos(u) + cos(Omega)*sin(u)*cos(i);... sin(i)*sin(u)]; velocity = sqrt(mui / p); B = [-cos(Omega)*(sin(u) + e*sin(omega)) - sin(Omega)*(cos(u) + e*cos(omega))*cos(i);... -sin(Omega)*(sin(u) + e*sin(omega)) + cos(Omega)*(cos(u) + e*cos(omega))*cos(i);... sin(i)*(cos(u) + e*cos(omega))]; R = redius * A; V = velocity*B;end ¶过载表征的飞行器运动仿真 ¶问题描述 要求：建立以$n_x 、n_y 、n_z$为输入的微分函数，仿真状态微分量$\\dot{x}$ 随过载$n_x 、n_y 、n_z$序列的变化情况。 条件 时间序列$A_t$ ——0到10秒，每0.5秒采样1次; 轴向过载序列$A_{nx} = K_{nx} \\cdot A_t$ ——假设随时间变化，其中$ K_{nx} = 0.4$； 法向过载序列 $A_{ny}$——恒定值，其值为$K_{ny}$ = 0.5； 横向过载序列$A_{nz}$ ——随时间变化正弦序列，正弦幅值为1，正弦周期与时间序列$A_t$相等。 假设输入量 $n_x 、n_y 、n_z$在每个采样周期内保持不变。 ¶数学模型 ¶仿真程序 12345678910111213141516171819202122232425262728293031323334353637%%% overload.mclc;clear;rd=pi/180; X=[0;10000;0;400;5*rd;0];A_t=linspace(0,10,21);knx=-0.4;A_nx=knx*A_t;kny=0.5;A_ny=ones(1,length(A_t))*kny;w=2*pi/(A_t(end)-A_t(1));A_nz=sin(w*A_t); A_X=[];A_dX=[];for k=1:1:length(A_t) t=0.5; nx=100; ny=100; nz=100; dX=dif_n(t, X, nx, ny, nz); A_x=[A_X,X]; A_dX=[A_dX,dX]; X=X+dX;endplot(A_t,A_dX(1,:))%%% dif_n.mfunction dX=dif_n(t,X,nx,ny,nz) x=X(1); y=X(2); z=X(3); v=X(4); the=X(5); psi_c=X(6); g=9.8; dx=v * cos(the) * cos(psi_c); dy=v * sin(the); dz=-v * cos(the) * sin(psi_c); dv=g * (nx - sin(the)); dthe=g * (ny - cos(the))/v; dpsi_c=-g * nz/(v*cos(the)); dX=[dx;dy;dz;dv;dthe;dpsi_c];end ¶结课作业lang 程序延伸：如果不用feval命令，私有函数“ouchi=funchildren(fun,x)”仍以以函数形参fun作为输入，还能实现上述代码的仿真图么？ 12345678910111213141516171819202122232425262728function lang_feval %celfun=&#123;&#x27;funsina&#x27;;&#x27;funcos&#x27;&#125;; celou=&#123;&#125;;x=-pi:0.2:pi; for k=1:2 oumai=funchildren(k,x); celou&#123;k&#125;=oumai; end figure(1);plot(x,celou&#123;1&#125;(:),x,celou&#123;2&#125;(:))endfunction ouchi=funchildren(k,x)switch k case 1 ouchi = funsina(x); case 2 ouchi = funcos(x); otherwise contiune;endendfunction y=funsina(x) y=sin(x);endfunction y=funcos(x) y=cos(x);end ¶矩阵与绘图 ¶Tic和toc 12345678910clc;clear;t = zeros(1,100); for n =1:100 A=rand(n,n); b=rand(n,1); tic; x=A\\b; t(n)=toc; endplot(t) **程序解读，按照程序运行流程上述程序完成的功能是：**生成随机矩阵A和随机向量b，计算x = A \\ b，返回运算所需时间，并存储在t(n)内. ¶矩阵叉乘 12345clear;A1=[1 3 1;2 2 3];B1=[1 4 1;2 2 4];size(A1,1) cross(A1,B1,1) 解读cross(A1,B1,1)无法运行的原因 如果 A 和 B 为向量，则它们的长度必须为 3。如果 A 和 B 为矩阵或多维数组，则它们必须具有相同大小。在这种情况下，cross 函数将 A 和 B 视为三元素向量集合。该函数计算对应向量沿大小等于 3 的第一个数组维度的叉积。C = cross(A,B,dim) 计算数组 A 和 B 沿维度 dim 的叉积。A 和 B 必须具有相同的大小，并且 size(A,dim) 和 size(B,dim) 必须为 3。dim 输入是一个正整数标量。 例题中使用的是cross(A, B, dim) 语句，但size(A1, 1)标明A1的维度为2不为3，故程序出错。但若改为cross(A1',B1',1) 则可运行 1234567891011clear;A1=[1 3 1;2 2 3];B1=[1 4 1;2 2 4];size(A1,1) cross(A1&#x27;,B1&#x27;,1) ans = -1 2 0 -2 1 0 ¶对图写代码 123456789101112131415clear;x = linspace(-2*pi, -pi);y = cos(x);plot(x, y, &#x27;r-&#x27;, &#x27;LineWidth&#x27;, 2);grid on;xticks(linspace(-2*pi, -pi, 5));yticks(linspace(-1, 1, 11));xticklabels(&#123;&#x27;-2pi&#x27;,&#x27;-7pi/4&#x27;,&#x27;-3pi/2&#x27;,&#x27;-5pi/4&#x27;,&#x27;-pi&#x27;&#125;);title(&#x27;Plot of cos(\\theta)&#x27;);xlabel(&#x27;\\theta \\in [-2\\pi, -\\pi]&#x27;);ylabel(&#x27;cos(\\theta)&#x27;);location_x = -1.5*pi;tex = &#123;&#x27;\\leftarrow cos(-1.5*\\pi)&#x27;&#125;;text(location_x, cos(location_x), tex); ¶设置断点、逐步解释程序 ¶程序控制流 1234567891011121314151617181920212223function Ai = break_continue_return(i) while i if i ==1||i==2 i=i+1; disp(&#x27;进入continue中断控制流&#x27;) continue disp(&#x27;continue已执行&#x27;) end while i if i == 3||i==4 disp(&#x27;进入break控制流&#x27;) break; disp(&#x27;break已执行&#x27;) end end i = i+1;%知识点：通过观察命名窗口 i 值显示情况，理解break if i==5 disp(&#x27;进入return中段控制流&#x27;) return disp(&#x27;return已执行&#x27;) end endend 在第三行设置断点： i = 2, 第一次进入while大循环 if判断i == 2， 进入选择控制语句中，执行i = i + 1 = 3，并且打印’进入continue中断控制流’； 遇到 continue ，跳出if区域，函数只是跳出了if语句区域，并没有跳出while循环； i = 3， 进入while小循环，判断 i == 3， 进入第二个if控制语句中，打印’进入break控制流’， 遇到 break ，跳出 if 和 小循环 while 区域； 执行 i = i + 1 = 4， 判断 i != 5, 继续进行第二次while大循环； 同第四步、第五步； 执行 i = i + 1 = 5， 判断 i == 5, 进入第三个if控制语句中，打印’进入return中段控制流’； 向下执行，遇到 return ，跳出 if 和 while 大循环，结束程序，最终i = 5。 ¶feval 12345678910111213141516171819function lang_feval celfun=&#123;&#x27;funsina&#x27;;&#x27;funcos&#x27;&#125;; celou=&#123;&#125;;x=-pi:0.2:pi; for k=1:2 fun=celfun&#123;k&#125;; oumai=funchildren(fun,x); celou&#123;k&#125;=oumai; end figure(1);plot(x,celou&#123;1&#125;(:),x,celou&#123;2&#125;(:))endfunction ouchi=funchildren(fun,x) ouchi=feval(fun,x); endfunction y=funsina(x) y=sin(x);endfunction y=funcos(x) y=cos(x);end 在第2行处设置断点: 设置元胞数组celfun={‘funsina’;‘funcos’}； 设置空元胞数组 celou 及自变量$ x \\in [-\\pi, \\pi]$； 当 k = 1 时， fun = celfun{1} = ‘funsina’； 将 fun、x 传入 函数 funchildren 中，函数 funchildren 再将句柄 funsin 和自变量 传给函数 funsina 进行计算，得到相应的 y 的值（一个1 * n 的向量） 返回给 ouchi ，再返回给 oumai； 将 oumai 中的向量交给元胞数组 celou 储存在 celou{1}中； 同3、4、5； 绘制图形。 ¶过载表征状态微分量 123456789101112131415161718192021222324252627282930313233343536373839404142434445%% overload.mclc;clear;rd=pi/180; X=[0;10000;0;400;5*rd;0];A_t=linspace(0,10,21);knx=-0.4;A_nx=knx*A_t;kny=0.5;A_ny=ones(1,length(A_t))*kny;w=2*pi/(A_t(end)-A_t(1));A_nz=sin(w*A_t); X = [0 10000 0 400 5 0];A_X=[];A_dX=[];for k=1:1:length(A_t) t=0.5; nx=100; ny=100; nz=100; %设置输入量数值 dX=dif_n(t, X, nx, ny, nz); A_x=[A_X,X]; A_dX=[A_dX,dX]; X=X+dX;end%plot(A_t,A_dX(1,:))A_dX_X = A_dX(1:3, :);A_dX_angle = A_dX(4:6, :);figure(1)mesh(A_dX_X);figure(2)mesh(A_dX_angle);%% dif_n.mfunction dX=dif_n(t,X,nx,ny,nz) x=X(1); y=X(2); z=X(3); v=X(4); the=X(5); psi_c=X(6); g=9.8; dx=v * cos(the) * cos(psi_c); dy=v * sin(the); dz=-v * cos(the) * sin(psi_c); dv=g * (nx - sin(the)); dthe=g * (ny - cos(the))/v; dpsi_c=-g * nz/(v*cos(the)); dX=t*[dx;dy;dz;dv;dthe;dpsi_c];end","categories":[{"name":"Language","slug":"Language","permalink":"http://example.com/categories/Language/"}],"tags":[{"name":"Language","slug":"Language","permalink":"http://example.com/tags/Language/"}]},{"title":"微积分(2)-二元积分","date":"2022-06-22T08:11:02.000Z","path":"2022/06/22/微积分-1二元积分/","text":"¶积分 ¶格林公式 格林定理给出了沿封闭曲线 C 的线积分与以 C 为边界的平面区域 D 上的双重积分的联系。格林定理是斯托克斯定理的二维特例。 设闭区域 D 由分段光滑的简单曲线 L 围成，函数 P(x,y)及 Q(x,y)在 D 上有一阶连续偏导数，则有： 其中闭环曲线L逆时针旋转时取正。它给出了沿着闭曲线C的曲线积分与C所包围的区域D上的二重积分之间的关系。另见格林恒等式。格林公式还可以用来计算平面图形的面积。 ¶斯托克斯定理 ¶散度 散度的物理意义表示流体微团在在运动过程中体积相对变化率的极限。 将各速度分量在其分量方向上的方向导数和称为速度矢量的散度 即： ¶旋度 ¶斯托克斯定理 ¶曲线积分 ¶第一类曲线积分 是对一段曲线（弧）的积分。积分微元为弧微分，被积函数由于在弧线上取值，因此是二元函数.积分值记为. 其中被积函数在上取值。 弧上的点满足的方程可以由两种形式给出，一种是,另一种则是参数方程的形式 对于第一种形式，被积函数可以写成只和有关的一元函数，即，弧微分可以写成, 则曲线积分化为一重积分. 对于第二种形式，被积函数可以写成只和有关的一元函数，即 ，弧微分可以写成 这就是第一类曲线积分，可用于求解不均匀曲线段的质量，被积函数即为线质量密度。 ¶第二类曲线积分 ¶解微分方程 ¶可分离变量类型 ¶齐次方程 等式左边为导数，右边为的函数，这也是很特殊的形式。 令，则。 由乘积求导法则，有。 由即可得到 ¶一阶常微分方程","categories":[{"name":"Math","slug":"Math","permalink":"http://example.com/categories/Math/"},{"name":"微积分","slug":"Math/微积分","permalink":"http://example.com/categories/Math/%E5%BE%AE%E7%A7%AF%E5%88%86/"}],"tags":[{"name":"Math","slug":"Math","permalink":"http://example.com/tags/Math/"}]}]